package nro.models.npc;

import java.awt.event.FocusEvent;

import nro.attr.Attribute;
import nro.attr.AttributeManager;
import nro.consts.*;
import nro.dialog.ConfirmDialog;
import nro.dialog.MenuDialog;
import nro.jdbc.daos.PlayerDAO;
import nro.lib.RandomCollection;
import nro.models.boss.Boss;
import nro.models.boss.BossFactory;
import nro.models.boss.BossManager;
import nro.models.boss.event.EscortedBoss;
import nro.models.boss.event.Qilin;
import nro.models.clan.Clan;
import nro.models.clan.ClanMember;
import nro.models.consignment.ConsignmentShop;
import nro.models.item.Item;
import nro.models.item.ItemOption;
import nro.models.item.ItemTemplate;
import nro.models.map.ItemMap;
import nro.models.map.Map;
import nro.models.map.SantaCity;
import nro.models.map.Zone;
import nro.models.map.challenge.MartialCongressService;
import nro.models.map.dungeon.SnakeRoad;
import nro.models.map.dungeon.zones.ZSnakeRoad;
import nro.models.map.mabu.MabuWar;
import nro.models.map.phoban.BanDoKhoBau;
import nro.models.map.phoban.DoanhTrai;
import nro.models.map.war.BlackBallWar;
import nro.models.map.war.NamekBallWar;
import nro.models.player.Inventory;
import nro.models.player.NPoint;
import nro.models.player.Player;
import nro.models.skill.Skill;
import nro.noti.NotiManager;
import nro.server.Maintenance;
import nro.server.Manager;
import nro.server.ServerManager;
import nro.server.io.Message;
import nro.services.*;
import nro.services.func.*;
import nro.utils.Log;
import nro.utils.SkillUtil;
import nro.utils.TimeUtil;
import nro.utils.Util;

import java.io.IOException;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import java.util.Random;
import java.util.stream.Collectors;

import nro.manager.TopManager;
import nro.models.map.mabu.MabuWar14h;
import nro.models.phuban.DragonNamecWar.TranhNgoc;
import nro.models.phuban.DragonNamecWar.TranhNgocService;

import static nro.server.Manager.*;
import static nro.services.func.SummonDragon.*;

/**
 * @author DucSunIT
 * @copyright üíñ GirlkuN üíñ
 */
public class NpcFactory {

    private static boolean nhanVang = true;
    private static boolean nhanDeTu = true;

    // playerid - object
    public static final java.util.Map<Long, Object> PLAYERID_OBJECT = new HashMap<Long, Object>();

    private NpcFactory() {

    }

    public static Npc createNPC(int mapId, int status, int cx, int cy, int tempId, int avartar) {
        Npc npc = null;
        try {
            switch (tempId) {
                case ConstNpc.FIDE:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (player.iDMark.getTranhNgoc() == 1) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU, "C√∫t!Ta kh√¥ng n√≥i chuy·ªán v·ªõi sinh v·∫≠t h·∫° ƒë·∫≥ng", "ƒê√≥ng");
                                return;
                            }
                            this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                    "H√£y mang ng·ªçc r·ªìng v·ªÅ cho ta", "ƒê∆∞a ng·ªçc", "ƒê√≥ng");
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (select) {
                                    case 0:
                                        if (player.iDMark.getTranhNgoc() == 2 && player.isHoldNamecBallTranhDoat) {
                                            if (!Util.canDoWithTime(player.lastTimePickItem, 20000)) {
                                                Service.getInstance().sendThongBao(player, "Vui l√≤ng ƒë·ª£i " + ((player.lastTimePickItem + 20000 - System.currentTimeMillis()) / 1000) + " gi√¢y ƒë·ªÉ c√≥ th·ªÉ tr·∫£");
                                                return;
                                            }
                                            TranhNgocService.getInstance().dropBall(player, (byte) 2);
                                            player.zone.pointFide++;
                                            if (player.zone.pointFide > ConstTranhNgocNamek.MAX_POINT) {
                                                player.zone.pointFide = ConstTranhNgocNamek.MAX_POINT;
                                            }
                                            TranhNgocService.getInstance().sendUpdatePoint(player);
                                        }
                                        break;
                                    case 1:
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.CADIC:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (player.iDMark.getTranhNgoc() == 2) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "C√∫t!Ta kh√¥ng n√≥i chuy·ªán v·ªõi sinh v·∫≠t h·∫° ƒë·∫≥ng", "ƒê√≥ng");
                                return;
                            }
                            this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                    "H√£y mang ng·ªçc r·ªìng v·ªÅ cho ta", "ƒê∆∞a ng·ªçc", "ƒê√≥ng");
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (select) {
                                    case 0:
                                        if (player.iDMark.getTranhNgoc() == 1 && player.isHoldNamecBallTranhDoat) {
                                            if (!Util.canDoWithTime(player.lastTimePickItem, 20000)) {
                                                Service.getInstance().sendThongBao(player, "Vui l√≤ng ƒë·ª£i " + ((player.lastTimePickItem + 20000 - System.currentTimeMillis()) / 1000) + " gi√¢y ƒë·ªÉ c√≥ th·ªÉ tr·∫£");
                                                return;
                                            }
                                            TranhNgocService.getInstance().dropBall(player, (byte) 1);
                                            player.zone.pointCadic++;
                                            if (player.zone.pointCadic > ConstTranhNgocNamek.MAX_POINT) {
                                                player.zone.pointCadic = ConstTranhNgocNamek.MAX_POINT;
                                            }
                                            TranhNgocService.getInstance().sendUpdatePoint(player);
                                        }
                                        break;
                                    case 1:
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.TORIBOT:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                    "Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi c·ª≠a h√†ng ƒë√° q√∫y s·ªë 1 th·ªùi ƒë·∫°i", "C·ª≠a H√†ng");
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                ShopService.gI().openShopSpecial(player, this, ConstNpc.SHOP_TORIBOT, 0, -1);
                            }
                        }
                    };
                    break;
                case ConstNpc.NGO_KHONG:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            this.createOtherMenu(player, ConstNpc.BASE_MENU, "Chu mi nga", "T·∫∑ng qu·∫£\nH·ªìng ƒë√†o\nCh√≠n");
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                int itemNeed = ConstItem.QUA_HONG_DAO_CHIN;
                                Item item = InventoryService.gI().findItemBagByTemp(player, itemNeed);
                                if (item != null) {
                                    RandomCollection<Integer> rc = Manager.HONG_DAO_CHIN;
                                    int itemID = rc.next();
                                    int x = cx + Util.nextInt(-50, 50);
                                    int y = player.zone.map.yPhysicInTop(x, cy - 24);
                                    int quantity = 1;
                                    if (itemID == ConstItem.HONG_NGOC) {
                                        quantity = Util.nextInt(1, 2);
                                    }
                                    int[] itemsNeed = {ConstItem.CHU_GIAI, ConstItem.CHU_KHAI,
                                        ConstItem.CHU_PHONG, ConstItem.CHU_AN};
                                    Random rd = new Random(); // Kh·ªüi t·∫°o Random m·ªôt l·∫ßn

                                    for (int i = 0; i < itemsNeed.length; i++) { // Ch·∫°y v√≤ng l·∫∑p trong kho·∫£ng h·ª£p l·ªá
                                        int randomIndex = rd.nextInt(itemsNeed.length); // Ch·ªçn ch·ªâ s·ªë ng·∫´u nhi√™n trong m·∫£ng
                                        int randomItem = itemsNeed[randomIndex]; // L·∫•y ph·∫ßn t·ª≠ ng·∫´u nhi√™n t·ª´ m·∫£ng
                                        // T·∫°o Item ng·∫´u nhi√™n
                                        Item newItem = ItemService.gI().createNewItem((short) randomItem, 1);
                                        // Th·ª±c hi·ªán c√°c h√†nh ƒë·ªông kh√°c
                                        InventoryService.gI().subQuantityItemsBag(player, item, 1);
                                        InventoryService.gI().sendItemBags(player);
                                        InventoryService.gI().addItemBag(player, newItem, 1);
                                    }
//                                    InventoryService.gI().subQuantityItemsBag(player, item, 1);
//                                    InventoryService.gI().sendItemBags(player);
////                                    ItemMap itemMap = new ItemMap(player.zone, itemID, quantity, x, y, player.id);
//                                    Service.getInstance().dropItemMap(player.zone, itemMap);
                                    npcChat(player.zone, "Xie xie");
                                } else {
                                    Service.getInstance().sendThongBao(player, "Kh√¥ng t√¨m th·∫•y!");
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.DUONG_TANG:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (this.mapId == MapName.LANG_ARU) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "|7|NG≈® H√ÄNH S∆†N"
                                        + "\n|2|A mi ph√≤ ph√≤, th√≠ ch·ªß h√£y gi√∫p gi·∫£i c·ª©u ƒë·ªì ƒë·ªá c·ªßa b·∫ßn tƒÉng ƒëang b·ªã phong ·∫•n t·∫°i ng≈© h√†nh s∆°n."
                                        + "\n|3|T·∫°i ƒë√¢y s·ª©c m·∫°nh d∆∞·ªõi 16 T·ª∑ ƒë√°nh qu√°i ƒë∆∞·ª£c x2 TNSM",
                                        "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                            }
                            if (this.mapId == MapName.NGU_HANH_SON_3) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "A mi ph√≤ ph√≤, th√≠ ch·ªß h√£y thu th·∫≠p b√πa 'gi·∫£i khai phong ·∫•n', m·ªói ch·ªØ 10 c√°i.",
                                        "V·ªÅ\nL√†ng Aru", "T·ª´ ch·ªëi");
                            }
                            if (this.mapId == MapName.NGU_HANH_SON) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "A mi ph√≤ ph√≤, th√≠ ch·ªß h√£y thu th·∫≠p b√πa 'gi·∫£i khai phong ·∫•n', m·ªói ch·ªØ 10 c√°i.",
                                        "ƒê·ªïi ƒë√†o ch√≠n", "Gi·∫£i phong ·∫•n", "T·ª´ ch·ªëi");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == MapName.LANG_ARU) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:

                                                if (!Manager.gI().getGameConfig().isOpenPrisonPlanet()) {
                                                    Service.getInstance().sendThongBao(player,
                                                            "L·ªëi v√†o ng≈© h√†nh s∆°n ch∆∞a m·ªü");
                                                    return;
                                                }

                                                Zone zone = MapService.gI().getZoneJoinByMapIdAndZoneId(player, 124, 0);
                                                if (zone != null) {
                                                    player.location.x = 100;
                                                    player.location.y = 384;
                                                    MapService.gI().goToMap(player, zone);
                                                    Service.getInstance().clearMap(player);
                                                    zone.mapInfo(player);
                                                    player.zone.loadAnotherToMe(player);
                                                    player.zone.load_Me_To_Another(player);
                                                }
                                                // Service.getInstance().sendThongBao(player, "L·ªëi v√†o ng≈© h√†nh s∆°n ch∆∞a
                                                // m·ªü");
                                                break;
                                        }
                                    }
                                }
                                if (this.mapId == MapName.NGU_HANH_SON_3) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                Zone zone = MapService.gI().getZoneJoinByMapIdAndZoneId(player, 0, 0);
                                                if (zone != null) {
                                                    player.location.x = 600;
                                                    player.location.y = 432;
                                                    MapService.gI().goToMap(player, zone);
                                                    Service.getInstance().clearMap(player);
                                                    zone.mapInfo(player);
                                                    player.zone.loadAnotherToMe(player);
                                                    player.zone.load_Me_To_Another(player);
                                                }
                                                break;
                                        }
                                    }
                                }
                                if (this.mapId == MapName.NGU_HANH_SON) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                // ƒê·ªïi ƒë√†o
                                                Item item = InventoryService.gI().findItemBagByTemp(player,
                                                        ConstItem.QUA_HONG_DAO);
                                                if (item == null || item.quantity < 10) {
                                                    npcChat(player,
                                                            "C·∫ßn 10 qu·∫£ ƒë√†o xanh ƒë·ªÉ ƒë·ªïi l·∫•y ƒë√†o ch√≠n t·ª´ b·∫ßn tƒÉng.");
                                                    return;
                                                }
                                                if (InventoryService.gI().getCountEmptyBag(player) == 0) {
                                                    npcChat(player, "T√∫i ƒë·∫ßy r·ªìi k√¨a.");
                                                    return;
                                                }
                                                Item newItem = ItemService.gI()
                                                        .createNewItem((short) ConstItem.QUA_HONG_DAO_CHIN, 1);
                                                InventoryService.gI().subQuantityItemsBag(player, item, 10);
                                                InventoryService.gI().addItemBag(player, newItem, 0);
                                                InventoryService.gI().sendItemBags(player);
                                                npcChat(player,
                                                        "Ta ƒë√£ ƒë·ªïi cho th√≠ ch·ªß r·ªìi ƒë√≥, h√£y mang cho ƒë·ªá t·ª≠ ta ƒëi n√†o.");
                                                break;

                                            case 1:
                                                // gi·∫£i phong ·∫•n
                                                if (InventoryService.gI().getCountEmptyBag(player) == 0) {
                                                    npcChat(player, "T√∫i ƒë·∫ßy r·ªìi k√¨a.");
                                                    return;
                                                }
                                                int[] itemsNeed = {ConstItem.CHU_GIAI, ConstItem.CHU_KHAI,
                                                    ConstItem.CHU_PHONG, ConstItem.CHU_AN};
                                                List<Item> items = InventoryService.gI().getListItem(player, itemsNeed)
                                                        .stream().filter(i -> i.quantity >= 10)
                                                        .collect(Collectors.toList());
                                                boolean[] flags = new boolean[4];
                                                for (Item i : items) {
                                                    switch ((int) i.template.id) {
                                                        case ConstItem.CHU_GIAI:
                                                            flags[0] = true;
                                                            break;

                                                        case ConstItem.CHU_KHAI:
                                                            flags[1] = true;
                                                            break;

                                                        case ConstItem.CHU_PHONG:
                                                            flags[2] = true;
                                                            break;

                                                        case ConstItem.CHU_AN:
                                                            flags[3] = true;
                                                            break;
                                                    }
                                                }
                                                for (int i = 0; i < flags.length; i++) {
                                                    if (!flags[i]) {
                                                        ItemTemplate template = ItemService.gI()
                                                                .getTemplate(itemsNeed[i]);
                                                        npcChat("Th√≠ ch·ªß c√≤n thi·∫øu " + template.name);
                                                        return;
                                                    }
                                                }

                                                for (Item i : items) {
                                                    InventoryService.gI().subQuantityItemsBag(player, i, 10);
                                                }

                                                RandomCollection<Integer> rc = new RandomCollection<>();
                                                rc.add(10, ConstItem.CAI_TRANG_TON_NGO_KHONG_DE_TU);
                                                rc.add(10, ConstItem.CAI_TRANG_BAT_GIOI_DE_TU);
                                                rc.add(50, ConstItem.GAY_NHU_Y);
                                                switch (player.gender) {
                                                    case ConstPlayer.TRAI_DAT:
                                                        rc.add(30, ConstItem.CAI_TRANG_TON_NGO_KHONG);
                                                        break;

                                                    case ConstPlayer.NAMEC:
                                                        rc.add(30, ConstItem.CAI_TRANG_TON_NGO_KHONG_545);
                                                        break;

                                                    case ConstPlayer.XAYDA:
                                                        rc.add(30, ConstItem.CAI_TRANG_TON_NGO_KHONG_546);
                                                        break;
                                                }
                                                int itemID = rc.next();
                                                Item nItem = ItemService.gI().createNewItem((short) itemID);
                                                boolean all = itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG_DE_TU
                                                        || itemID == ConstItem.CAI_TRANG_BAT_GIOI_DE_TU
                                                        || itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG
                                                        || itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG_545
                                                        || itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG_546;
                                                if (all) {
                                                    nItem.itemOptions.add(new ItemOption(50, Util.nextInt(20, 35)));
                                                    nItem.itemOptions.add(new ItemOption(77, Util.nextInt(20, 35)));
                                                    nItem.itemOptions.add(new ItemOption(103, Util.nextInt(20, 35)));
                                                    nItem.itemOptions.add(new ItemOption(94, Util.nextInt(5, 10)));
                                                    nItem.itemOptions.add(new ItemOption(100, Util.nextInt(10, 20)));
                                                    nItem.itemOptions.add(new ItemOption(101, Util.nextInt(10, 20)));
                                                }
                                                if (itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG
                                                        || itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG_545
                                                        || itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG_546) {
                                                    nItem.itemOptions.add(new ItemOption(80, Util.nextInt(5, 15)));
                                                    nItem.itemOptions.add(new ItemOption(81, Util.nextInt(5, 15)));
                                                    nItem.itemOptions.add(new ItemOption(106, 0));
                                                } else if (itemID == ConstItem.CAI_TRANG_TON_NGO_KHONG_DE_TU
                                                        || itemID == ConstItem.CAI_TRANG_BAT_GIOI_DE_TU) {
                                                    nItem.itemOptions.add(new ItemOption(197, 0));
                                                }
                                                if (all) {
                                                    if (Util.isTrue(499, 500)) {
                                                        nItem.itemOptions.add(new ItemOption(93, Util.nextInt(3, 30)));
                                                    }
                                                } else if (itemID == ConstItem.GAY_NHU_Y) {
                                                    RandomCollection<Integer> rc2 = new RandomCollection<>();
                                                    rc2.add(60, 30);
                                                    rc2.add(30, 90);
                                                    rc2.add(10, 50);
                                                    nItem.itemOptions.add(new ItemOption(93, rc2.next()));
                                                }
                                                InventoryService.gI().addItemBag(player, nItem, 0);
                                                InventoryService.gI().sendItemBags(player);
                                                npcChat(player.zone,
                                                        "A mi ph√≤ ph√≤, ƒëa t·∫° th√≠ ch·ªß t∆∞∆°ng tr·ª£, xin h√£y nh·∫≠n m√≥n qu√† m·ªçn n√†y, b·∫ßn tƒÉng s·∫Ω ni·ªám ch√∫ gi·∫£i tho√°t cho Ng·ªô Kh√¥ng");
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.TAPION:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 19) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "√Åc qu·ª∑ truy·ªÅn thuy·∫øt Hirudegarn\nƒë√£ tho√°t kh·ªèi phong ·∫•n ng√†n nƒÉm\nH√£y gi√∫p t√¥i ch·∫ø ng·ª± n√≥",
                                            "OK", "T·ª´ ch·ªëi");
                                }
                                if (this.mapId == 126) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "T√¥i s·∫Ω ƒë∆∞a b·∫°n v·ªÅ", "OK",
                                            "T·ª´ ch·ªëi");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 19) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                SantaCity santaCity = (SantaCity) MapService.gI().getMapById(126);
                                                if (santaCity != null) {
                                                    if (!santaCity.isOpened() || santaCity.isClosed()) {
                                                        Service.getInstance().sendThongBao(player,
                                                                "H·∫πn g·∫∑p b·∫°n l√∫c 22h m·ªói ng√†y");
                                                        return;
                                                    }
                                                    santaCity.enter(player);
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "C√≥ l·ªói x·∫£y ra!");
                                                }
                                                break;
                                        }
                                    }
                                }
                                if (this.mapId == 126) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                SantaCity santaCity = (SantaCity) MapService.gI().getMapById(126);
                                                if (santaCity != null) {
                                                    santaCity.leave(player);
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "C√≥ l·ªói x·∫£y ra!");
                                                }
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.MR_POPO:

                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 0) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Ta l√† ng∆∞·ªùi ƒëang gi·ªØ r∆∞∆°ng qu√† cho ng∆∞∆°i, n·∫øu c√≥ b·∫•t k√¨ m√≥n qu√† n√†o h√£y t·ªõi g·∫∑p ta ƒë·ªÉ nh·∫≠n."
                                            + "\n Nh·ªõ nh·∫≠n ngay ƒë·ªÉ kh√¥ng b·ªã m·∫•t khi c√≥ qu√† m·ªõi nh√©!",
                                            "R∆∞∆°ng\nQu√† t·∫∑ng", "B·∫£ng\n x·∫øp h·∫°ng", "T·ª´ ch·ªëi");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 0) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ShopService.gI().openBoxItemReward(player);
                                                break;
                                            case 1:
                                                Service.getInstance().showTopPower(player, Service.getInstance().TOP_SUCMANH);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };

                    break;
//                case ConstNpc.LY_TIEU_NUONG:
//                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
//                        @Override
//                        public void openBaseMenu(Player player) {
//                            if (canOpenNpc(player)) {
//                                createOtherMenu(player, ConstNpc.BASE_MENU,
//                                        "\b|8|Tr√≤ ch∆°i T√†i X·ªâu ƒëang ƒë∆∞·ª£c di·ªÖn ra\n\n|6|Th·ª≠ v·∫≠n may c·ªßa b·∫°n v·ªõi tr√≤ ch∆°i T√†i X·ªâu! ƒê·∫∑t c∆∞·ª£c v√† d·ª± ƒëo√°n ƒë√∫ng"
//                                                + "\n k·∫øt qu·∫£, b·∫°n s·∫Ω ƒë∆∞·ª£c nh·∫≠n th∆∞·ªüng l·ªõn. H√£y tham gia ngay v√†\n c√πng tr·∫£i nghi·ªám s·ª± h·ªìi h·ªôp, th√∫ v·ªã trong tr√≤ ch∆°i n√†y!"
//                                                + "\n\n|7|(ƒêi·ªÅu ki·ªán tham gia : ƒê√£ m·ªü th√†nh vi√™n)\n\n|2|ƒê·∫∑t t·ªëi thi·ªÉu: 1.000 H·ªìng ng·ªçc\n T·ªëi ƒëa: 100.000 H·ªìng ng·ªçc"
//                                                + "\n\n|7| L∆∞u √Ω : Tho√°t game khi ch·ªët K·∫øt qu·∫£ s·∫Ω M·∫§T Ti·ªÅn c∆∞·ª£c v√† Ti·ªÅn th∆∞·ªüng", "Th·ªÉ l·ªá", "Tham gia");
//                            }
//                        }
//
//                        @Override
//                        public void confirmMenu(Player player, int select) {
//                            if (canOpenNpc(player)) {
//                                if (player.iDMark.isBaseMenu()) {
//                                    switch (select) {
//                                        case 0:
//                                            createOtherMenu(player, ConstNpc.IGNORE_MENU, "|5|C√≥ 2 nh√† c√°i T√†i v√† Xƒ©u, b·∫°n ch·ªâ ƒë∆∞·ª£c ch·ªçn 1 nh√† ƒë·ªÉ tham gia"
//                                                    + "\n\n|6|Sau khi k·∫øt th√∫c th·ªùi gian ƒë·∫∑t c∆∞·ª£c. H·ªá th·ªëng s·∫Ω tung x√≠ ng·∫ßu ƒë·ªÉ bi·∫øt k·∫øt qu·∫£ T√†i X·ªâu"
//                                                    + "\n\nN·∫øu T·ªïng s·ªë 3 con x√≠ ng·∫ßu <=10 : X·ªàU\nN·∫øu T·ªïng s·ªë 3 con x√≠ ng·∫ßu >10 : T√ÄI\nN·∫øu 3 X√≠ ng·∫ßu c√πng 1 s·ªë : TAM HOA (Nh√† c√°i l·ª•m h·∫øt)"
//                                                    + "\n\n|7|L∆∞u √Ω: S·ªë H·ªìng ng·ªçc nh·∫≠n ƒë∆∞·ª£c s·∫Ω b·ªã nh√† c√°i l·ª•m ƒëi 20%. Trong qu√° tr√¨nh di·ªÖn ra khi ƒë·∫∑t c∆∞·ª£c n·∫øu tho√°t game s·∫Ω b·ªã M·∫§T TI·ªÄN ƒê·∫∂T C∆Ø·ª¢C", "Ok");
//                                            break;
//                                        case 1:
//                                            String time = ((TaiXiu.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) + " gi√¢y";
//                                            if (TaiXiu.gI().baotri == false) {
//                                                if (player.goldTai == 0 && player.goldXiu == 0) {
//                                                    NpcService.gI().createMenuConMeo(player, ConstNpc.TAIXIU, 11039, "\n|7|---NH√Ä C√ÅI T√ÄI X·ªàU---\n\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
//                                                            + "\n\n|6|T·ªïng nh√† T√ÄI: " + Util.format(TaiXiu.gI().goldTai) + " H·ªìng ng·ªçc"
//                                                            + "\n\nT·ªïng nh√† X·ªàU: " + Util.format(TaiXiu.gI().goldXiu) + " H·ªìng ng·ªçc\n\n|5|Th·ªùi gian c√≤n l·∫°i: " + time, "C·∫≠p nh·∫≠p", "Theo T√ÄI", "Theo X·ªàU", "ƒê√≥ng");
//                                                } else if (player.goldTai > 0) {
//                                                    NpcService.gI().createMenuConMeo(player, ConstNpc.TAIXIU, 11039, "\n|7|---NH√Ä C√ÅI T√ÄI X·ªàU---\n\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
//                                                            + "\n\n|6|T·ªïng nh√† T√ÄI: " + Util.format(TaiXiu.gI().goldTai) + " H·ªìng ng·ªçc"
//                                                            + "\n\nT·ªïng nh√† X·ªàU: " + Util.format(TaiXiu.gI().goldXiu) + " H·ªìng ng·ªçc\n\n|5|Th·ªùi gian c√≤n l·∫°i: " + time + "\n\n|7|B·∫°n ƒë√£ c∆∞·ª£c T√†i : " + Util.format(player.goldTai) + " H·ªìng ng·ªçc", "C·∫≠p nh·∫≠p", "ƒê√≥ng");
//                                                } else {
//                                                    NpcService.gI().createMenuConMeo(player, ConstNpc.TAIXIU, 11039, "\n|7|---NH√Ä C√ÅI T√ÄI X·ªàU---\n\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
//                                                            + "\n\n|6|T·ªïng nh√† T√ÄI: " + Util.format(TaiXiu.gI().goldTai) + " H·ªìng ng·ªçc"
//                                                            + "\n\nT·ªïng nh√† X·ªàU: " + Util.format(TaiXiu.gI().goldXiu) + " H·ªìng ng·ªçc\n\n|5|Th·ªùi gian c√≤n l·∫°i: " + time + "\n\n|7|B·∫°n ƒë√£ c∆∞·ª£c X·ªâu : " + Util.format(player.goldXiu) + " H·ªìng ng·ªçc", "C·∫≠p nh·∫≠p", "ƒê√≥ng");
//                                                }
//                                            } else {
//                                                if (player.goldTai == 0 && player.goldXiu == 0) {
//                                                    NpcService.gI().createMenuConMeo(player, ConstNpc.TAIXIU, 11039, "\n|7|---NH√Ä C√ÅI T√ÄI X·ªàU---\n\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
//                                                            + "\n\n|6|T·ªïng nh√† T√ÄI: " + Util.format(TaiXiu.gI().goldTai) + " H·ªìng ng·ªçc"
//                                                            + "\n\nT·ªïng nh√† X·ªàU: " + Util.format(TaiXiu.gI().goldXiu) + " H·ªìng ng·ªçc\n\n|5|Th·ªùi gian c√≤n l·∫°i: " + time + "\n\n|7|H·ªá th·ªëng s·∫Øp b·∫£o tr√¨", "C·∫≠p nh·∫≠p", "ƒê√≥ng");
//                                                } else if (player.goldTai > 0) {
//                                                    NpcService.gI().createMenuConMeo(player, ConstNpc.TAIXIU, 11039, "\n|7|---NH√Ä C√ÅI T√ÄI X·ªàU---\n\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
//                                                            + "\n\n|6|T·ªïng nh√† T√ÄI: " + Util.format(TaiXiu.gI().goldTai) + " H·ªìng ng·ªçc"
//                                                            + "\n\nT·ªïng nh√† X·ªàU: " + Util.format(TaiXiu.gI().goldXiu) + " H·ªìng ng·ªçc\n\n|5|Th·ªùi gian c√≤n l·∫°i: " + time + "\n\n|7|B·∫°n ƒë√£ c∆∞·ª£c T√†i : " + Util.format(player.goldTai) + " H·ªìng ng·ªçc" + "\n\n|7|H·ªá th·ªëng s·∫Øp b·∫£o tr√¨", "C·∫≠p nh·∫≠p", "ƒê√≥ng");
//                                                } else {
//                                                    NpcService.gI().createMenuConMeo(player, ConstNpc.TAIXIU, 11039, "\n|7|---NH√Ä C√ÅI T√ÄI-X·ªàU---\n\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
//                                                            + "\n\n|6|T·ªïng nh√† T√ÄI: " + Util.format(TaiXiu.gI().goldTai) + " H·ªìng ng·ªçc"
//                                                            + "\n\nT·ªïng nh√† X·ªàU: " + Util.format(TaiXiu.gI().goldXiu) + " H·ªìng ng·ªçc\n\n|5|Th·ªùi gian c√≤n l·∫°i: " + time + "\n\n|7|B·∫°n ƒë√£ c∆∞·ª£c X·ªâu : " + Util.format(player.goldXiu) + " H·ªìng ng·ªçc" + "\n\n|7|H·ªá th·ªëng s·∫Øp b·∫£o tr√¨", "C·∫≠p nh·∫≠p", "ƒê√≥ng");
//                                                }
//                                            }
//                                            break;
//                                    }
//                                }
//                            }
//                        }
//                    };
//                    break;
                case ConstNpc.CASINO_TAI_XIU:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "\b|8|Tr√≤ ch∆°i T√†i X·ªâu ƒëang ƒë∆∞·ª£c di·ªÖn ra\n\n|6|Th·ª≠ v·∫≠n may c·ªßa b·∫°n v·ªõi tr√≤ ch∆°i T√†i X·ªâu! ƒê·∫∑t c∆∞·ª£c v√† d·ª± ƒëo√°n ƒë√∫ng"
                                        + "\n k·∫øt qu·∫£, b·∫°n s·∫Ω ƒë∆∞·ª£c nh·∫≠n th∆∞·ªüng l·ªõn. H√£y tham gia ngay v√†\n c√πng tr·∫£i nghi·ªám s·ª± h·ªìi h·ªôp, th√∫ v·ªã trong tr√≤ ch∆°i n√†y!"
                                        + "\n\n|7|(ƒêi·ªÅu ki·ªán tham gia : ƒê√£ m·ªü th√†nh vi√™n)\n\n|2|ƒê·∫∑t t·ªëi thi·ªÉu: 10 Th·ªèi v√†ng\n T·ªëi ƒëa: 1.000 Th·ªèi v√†ng"
                                        + "\n\n|7| L∆∞u √Ω : Tho√°t game khi ch·ªët K·∫øt qu·∫£ s·∫Ω M·∫§T Ti·ªÅn c∆∞·ª£c v√† Ti·ªÅn th∆∞·ªüng", "Th·ªÉ l·ªá", "Tham gia");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            createOtherMenu(player, ConstNpc.IGNORE_MENU, "|5|C√≥ 2 nh√† c√°i T√†i v√† X·ªâu, b·∫°n ch·ªâ ƒë∆∞·ª£c ch·ªçn 1 nh√† ƒë·ªÉ tham gia"
                                                    + "\n\n|6|Sau khi k·∫øt th√∫c th·ªùi gian ƒë·∫∑t c∆∞·ª£c. H·ªá th·ªëng s·∫Ω tung x√≠ ng·∫ßu ƒë·ªÉ bi·∫øt k·∫øt qu·∫£ T√†i X·ªâu"
                                                    + "\n\nN·∫øu T·ªïng s·ªë 3 con x√≠ ng·∫ßu <=10 : X·ªàU\nN·∫øu T·ªïng s·ªë 3 con x√≠ ng·∫ßu >10 : T√ÄI\nN·∫øu 3 X√≠ ng·∫ßu c√πng 1 s·ªë : TAM HOA (Nh√† c√°i l·ª•m h·∫øt)"
                                                    + "\n\n|7|L∆∞u √Ω: S·ªë H·ªìng ng·ªçc nh·∫≠n ƒë∆∞·ª£c s·∫Ω b·ªã nh√† c√°i l·ª•m ƒëi 20%. Trong qu√° tr√¨nh di·ªÖn ra khi ƒë·∫∑t c∆∞·ª£c n·∫øu tho√°t game s·∫Ω b·ªã M·∫§T TI·ªÄN ƒê·∫∂T C∆Ø·ª¢C", "OK");
                                            break;
                                        case 1:
                                            if (player.goldTai > 0 || player.goldXiu > 0) {
                                                System.out.println("Player: " + player.name
                                                        + " ƒë√£ ƒë·∫∑t c∆∞·ª£c: "
                                                        + player.goldTai + " T√ÄI" + " Th·ªèi v√†ng "
                                                        + player.goldXiu + " X·ªàU" + " Th·ªèi v√†ng ");

                                            }
                                            String time = ((TaiXiu.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) + " gi√¢y";
                                            if (!TaiXiu.gI().baotri) {
                                                if (player.goldTai == 0 && player.goldXiu == 0) {
                                                    NpcService.gI().createMenuConMeo(player, ConstNpc.TAIXIU, 11039, "\n|7|---NH√Ä C√ÅI T√ÄI X·ªàU---\n\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
                                                            + "\n\n|6|T·ªïng nh√† T√ÄI: " + Util.format(TaiXiu.gI().goldTai) + " Th·ªèi v√†ng"
                                                            + "\n\nT·ªïng nh√† X·ªàU: " + Util.format(TaiXiu.gI().goldXiu) + " Th·ªèi v√†ng\n\n|5|Th·ªùi gian c√≤n l·∫°i: " + time, "C·∫≠p nh·∫≠t", "Theo T√ÄI", "Theo X·ªàU", "ƒê√≥ng");
                                                } else if (player.goldTai > 0) {
                                                    NpcService.gI().createMenuConMeo(player, ConstNpc.TAIXIU, 11039, "\n|7|---NH√Ä C√ÅI T√ÄI X·ªàU---\n\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
                                                            + "\n\n|6|T·ªïng nh√† T√ÄI: " + Util.format(TaiXiu.gI().goldTai) + " Th·ªèi v√†ng"
                                                            + "\n\nT·ªïng nh√† X·ªàU: " + Util.format(TaiXiu.gI().goldXiu) + " Th·ªèi v√†ng\n\n|5|Th·ªùi gian c√≤n l·∫°i: " + time + "\n\n|7|B·∫°n ƒë√£ c∆∞·ª£c T√†i : " + Util.format(player.goldTai) + " Th·ªèi v√†ng", "C·∫≠p nh·∫≠t", "ƒê√≥ng");
                                                } else {
                                                    NpcService.gI().createMenuConMeo(player, ConstNpc.TAIXIU, 11039, "\n|7|---NH√Ä C√ÅI T√ÄI X·ªàU---\n\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
                                                            + "\n\n|6|T·ªïng nh√† T√ÄI: " + Util.format(TaiXiu.gI().goldTai) + " Th·ªèi v√†ng"
                                                            + "\n\nT·ªïng nh√† X·ªàU: " + Util.format(TaiXiu.gI().goldXiu) + " Th·ªèi v√†ng\n\n|5|Th·ªùi gian c√≤n l·∫°i: " + time + "\n\n|7|B·∫°n ƒë√£ c∆∞·ª£c X·ªâu : " + Util.format(player.goldXiu) + " Th·ªèi v√†ng", "C·∫≠p nh·∫≠t", "ƒê√≥ng");
                                                }

                                            } else {
                                                if (player.goldTai == 0 && player.goldXiu == 0) {
                                                    NpcService.gI().createMenuConMeo(player, ConstNpc.TAIXIU, 11039, "\n|7|---NH√Ä C√ÅI T√ÄI X·ªàU---\n\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
                                                            + "\n\n|6|T·ªïng nh√† T√ÄI: " + Util.format(TaiXiu.gI().goldTai) + " Th·ªèi v√†ng"
                                                            + "\n\nT·ªïng nh√† X·ªàU: " + Util.format(TaiXiu.gI().goldXiu) + " Th·ªèi v√†ng\n\n|5|Th·ªùi gian c√≤n l·∫°i: " + time + "\n\n|7|H·ªá th·ªëng s·∫Øp b·∫£o tr√¨", "C·∫≠p nh·∫≠t", "ƒê√≥ng");
                                                } else if (player.goldTai > 0) {
                                                    NpcService.gI().createMenuConMeo(player, ConstNpc.TAIXIU, 11039, "\n|7|---NH√Ä C√ÅI T√ÄI X·ªàU---\n\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
                                                            + "\n\n|6|T·ªïng nh√† T√ÄI: " + Util.format(TaiXiu.gI().goldTai) + " Th·ªèi v√†ng"
                                                            + "\n\nT·ªïng nh√† X·ªàU: " + Util.format(TaiXiu.gI().goldXiu) + " Th·ªèi v√†ng\n\n|5|Th·ªùi gian c√≤n l·∫°i: " + time + "\n\n|7|B·∫°n ƒë√£ c∆∞·ª£c T√†i : " + Util.format(player.goldTai) + " Th·ªèi v√†ng" + "\n\n|7|H·ªá th·ªëng s·∫Øp b·∫£o tr√¨", "C·∫≠p nh·∫≠t", "ƒê√≥ng");
                                                } else {
                                                    NpcService.gI().createMenuConMeo(player, ConstNpc.TAIXIU, 11039, "\n|7|---NH√Ä C√ÅI T√ÄI-X·ªàU---\n\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
                                                            + "\n\n|6|T·ªïng nh√† T√ÄI: " + Util.format(TaiXiu.gI().goldTai) + " Th·ªèi v√†ng"
                                                            + "\n\nT·ªïng nh√† X·ªàU: " + Util.format(TaiXiu.gI().goldXiu) + " Th·ªèi v√†ng\n\n|5|Th·ªùi gian c√≤n l·∫°i: " + time + "\n\n|7|B·∫°n ƒë√£ c∆∞·ª£c X·ªâu : " + Util.format(player.goldXiu) + " Th·ªèi v√†ng" + "\n\n|7|H·ªá th·ªëng s·∫Øp b·∫£o tr√¨", "C·∫≠p nh·∫≠t", "ƒê√≥ng");
                                                }
                                            }

                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.SO_MAY_MAN:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                String time = ((SoMayMan.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) + " gi√¢y";
                                StringBuilder stringBuilder = new StringBuilder();
                                for (Player mem : SoMayMan.gI().TrungGiai) {
                                    if (stringBuilder.length() > 0) {
                                        stringBuilder.append(", ");
                                    }
                                    stringBuilder.append(mem.name);
                                }
                                String NamePl = stringBuilder.toString();
                                createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "K·∫øt qu·∫£ gi·∫£i tr∆∞·ªõc: " + SoMayMan.gI().SoGiaiTruoc
                                        + "\nNg∆∞·ªùi tr√∫ng gi·∫£i tr∆∞·ªõc: " + NamePl
                                        + "\nTham gia: " + SoMayMan.gI().PlayerThamGia.size() + " ng∆∞·ªùi"
                                        + "\nƒêo√°n tr√∫ng s·∫Ω nh·∫≠n th∆∞·ªüng 100.000 H·ªìng ng·ªçc"
                                        + "\nTh·ªùi gian quay s·ªë: " + time, "1 s·ªë\n1.000 H·ªìng ng·ªçc", "H∆∞·ªõng d·∫´n", "ƒê√≥ng");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            Input.gI().ChonSo(player);
                                            break;
                                        case 1:
                                            createOtherMenu(player, ConstNpc.IGNORE_MENU,
                                                    "Sau khi h·∫øt th·ªùi gian ƒë·∫øm ng∆∞·ª£c"
                                                    + "\nH·ªá th·ªëng s·∫Ω quay s·ªë cho ra k·∫øt qu·∫£"
                                                    + "\nNg∆∞·ªùi th·∫Øng s·∫Ω nh·∫≠n ƒë∆∞·ª£c 100.000 H·ªìng ng·ªçc"
                                                    + "\n(M·ªói 1 s·ªë d·ª± ƒëo√°n s·∫Ω m·∫•t 1.000 H·ªìng ng·ªçc)", "Ok");
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.QUY_LAO_KAME:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                EscortedBoss escortedBoss = player.getEscortedBoss();
                                if (escortedBoss != null && escortedBoss instanceof Qilin) {
                                    this.createOtherMenu(player, ConstNpc.ESCORT_QILIN_MENU,
                                            "Ah con ƒë√£ t√¨m th·∫•y l√¢n con th·∫•t l·∫°c c·ªßa ta\nTa s·∫Ω th∆∞·ªüng cho con 1 vi√™n Capsule T·∫øt 2024.",
                                            "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                } else {
                                    if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ch√†o con, con mu·ªën ta gi√∫p g√¨ n√†o?",
                                                "ƒê·ªïi\nTh·ªèi v√†ng", "ƒê·ªïi\nXu v√†ng", "Gi·∫£i t√°n bang h·ªôi", "L√£nh ƒë·ªãa\nbang h·ªôi", "Kho b√°u\nd∆∞·ªõi bi·ªÉn",
                                                getMenuSuKien(Manager.EVENT_SEVER));
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            if (Manager.KHUYEN_MAI_NAP != 1) {
                                                this.createOtherMenu(player, ConstNpc.QUY_DOI_TV,
                                                        "|7|QUY ƒê·ªîI TH·ªéI V√ÄNG"
                                                        + "\n|6|Gi·ªõi h·∫°n ƒë·ªïi kh√¥ng qu√° 1.000.000 Coin"
                                                        + "\n|1|Coin hi·ªán c√≤n : " + " " + Util.format(player.getSession().vnd)
                                                        + "\n\n|5|Nh·∫≠p 10.000 Coin ƒë∆∞·ª£c 50 Th·ªèi v√†ng"
                                                        + "\n|3| Server ƒëang x" + Manager.KHUYEN_MAI_NAP + " Quy ƒë·ªïi "
                                                        + "(10.000 Coin = " + Util.format(Manager.KHUYEN_MAI_NAP * 50) + " Th·ªèi v√†ng)",
                                                        "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.QUY_DOI_TV,
                                                        "|7|QUY ƒê·ªîI TH·ªéI V√ÄNG"
                                                        + "\n|6|Gi·ªõi h·∫°n ƒë·ªïi kh√¥ng qu√° 1.000.000 Coin"
                                                        + "\n|1|Coin hi·ªán c√≤n : " + " " + Util.format(player.getSession().vnd)
                                                        + "\n\n|5|Nh·∫≠p 10.000 Coin ƒë∆∞·ª£c 50 Th·ªèi v√†ng",
                                                        "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                            }
                                            break;
                                        case 1:
                                            if (Manager.KHUYEN_MAI_NAP != 1) {
                                                this.createOtherMenu(player, ConstNpc.QUY_DOI_XU,
                                                        "|7|QUY ƒê·ªîI XU V√ÄNG"
                                                        + "\n|6|Gi·ªõi h·∫°n ƒë·ªïi kh√¥ng qu√° 1.000.000 Coin"
                                                        + "\n|1|Coin hi·ªán c√≤n : " + " " + Util.format(player.getSession().vnd)
                                                        + "\n\n|5|Nh·∫≠p 10.000 Coin ƒë∆∞·ª£c 50 Xu v√†ng"
                                                        + "\n|3| Server ƒëang x" + Manager.KHUYEN_MAI_NAP + " Quy ƒë·ªïi "
                                                        + "(10.000 Coin = " + Util.format(Manager.KHUYEN_MAI_NAP * 50) + " Xu v√†ng)",
                                                        "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.QUY_DOI_XU,
                                                        "|7|QUY ƒê·ªîI XU V√ÄNG"
                                                        + "\n|6|Gi·ªõi h·∫°n ƒë·ªïi kh√¥ng qu√° 1.000.000 Coin"
                                                        + "\n|1|Coin hi·ªán c√≤n : " + " " + Util.format(player.getSession().vnd)
                                                        + "\n\n|5|Nh·∫≠p 10.000 Coin ƒë∆∞·ª£c 50 Xu v√†ng",
                                                        "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                            }
                                            break;
                                        case 2:
                                            if (player.clan != null) {
                                                ClanService.gI().RemoveClanAll(player);
                                            } else {
                                                Service.getInstance().sendThongBao(player,
                                                        "B·∫°n kh√¥ng c√≥ bang h·ªôi n√†o ƒë·ªÉ gi·∫£i t√°n.");
                                            }
                                            break;
                                        case 3:
                                            if (player.clan != null) {
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 153, -1, -1);
                                            } else {
                                                Service.getInstance().sendThongBao(player, "Y√™u c·∫ßu c√≥ bang h·ªôi !!!");
                                            }
                                            break;
                                        case 4:
                                            if (player.clan != null) {
                                                if (player.clan.banDoKhoBau != null) {
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPENED_DBKB,
                                                            "Bang h·ªôi c·ªßa con ƒëang ƒëi t√¨m kho b√°u d∆∞·ªõi bi·ªÉn c·∫•p ƒë·ªô "
                                                            + player.clan.banDoKhoBau.level
                                                            + "\nCon c√≥ mu·ªën ƒëi theo kh√¥ng?",
                                                            "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                                } else {
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPEN_DBKB,
                                                            "ƒê√¢y l√† b·∫£n ƒë·ªì kho b√°u h·∫£i t·∫∑c t√≠ hon\nC√°c con c·ª© y√™n t√¢m l√™n ƒë∆∞·ªùng\n"
                                                            + "·ªû ƒë√¢y c√≥ ta lo\nNh·ªõ ch·ªçn c·∫•p ƒë·ªô v·ª´a s·ª©c m√¨nh nh√©",
                                                            "Ch·ªçn\nc·∫•p ƒë·ªô", "T·ª´ ch·ªëi");
                                                }
                                            } else {
                                                this.npcChat(player, "Con ph·∫£i c√≥ bang h·ªôi ta m·ªõi c√≥ th·ªÉ cho con ƒëi");
                                            }
                                            break;
                                        case 5:
                                            switch (Manager.EVENT_SEVER) {
                                                case 1:
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPEN_SUKIEN,
                                                            "S·ª± ki·ªán Halloween ch√≠nh th·ª©c t·∫°i Ng·ªçc R·ªìng "
                                                            + Manager.SERVER_NAME + "\n"
                                                            + "Chu·∫©n b·ªã x10 nguy√™n li·ªáu K·∫πo, B√°nh Quy, B√≠ ng√¥ ƒë·ªÉ ƒë·ªïi Gi·ªè K·∫πo cho ta nh√©\n"
                                                            + "Nguy√™n Li·ªáu thu th·∫≠p b·∫±ng c√°ch ƒë√°nh qu√°i t·∫°i c√°c h√†nh tinh ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh\n"
                                                            + "T√≠ch l≈©y 3 Gi·ªè K·∫πo +  3 V√© mang qua ƒë√¢y ta s·∫Ω cho con 1 H·ªôp Ma Qu·ª∑\n"
                                                            + "T√≠ch l≈©y 3 Gi·ªè K·∫πo, 3 H·ªôp Ma Qu·ª∑ + 3 V√© \nmang qua ƒë√¢y ta s·∫Ω cho con 1 h·ªôp qu√† th√∫ v·ªã.",
                                                            "ƒê·ªïi\nGi·ªè K·∫πo", "ƒê·ªïi H·ªôp\nMa Qu·ª∑", "ƒê·ªïi H·ªôp\nQu√† Halloween",
                                                            "T·ª´ ch·ªëi");
                                                    break;
                                                case 2:
                                                    Attribute at = ServerManager.gI().getAttributeManager()
                                                            .find(ConstAttribute.VANG);
                                                    String text = "S·ª± ki·ªán 20/11 ch√≠nh th·ª©c t·∫°i Ng·ªçc R·ªìng "
                                                            + Manager.SERVER_NAME + "\n "
                                                            + "S·ªë ƒëi·ªÉm hi·ªán t·∫°i c·ªßa b·∫°n l√† : "
                                                            + player.event.getEventPoint()
                                                            + "\nT·ªïng s·ªë hoa ƒë√£ t·∫∑ng tr√™n to√†n m√°y ch·ªß "
                                                            + EVENT_COUNT_QUY_LAO_KAME % 999 + "/999";
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPEN_SUKIEN,
                                                            at != null && !at.isExpired() ? text
                                                            + "\nTo√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c nh√¢n ƒë√¥i s·ªë v√†ng r∆°i ra t·ª´ qu√°i,th·ªùi gian c√≤n l·∫°i "
                                                            + at.getTime() / 60 + " ph√∫t."
                                                            : text + "\nKhi t·∫∑ng ƒë·ªß 999 b√¥ng hoa to√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c nh√¢n ƒë√¥i s·ªë v√†ng r∆°i ra t·ª´ qu√°i trong 60 ph√∫t",
                                                            "T·∫∑ng 1\n B√¥ng hoa", "T·∫∑ng\n10 B√¥ng", "T·∫∑ng\n99 B√¥ng",
                                                            "ƒê·ªïi\nH·ªôp qu√†");
                                                    break;
                                                case 3:
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPEN_SUKIEN,
                                                            "S·ª± ki√™n gi√°ng sinh 2022 " + Manager.SERVER_NAME
                                                            + "\nKhi ƒë·ªôi m≈© len b·∫•t k√¨ ƒë√°nh qu√°i s·∫Ω c√≥ c∆° h·ªôi nh·∫≠n ƒë∆∞·ª£c k·∫πo gi√°ng sinh"
                                                            + "\nƒêem 99 k·∫πo gi√°ng sinh t·ªõi ƒë√¢y ƒë·ªÉ ƒë·ªïi 1 V·ªõ,t·∫•t gi√°ng sinh\nCh√∫c b·∫°n m·ªôt m√πa gi√°ng sinh vui v·∫ª",
                                                            "ƒê·ªïi\nT·∫•t gi√°ng sinh");

                                                    break;
                                                // up th·ªãt heo, th·ªãt ba ch·ªâ v√† g·∫°o n·∫øp map nappa
                                                //ƒë·ªó xanh, l√° dong, l√° chu·ªëi, gia v·ªã t·ªïng h·ª£p
                                                case 4:
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPEN_SUKIEN,
                                                            "|7|S·ª± ki√™n T·∫øt nguy√™n ƒë√°n 2025 " + Manager.SERVER_NAME
                                                            + "\n|2|B·∫°n ƒëang c√≥: " + player.event.getEventPoint() + " ƒëi·ªÉm s·ª± ki·ªán"
                                                            + "\n|5|-Th·ªãt heo v√† Ba ch·ªâ, G·∫°o N·∫øp: Map Nappa"
                                                            + "\n-ƒê·ªó xanh, L√° dong v√† L√° chu·ªëi\nGia v·ªã v√† Ph·ª• gia: B·∫£n ƒë·ªì kho b√°u, Doanh tr·∫°i"
                                                            + "\n|3|(SƒÉn Boss c√≥ t·ªâ l·ªá r∆°i c√°c v·∫≠t ph·∫©m tr√™n)"
                                                            + "\n|1|Ch√∫c b·∫°n nƒÉm m·ªõi dui d·∫ª",
                                                            "Nh·∫≠n L√¨x√¨", "ƒê·ªïi ƒêi·ªÉm\nS·ª± Ki·ªán");
                                                    break;
                                                case 5:
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPEN_SUKIEN,
                                                            "S·ª± ki·ªán 8/3 ch√≠nh th·ª©c t·∫°i Ng·ªçc R·ªìng "
                                                            + Manager.SERVER_NAME + "\nB·∫°n ƒëang c√≥: "
                                                            + player.event.getEventPoint()
                                                            + " ƒëi·ªÉm s·ª± ki·ªán\nCh√∫c b·∫°n ch∆°i game dui d·∫ª",
                                                            "T·∫∑ng 1\n B√¥ng hoa", "T·∫∑ng\n10 B√¥ng", "T·∫∑ng\n99 B√¥ng",
                                                            "ƒê·ªïi H·ªôp qu√†");
                                                    break;
                                            }
                                            break;
//                                        case 5:
//                                            if (Manager.KHUYEN_MAI_NAP != 1) {
//                                                this.createOtherMenu(player, ConstNpc.QUY_DOI_HN,
//                                                        "|7|QUY ƒê·ªîI H·ªíNG NG·ªåC"
//                                                        + "\n|6|Gi·ªõi h·∫°n ƒë·ªïi kh√¥ng qu√° 1.000.000 Coin"
//                                                        + "\n|1|Coin hi·ªán c√≤n : " + " " + Util.format(player.getSession().vnd)
//                                                        + "\n\n|5|Nh·∫≠p 10.000ƒê ƒë∆∞·ª£c 50.000 H·ªìng ng·ªçc"
//                                                        + "\n|3| Server ƒëang x" + Manager.KHUYEN_MAI_NAP + " Quy ƒë·ªïi "
//                                                        + "(10.000 Coin = " + Util.format(Manager.KHUYEN_MAI_NAP * 50000) + " H·ªìng ng·ªçc)",
//                                                        "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
//                                            } else {
//                                                this.createOtherMenu(player, ConstNpc.QUY_DOI_HN,
//                                                        "|7|QUY ƒê·ªîI H·ªíNG NG·ªåC"
//                                                        + "\n|6|Gi·ªõi h·∫°n ƒë·ªïi kh√¥ng qu√° 1.000.000 Coin"
//                                                        + "\n|1|Coin hi·ªán c√≤n : " + " " + Util.format(player.getSession().vnd)
//                                                        + "\n\n|5|Nh·∫≠p 10.000 Coin ƒë∆∞·ª£c 50.000 H·ªìng ng·ªçc",
//                                                        "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
//                                            }
//                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPEN_SUKIEN) {
                                    openMenuSuKien(player, this, tempId, select);
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPENED_DBKB) {
                                    switch (select) {
                                        case 0:
                                            if (player.isAdmin()
                                                    || player.nPoint.power >= BanDoKhoBau.POWER_CAN_GO_TO_DBKB) {
                                                ChangeMapService.gI().goToDBKB(player);
                                            } else {
                                                this.npcChat(player, "S·ª©c m·∫°nh c·ªßa con ph·∫£i √≠t nh·∫•t ph·∫£i ƒë·∫°t "
                                                        + Util.numberToMoney(BanDoKhoBau.POWER_CAN_GO_TO_DBKB));
                                            }
                                            break;

                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPEN_DBKB) {
                                    switch (select) {
                                        case 0:
                                            if (player.isAdmin()
                                                    || player.nPoint.power >= BanDoKhoBau.POWER_CAN_GO_TO_DBKB) {
                                                Input.gI().createFormChooseLevelBDKB(player);
                                            } else {
                                                this.npcChat(player, "S·ª©c m·∫°nh c·ªßa con ph·∫£i √≠t nh·∫•t ph·∫£i ƒë·∫°t "
                                                        + Util.numberToMoney(BanDoKhoBau.POWER_CAN_GO_TO_DBKB));
                                            }
                                            break;
                                    }

                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_ACCEPT_GO_TO_BDKB) {
                                    switch (select) {
                                        case 0:
                                            BanDoKhoBauService.gI().openBanDoKhoBau(player,
                                                    Byte.parseByte(String.valueOf(PLAYERID_OBJECT.get(player.id))));
                                            break;
                                    }

                                } else if (player.iDMark.getIndexMenu() == ConstNpc.ESCORT_QILIN_MENU) {
                                    switch (select) {
                                        case 0: {
                                            if (InventoryService.gI().getCountEmptyBag(player) == 0) {
                                                this.npcChat(player,
                                                        "Con ph·∫£i c√≥ √≠t nh·∫•t 1 √¥ tr·ªëng trong h√†nh trang ta m·ªõi ƒë∆∞a cho con ƒë∆∞·ª£c");
                                                return;
                                            }
                                            EscortedBoss escortedBoss = player.getEscortedBoss();
                                            if (escortedBoss != null) {
                                                escortedBoss.stopEscorting();
                                                Item item = ItemService.gI()
                                                        .createNewItem((short) ConstItem.CAPSULE_TET_2022);
                                                item.quantity = 1;
                                                InventoryService.gI().addItemBag(player, item, 0);
                                                InventoryService.gI().sendItemBags(player);
                                                Service.getInstance().sendThongBao(player,
                                                        "B·∫°n nh·∫≠n ƒë∆∞·ª£c " + item.template.name);
                                            }
                                        }
                                        break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.QUY_DOI_HN) {
                                    switch (select) {
                                        case 0:
                                            Input.gI().createFormQDHN(player);
                                            break;

                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.QUY_DOI_TV) {
                                    switch (select) {
                                        case 0:
                                            Input.gI().createFormQDTV(player);
                                            break;

                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.QUY_DOI_XU) {
                                    switch (select) {
                                        case 0:
                                            Input.gI().createFormQDXu(player);
                                            break;

                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.TRUONG_LAO_GURU:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            Item mcl = InventoryService.gI().findItemBagByTemp(player, 1517);
                            int slMCL = (mcl == null) ? 0 : mcl.quantity;
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Ng·ªçc r·ªìng Nam·∫øc ƒëang b·ªã 2 th·∫ø l·ª±c tranh gi√†nh\nH√£y ch·ªçn c·∫•p ƒë·ªô tham gia t√πy theo s·ª©c m·∫°nh b·∫£n th√¢n",
                                            "Tham gia", "ƒê·ªïi ƒëi·ªÉm\nTh∆∞·ªüng\n[" + slMCL + "]", "B·∫£ng\nx·∫øp h·∫°ng", "T·ª´ ch·ªëi");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.BASE_MENU:
                                        switch (select) {
                                            case 0:
                                                if (TranhNgoc.gI().isTimeRegisterWar()) {
                                                    if (player.iDMark.getTranhNgoc() == -1) {
                                                        this.createOtherMenu(player, ConstNpc.REGISTER_TRANH_NGOC,
                                                                "Ng·ªçc r·ªìng Nam·∫øc ƒëang b·ªã 2 th·∫ø l·ª±c tranh gi√†nh\nH√£y ch·ªçn c·∫•p ƒë·ªô tham gia t√πy theo s·ª©c m·∫°nh b·∫£n th√¢n\nPhe Cadic: " + TranhNgoc.gI().getPlayersCadic().size() + "\nPhe Fide: " + TranhNgoc.gI().getPlayersFide().size(),
                                                                "Tham gia phe Cadic", "Tham gia phe Fide", "ƒê√≥ng");
                                                    } else {
                                                        this.createOtherMenu(player, ConstNpc.LOG_OUT_TRANH_NGOC,
                                                                "Ng·ªçc r·ªìng Nam·∫øc ƒëang b·ªã 2 th·∫ø l·ª±c tranh gi√†nh\nH√£y ch·ªçn c·∫•p ƒë·ªô tham gia t√πy theo s·ª©c m·∫°nh b·∫£n th√¢n\nPhe Cadic: " + TranhNgoc.gI().getPlayersCadic().size() + "\nPhe Fide: " + TranhNgoc.gI().getPlayersFide().size(),
                                                                "H·ªßy\nƒêƒÉng K√Ω", "ƒê√≥ng");
                                                    }
                                                    return;
                                                }
                                                Service.getInstance().sendPopUpMultiLine(player, 0, 7184, "S·ª± ki·ªán s·∫Ω m·ªü ƒëƒÉng k√Ω v√†o l√∫c " + TranhNgoc.HOUR_REGISTER + ":" + TranhNgoc.MIN_REGISTER + "\nS·ª± ki·ªán s·∫Ω b·∫Øt ƒë·∫ßu v√†o " + TranhNgoc.HOUR_OPEN + ":" + TranhNgoc.MIN_OPEN + " v√† k·∫øt th√∫c v√†o " + TranhNgoc.HOUR_CLOSE + ":" + TranhNgoc.HOUR_CLOSE);
                                                break;
                                            case 1:// Shop
                                                ShopService.gI().openShopSpecial(player, this,
                                                        ConstNpc.TRUONG_LAO_GURU, 0, -1);
                                                break;
                                            case 2:
                                                Service.getInstance().sendThongBao(player, "Update coming soon");
                                                break;
                                        }
                                        break;
                                    case ConstNpc.REGISTER_TRANH_NGOC:
                                        switch (select) {
                                            case 0:
                                                if (!player.getSession().actived) {
                                                    Service.getInstance().sendThongBao(player, "Vui l√≤ng k√≠ch ho·∫°t t√†i kho·∫£n ƒë·ªÉ s·ª≠a d·ª•ng ch·ª©c nƒÉng n√†y!");
                                                    return;
                                                }
                                                player.iDMark.setTranhNgoc((byte) 1);
                                                TranhNgoc.gI().addPlayersCadic(player);
                                                Service.getInstance().sendThongBao(player, "ƒêƒÉng k√Ω v√†o phe Cadic th√†nh c√¥ng");
                                                break;
                                            case 1:
                                                if (!player.getSession().actived) {
                                                    Service.getInstance().sendThongBao(player, "Vui l√≤ng k√≠ch ho·∫°t t√†i kho·∫£n ƒë·ªÉ s·ª≠a d·ª•ng ch·ª©c nƒÉng n√†y!");
                                                    return;
                                                }
                                                player.iDMark.setTranhNgoc((byte) 2);
                                                TranhNgoc.gI().addPlayersFide(player);
                                                Service.getInstance().sendThongBao(player, "ƒêƒÉng k√Ω v√†o phe Fide th√†nh c√¥ng");
                                                break;
                                        }
                                        break;
                                    case ConstNpc.LOG_OUT_TRANH_NGOC:
                                        switch (select) {
                                            case 0:
                                                player.iDMark.setTranhNgoc((byte) -1);
                                                TranhNgoc.gI().removePlayersCadic(player);
                                                TranhNgoc.gI().removePlayersFide(player);
                                                Service.getInstance().sendThongBao(player, "H·ªßy ƒëƒÉng k√Ω th√†nh c√¥ng");
                                                break;
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.VUA_VEGETA:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                EscortedBoss escortedBoss = player.getEscortedBoss();
                                if (escortedBoss != null && escortedBoss instanceof Qilin) {
                                    this.createOtherMenu(player, ConstNpc.ESCORT_QILIN_MENU,
                                            "Ah con ƒë√£ t√¨m th·∫•y l√¢n con th·∫•t l·∫°c c·ªßa ta\nTa s·∫Ω th∆∞·ªüng cho con 1 vi√™n Capsule T·∫øt 2024.",
                                            "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                } else {
                                    if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                        super.openBaseMenu(player);
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.getIndexMenu() == ConstNpc.ESCORT_QILIN_MENU) {
                                    switch (select) {
                                        case 0: {
                                            if (InventoryService.gI().getCountEmptyBag(player) == 0) {
                                                this.npcChat(player,
                                                        "Con ph·∫£i c√≥ √≠t nh·∫•t 1 √¥ tr·ªëng trong h√†nh trang ta m·ªõi ƒë∆∞a cho con ƒë∆∞·ª£c");
                                                return;
                                            }
                                            EscortedBoss escortedBoss = player.getEscortedBoss();
                                            if (escortedBoss != null) {
                                                escortedBoss.stopEscorting();
                                                Item item = ItemService.gI()
                                                        .createNewItem((short) ConstItem.CAPSULE_TET_2022);
                                                item.quantity = 1;
                                                InventoryService.gI().addItemBag(player, item, 0);
                                                InventoryService.gI().sendItemBags(player);
                                                Service.getInstance().sendThongBao(player,
                                                        "B·∫°n nh·∫≠n ƒë∆∞·ª£c " + item.template.name);
                                            }
                                        }
                                        break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.TRONG_TAI:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 113) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "ƒê·∫°i h·ªôi v√µ thu·∫≠t Si√™u H·∫°ng"
                                            + "\ndi·ªÖn ra 24/7 k·ªÉ c·∫£ ng√†y l·ªÖ v√† ch·ªß nh·∫≠t"
                                            + "\nH√£y thi ƒë·∫•u ƒë·ªÉ kh·∫≥ng ƒë·ªãnh ƒë·∫≥ng c·∫•p c·ªßa m√¨nh nh√©"
                                            + "\n|7|(Ch·ª©c nƒÉng ƒëang b·∫£o tr√¨)",
                                            "Top 100\nCao th·ªß", "Nh·∫≠n th∆∞·ªüng qu√† top", "ƒê·∫•u ngay", "V·ªÅ\nƒê·∫°i H·ªôi\nV√µ Thu·∫≠t");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 113) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
//                                            case 0:
//                                                TopManager.getInstance().loadSieuHang();// L·∫•y danh s√°ch TOP t·ª´ Manager
//                                                Service.getInstance().showTopSieuHang(player);
//                                                break;
//                                            case 1:
//                                                LocalDate currentDate = LocalDate.now();
//                                                LocalDate lastClaimDate = Instant.ofEpochMilli(player.timesieuhang).atZone(ZoneId.systemDefault()).toLocalDate();
//                                                this.createOtherMenu(player, 1, "|7|Ng∆∞∆°i ·ªü Top " + player.rankSieuHang
//                                                        + "\n|0|M·ªói ng√†y ch·ªâ c√≥ th·ªÉ nh·∫≠n th∆∞·ªüng m·ªôt l·∫ßn"
//                                                        + "\n|5|" + ((lastClaimDate.isEqual(currentDate)) ? "(ƒê√£ nh·∫≠n th∆∞·ªüng)" : "(Ch∆∞a nh·∫≠n th∆∞·ªüng)"), "Nh·∫≠n th∆∞·ªüng");
//                                                break;
//                                            case 2:
//                                            try {
//                                                List<Player> list = TopManager.getInstance().getListSieuHang();
//                                                TopManager.getInstance().loadSieuHang();// L·∫•y danh s√°ch TOP t·ª´ Manager
//                                                if (list != null && !list.isEmpty()) {
//                                                    Service.getInstance().showTopSieuHang(player);
//                                                    list.clear(); // X√≥a danh s√°ch sau khi hi·ªÉn th·ªã
//                                                } else {
//                                                    // X·ª≠ l√Ω tr∆∞·ªùng h·ª£p danh s√°ch r·ªóng ho·∫∑c null (tu·ª≥ theo logic c·ªßa b·∫°n)
//                                                    System.out.println("Danh s√°ch TOP tr·ªëng ho·∫∑c kh√¥ng c√≥.");
//                                                }
//                                            } catch (Exception e) {
//                                                // X·ª≠ l√Ω ngo·∫°i l·ªá n·∫øu c√≥
//                                                e.printStackTrace();
//                                            }
//
//                                            break;
                                            case 3:
                                                ChangeMapService.gI().changeMapNonSpaceship(player, 52, -1, 432);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == 1) {
                                        switch (select) {
                                            case 0:
                                                if (!player.isnhanthuong1) {
                                                    LocalDate currentDate = LocalDate.now();
                                                    LocalDate lastClaimDate = Instant.ofEpochMilli(player.timesieuhang).atZone(ZoneId.systemDefault()).toLocalDate();

                                                    if (lastClaimDate.isEqual(currentDate)) {
                                                        Service.getInstance().sendThongBao(player, "B·∫°n ƒë√£ nh·∫≠n th∆∞·ªüng r·ªìi trong ng√†y h√¥m nay");
                                                    } else {
                                                        Item voso = null;
                                                        voso = ItemService.gI().createNewItem((short) 1296);
                                                        if (player.rankSieuHang == 10) {
                                                            voso.quantity += 10;
                                                        }
                                                        if (player.rankSieuHang == 9) {
                                                            voso.quantity += 10;
                                                        }
                                                        if (player.rankSieuHang == 8) {
                                                            voso.quantity += 10;
                                                        }
                                                        if (player.rankSieuHang == 7) {
                                                            voso.quantity += 10;
                                                        }
                                                        if (player.rankSieuHang == 6) {
                                                            voso.quantity += 10;
                                                        }
                                                        if (player.rankSieuHang == 5) {
                                                            voso.quantity += 10;
                                                        }
                                                        if (player.rankSieuHang == 4) {
                                                            voso.quantity += 10;
                                                        }
                                                        if (player.rankSieuHang == 3) {
                                                            voso.quantity += 20;
                                                        }
                                                        if (player.rankSieuHang == 2) {
                                                            voso.quantity += 30;
                                                        }
                                                        if (player.rankSieuHang == 1) {
                                                            voso.quantity += 50;
                                                        }
                                                        InventoryService.gI().addItemBag(player, voso, 99);
                                                        InventoryService.gI().sendItemBags(player);
                                                        PlayerService.gI().sendInfoHpMpMoney(player);
                                                        Service.getInstance().sendThongBao(player, "B·∫°n ƒë√£ nh·∫≠n ƒë∆∞·ª£c " + voso.template.name);

                                                        // C·∫≠p nh·∫≠t th√¥ng tin ng√†y nh·∫≠n th∆∞·ªüng
                                                        player.timesieuhang = System.currentTimeMillis();
                                                        player.isnhanthuong1 = true;
                                                    }
                                                    if (!lastClaimDate.isEqual(currentDate)) {
                                                        player.isnhanthuong1 = false;
                                                    }
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "B·∫°n ƒë√£ nh·∫≠n th∆∞·ªüng r·ªìi");
                                                }
                                                break;

                                        }
                                    }

                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.ONG_GOHAN:
                case ConstNpc.ONG_MOORI:
                case ConstNpc.ONG_PARAGUS:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                String mtv;
                                if (player.getSession().actived) {
                                    mtv = "B·∫°n ƒë√£ l√† th√†nh vi√™n ch√≠nh th·ª©c c·ªßa Ng·ªçc r·ªìng Kid"
                                            + "\nƒê√£ m·ªü kh√≥a t√≠nh nƒÉng Giao d·ªãch v√† Chat th·∫ø gi·ªõi !!!";
                                } else {
                                    mtv = "T√†i kho·∫£n c·ªßa b·∫°n ch∆∞a ƒë∆∞·ª£c M·ªü th√†nh vi√™n !!!";
                                }
                                // "Nh·∫≠n\nKho V√†ng"
                                // + "\n|1|Kho ch·ª©a Th·ªèi v√†ng: " + player.getSession().goldBar + " Th·ªèi v√†ng"
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "H√£y c√πng kh√°m ph√° Th·∫ø gi·ªõi n√†y n√†o\n"
                                                    .replaceAll("%1", player.gender == ConstPlayer.TRAI_DAT ? "Quy l√£o Kam√™"
                                                            : player.gender == ConstPlayer.NAMEC ? "Tr∆∞·ªüng l√£o Guru" : "Vua Vegeta")
                                            + "|7|Ta ƒëang gi·ªØ ti·ªÅn ti·∫øt ki·ªám c·ªßa con "
                                            + player.getSession().vnd + " VND"
                                            + "\n\n|2| ***" + mtv + "***",
                                            "ƒê·ªïi M·∫≠t Kh·∫©u", "Giftcode", "Nh·∫≠n ƒë·ªá t·ª≠",
                                            "Khu v·ª±c\nLuy·ªán t·∫≠p", "Next NV", "M·ªü th√†nh vi√™n", "Qu√† m·ªëc n·∫°p", "Nh·∫≠p Code\nri√™ng");//, "M·ªü th√†nh vi√™n", "Qu√† m·ªëc n·∫°p", 
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            // ƒë·ªïi m·∫≠t kh·∫©u
                                            Input.gI().createFormChangePassword(player);
                                            break;
                                        case 1:
                                            // nh·∫≠p giftcode
                                            Input.gI().createFormGiftCode(player);
                                            break;
                                        case 2:
                                            // nh·∫≠n ƒë·ªá t·ª≠
                                            if (player.pet == null) {
                                                PetService.gI().createNormalPet(player);
                                                Service.getInstance().sendThongBao(player, "B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c ƒë·ªá t·ª≠");
                                            } else {
                                                this.npcChat(player, "Tham Lam");
                                            }
                                            break;
//                                        case 3:
//                                            // nh·∫≠n th·ªèi v√†ng
//                                            if (player.getSession().goldBar > 0) {
//                                                this.createOtherMenu(player, ConstNpc.MENU_PHAN_THUONG,
//                                                        "Ta ƒëang gi·ªØ cho con: " + player.getSession().goldBar
//                                                        + " Th·ªèi v√†ng, con c√≥ nh·∫≠n lu√¥n kh√¥ng?",
//                                                        "Nh·∫≠n " + player.getSession().goldBar + "\nTh·ªèi v√†ng",
//                                                        "T·ª´ ch·ªëi");
//                                                // "R∆∞∆°ng Qu√†",
//                                            } else {
//                                                this.createOtherMenu(player, ConstNpc.MENU_PHAN_THUONG,
//                                                        "Hi·ªán t·∫°i √¥ng kh√¥ng gi·ªØ c·ªßa con th·ªèi v√†ng n√†o c·∫£!", "T·ª´ ch·ªëi");
//                                                // "M·ªü r∆∞∆°ng\nqu√†",
//                                            }
//                                            break;
                                        case 3:
                                            // luy·ªán t·∫≠p
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 165, -1, -1);
                                            break;
                                        case 4:
                                            // next nhi·ªám v·ª•
                                            if (TaskService.gI().TaskNext(player) == true && TaskService.gI().getIdTask(player) < ConstTask.TASK_34_0) {
                                                player.playerTask.taskMain.index++;
                                                if (player.playerTask.taskMain.index >= player.playerTask.taskMain.subTasks.size()) {
                                                    TaskService.gI().sendNextTaskMain(player);
                                                } else {
                                                    TaskService.gI().sendNextSubTask(player);
                                                }
                                            } else {
                                                this.npcChat(player, "Ch·ªâ h·ªó tr·ª£ Next Nhi·ªám v·ª• K·∫øt b·∫°n v√† V√†o bang");
                                            }
//                                            if (TaskService.gI().getIdTask(player) < ConstTask.TASK_34_0) {
//                                                player.playerTask.taskMain.index++;
//                                                if (player.playerTask.taskMain.index >= player.playerTask.taskMain.subTasks.size()) {
//                                                    TaskService.gI().sendNextTaskMain(player);
//                                                } else {
//                                                    TaskService.gI().sendNextSubTask(player);
//                                                }
//                                            } else {
//                                                this.npcChat(player, "ƒê√£ h·∫øt nhi·ªám v·ª•");
//                                            }
                                            break;
                                        case 5:
                                            // m·ªü th√†nh vi√™n
                                            if (player.getSession().actived) {
                                                this.createOtherMenu(player, 53747,
                                                        "|7|M·ªû TH√ÄNH VI√äN"
                                                        + "\n|5|B·∫°n ƒë√£ l√† th√†nh vi√™n ch√≠nh th·ª©c c·ªßa Ng·ªçc r·ªìng Kid"
                                                        + "\nƒê√£ m·ªü kh√≥a ch·ª©c nƒÉng Giao d·ªãch v√† Chat th·∫ø gi·ªõi"
                                                        + "\n|4|H√£y ti·∫øp t·ª•c n√¢ng cao s·ª©c m·∫°nh c·ªßa m√¨nh l√™n n√†o",
                                                        "·ªê k√™");
                                            } else {
                                                this.createOtherMenu(player, 1456,
                                                        "|7|M·ªû TH√ÄNH VI√äN"
                                                        + "\n|5|Khi b·∫°n tr·ªù th√†nh th√†nh vi√™n ch√≠nh th·ª©c c·ªßa Ng·ªçc r·ªìng Kid s·∫Ω ƒë∆∞·ª£c m·ªü kh√≥a ch·ª©c nƒÉng Giao d·ªãch v√† Chat th·∫ø gi·ªõi"
                                                        + "\n|3|Gi√° K√≠ch ho·∫°t t√†i kho·∫£n: 15.000 Coin"
                                                        + "\n|1|Coin hi·ªán c√≤n : " + " " + Util.format(player.getSession().vnd) + " Coin"
                                                        + "\n|7|B·∫°n c√≥ ch·∫Øc mu·ªën K√≠ch ho·∫°t t√†i kho·∫£n kh√¥ng?",
                                                        "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                            }
                                            break;
                                        case 6:
                                            // qu√† m·ªëc n·∫°p
                                            this.createOtherMenu(player, 1432,
                                                    "|7|Q√ôA M·ªêC N·∫†P"
                                                    + "\n\n|1|T√≠ch l≈©y ƒë·ªïi Coin c·ªßa b·∫°n l√† : " + Util.format(player.tongnap)
                                                    + "\n\n|5|- M·ªëc 50k : 5 B·ªô Ng·ªçc r·ªìng 1s, 10 item Cu·ªìng B·∫°o"
                                                    + "\n- M·ªëc 100k : 100 H·ªôp s√°ch k·ªπ nƒÉng, 30 item Cu·ªìng B·∫°o, 1 tr·ª©ng ƒë·ªá Berus"
                                                    + "\n- M·ªëc 200k : 500 H·ªôp s√°ch k·ªπ nƒÉng, 90 item Cu·ªìng B·∫°o"
                                                    + "\n- M·ªëc 500k : 1000 H·ªôp s√°ch k·ªπ nƒÉng, 99 M√°y d√≤ Boss, 300 H·ªôp ph√°p s∆∞, 10 r∆∞∆°ng Sao pha l√™ VIP, 1 tr·ª©ng ƒë·ªá Zeno"
                                                    + "\n M·ªëc 1tr : Danh hi·ªáu Thi√™n t·ª≠(S·ª≠ d·ª•ng cho ƒê·ªá t·ª≠), 30 K·∫πo m·ªôt m·∫Øt, 20 ƒê√° C·∫ßu v√≤ng, 500 H·ªôp ph√°p s∆∞, 20 Vi√™n Ng·ªçc r·ªìng Si√™u c·∫•p, H·ªôp ƒë·ªì k√≠ch ho·∫°t th·∫ßn linh"
                                                    + "\n M·ªëc 2tr : 1000 Capsule B·∫°c, 2000 Capsule V√†ng, 2000 ƒê√° Ho√†ng Kim, 50 Vi√™n Ng·ªçc r·ªìng Si√™u c·∫•p, H·ªôp ƒë·ªì k√≠ch ho·∫°t hu·ª∑ di·ªát"
                                                    + "\n M·ªëc 5tr : 3000 Capsule B·∫°c, 5000 Capsule V√†ng, 5000 ƒê√° Ho√†ng Kim, 15.000 Th·ªèi v√†ng, H·ªôp ƒë·ªì k√≠ch ho·∫°t thi√™n s·ª©"
                                                    + "\n\n|2|M·ªói m·ªëc ch·ªâ nh·∫≠n ƒë∆∞·ª£c 1 l·∫ßn !!!",
                                                    "50k" + (player.mot == 0 ? "\n(Ch∆∞a nh·∫≠n)" : "\n(ƒê√£ nh·∫≠n)"),
                                                    "100k" + (player.hai == 0 ? "\n(Ch∆∞a nh·∫≠n)" : "\n(ƒê√£ nh·∫≠n)"),
                                                    "200k" + (player.ba == 0 ? "\n(Ch∆∞a nh·∫≠n)" : "\n(ƒê√£ nh·∫≠n)"),
                                                    "500k" + (player.bon == 0 ? "\n(Ch∆∞a nh·∫≠n)" : "\n(ƒê√£ nh·∫≠n)"),
                                                    "1Tr" + (player.nam == 0 ? "\n(Ch∆∞a nh·∫≠n)" : "\n(ƒê√£ nh·∫≠n)"),
                                                    "2Tr" + (player.sau == 0 ? "\n(Ch∆∞a nh·∫≠n)" : "\n(ƒê√£ nh·∫≠n)"),
                                                    "5Tr" + (player.bay == 0 ? "\n(Ch∆∞a nh·∫≠n)" : "\n(ƒê√£ nh·∫≠n)"));
                                            break;
                                        case 7:
                                            // nh·∫≠p code ri√™ng
                                            Input.gI().createGiftMember(player);
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == 1456) {
                                    switch (select) {
                                        case 0:
                                            if (player.getSession().actived) {
                                                Service.getInstance().sendThongBao(player, "|4|B·∫°n ƒë√£ m·ªü th√†nh vi√™n r·ªìi m√†. Ti·∫øp t·ª•c ch∆°i game thui n√†o!!!!");
                                                return;
                                            }
                                            if (player.tongnap < 15000 && !player.getSession().actived) {
                                                Service.getInstance().sendThongBao(player, "|3|T√≠ch l≈©y Quy ƒë·ªïi ch∆∞a ƒë·ªß 15.000ƒê. Vui l√≤ng li√™n h·ªá ADMIN ho·∫∑c l√™n Website ƒë·ªÉ n·∫°p!!");
                                                return;
                                            }
                                            if (player.tongnap >= 15000 && !player.getSession().actived) {
                                                try {
                                                    PlayerDAO.subActive(player, 1);
                                                    player.getSession().actived = true;
                                                    Service.getInstance().sendThongBao(player, "|2|B·∫°n ƒë√£ m·ªü th√†nh vi√™n Th√†nh c√¥ng. ƒê√£ m·ªü kh√≥a ch·ª©c nƒÉng Giao d·ªãch v√† Chat th·∫ø gi·ªõi !!");
                                                } catch (Exception e) {
                                                    System.out.println("Loi chuc nang mo thanh vien");
                                                }
                                            }
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == 1432) {
                                    switch (select) {
                                        case 0:
                                            if (player.tongnap < 50000) {
                                                this.npcChat(player, "|7|B·∫°n ch∆∞a ƒë·ªß ƒëi·ªÅu ki·ªán nh·∫≠n!!!!");
                                                return;
                                            }
                                            if (player.mot != 0) {
                                                this.npcChat(player, "|7|B·∫°n ƒë√£ nh·∫≠n th∆∞·ªüng r·ªìi m√† !!!!");
                                                return;
                                            }
                                            if (InventoryService.gI().getCountEmptyBag(player) < 8) {
                                                this.npcChat(player, "H√†nh trang c·ªßa b·∫°n kh√¥ng ƒë·ªß ch·ªó tr·ªëng");
                                                return;
                                            }
                                            if (player.tongnap >= 50000 && player.mot == 0) {
                                                player.mot++;
                                                Item nro1 = ItemService.gI().createNewItem((short) 14);
                                                Item nro2 = ItemService.gI().createNewItem((short) 15);
                                                Item nro3 = ItemService.gI().createNewItem((short) 16);
                                                Item nro4 = ItemService.gI().createNewItem((short) 17);
                                                Item nro5 = ItemService.gI().createNewItem((short) 18);
                                                Item nro6 = ItemService.gI().createNewItem((short) 19);
                                                Item nro7 = ItemService.gI().createNewItem((short) 20);
                                                Item cuonghoa = ItemService.gI().createNewItem((short) 1386);
                                                nro1.quantity = 5;
                                                nro2.quantity = 5;
                                                nro3.quantity = 5;
                                                nro4.quantity = 5;
                                                nro5.quantity = 5;
                                                nro6.quantity = 5;
                                                nro7.quantity = 5;
                                                cuonghoa.quantity = 10;
                                                InventoryService.gI().addItemBag(player, nro1, 99);
                                                InventoryService.gI().addItemBag(player, nro2, 99);
                                                InventoryService.gI().addItemBag(player, nro3, 99);
                                                InventoryService.gI().addItemBag(player, nro4, 99);
                                                InventoryService.gI().addItemBag(player, nro5, 99);
                                                InventoryService.gI().addItemBag(player, nro6, 99);
                                                InventoryService.gI().addItemBag(player, nro7, 99);
                                                InventoryService.gI().addItemBag(player, cuonghoa, 99);
                                                InventoryService.gI().sendItemBags(player);
                                                this.npcChat(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c 5 B·ªô Ng·ªçc r·ªìng 1s, 10 item Cu·ªìng B·∫°o");
                                            }
                                            break;
                                        case 1:
                                            if (player.tongnap < 100000) {
                                                this.npcChat(player, "|7|B·∫°n ch∆∞a ƒë·ªß ƒëi·ªÅu ki·ªán nh·∫≠n!!!!");
                                                return;
                                            }
                                            if (player.hai != 0) {
                                                this.npcChat(player, "|7|B·∫°n ƒë√£ nh·∫≠n th∆∞·ªüng r·ªìi m√† !!!!");
                                                return;
                                            }
                                            if (InventoryService.gI().getCountEmptyBag(player) < 3) {
                                                this.npcChat(player, "H√†nh trang c·ªßa b·∫°n kh√¥ng ƒë·ªß ch·ªó tr·ªëng");
                                                return;
                                            }
                                            if (player.tongnap >= 100000 && player.hai == 0) {
                                                player.hai++;
                                                Item ruongsach = ItemService.gI().createNewItem((short) 1525);
                                                Item cuonghoa = ItemService.gI().createNewItem((short) 1386);
                                                Item trungBerus = ItemService.gI().createNewItem((short) 1539);
                                                ruongsach.quantity = 100;
                                                cuonghoa.quantity = 50;
                                                trungBerus.quantity = 1;
                                                InventoryService.gI().addItemBag(player, ruongsach, 1);
                                                InventoryService.gI().addItemBag(player, cuonghoa, 1);
                                                InventoryService.gI().addItemBag(player, trungBerus, 1);
                                                InventoryService.gI().sendItemBags(player);
                                                this.npcChat(player, "200 H·ªôp s√°ch k·ªπ nƒÉng, 50 item Cu·ªìng B·∫°o, 1 tr·ª©ng ƒë·ªá Berus");
                                            }
                                            break;
                                        case 2:
                                            if (player.tongnap < 200000) {
                                                this.npcChat(player, "|7|B·∫°n ch∆∞a ƒë·ªß ƒëi·ªÅu ki·ªán nh·∫≠n!!!!");
                                                return;
                                            }
                                            if (player.ba != 0) {
                                                this.npcChat(player, "|7|B·∫°n ƒë√£ nh·∫≠n th∆∞·ªüng r·ªìi m√† !!!!");
                                                return;
                                            }
                                            if (InventoryService.gI().getCountEmptyBag(player) < 3) {
                                                this.npcChat(player, "H√†nh trang c·ªßa b·∫°n kh√¥ng ƒë·ªß ch·ªó tr·ªëng");
                                                return;
                                            }
                                            if (player.tongnap >= 200000 && player.ba == 0) {
                                                player.ba++;
                                                Item ruongsach = ItemService.gI().createNewItem((short) 1525);
                                                Item cuonghoa = ItemService.gI().createNewItem((short) 1386);
                                                ruongsach.quantity = 500;
                                                cuonghoa.quantity = 90;
                                                InventoryService.gI().addItemBag(player, ruongsach, 1);
                                                InventoryService.gI().addItemBag(player, cuonghoa, 1);
                                                InventoryService.gI().sendItemBags(player);
                                                this.npcChat(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c 500 H·ªôp s√°ch k·ªπ nƒÉng, 90 item Cu·ªìng B·∫°o");
                                            }
                                            break;
                                        case 3:
                                            if (player.tongnap < 500000) {
                                                this.npcChat(player, "|7|B·∫°n ch∆∞a ƒë·ªß ƒëi·ªÅu ki·ªán nh·∫≠n!!!!");
                                                return;
                                            }
                                            if (player.bon != 0) {
                                                this.npcChat(player, "|7|B·∫°n ƒë√£ nh·∫≠n th∆∞·ªüng r·ªìi m√† !!!!");
                                                return;
                                            }
                                            if (InventoryService.gI().getCountEmptyBag(player) < 4) {
                                                this.npcChat(player, "H√†nh trang c·ªßa b·∫°n kh√¥ng ƒë·ªß ch·ªó tr·ªëng");
                                                return;
                                            }
                                            if (player.tongnap >= 500000 && player.bon == 0) {
                                                player.bon++;
                                                Item ruongsach = ItemService.gI().createNewItem((short) 1525);
                                                Item cuonghoa = ItemService.gI().createNewItem((short) 1237);
                                                Item maydo = ItemService.gI().createNewItem((short) 1296);
                                                Item ruongspl = ItemService.gI().createNewItem((short) 1479);
                                                Item trungZeno = ItemService.gI().createNewItem((short) 1540);
                                                ruongspl.quantity = 10;
                                                ruongsach.quantity = 1000;
                                                cuonghoa.quantity = 500;
                                                maydo.quantity = 99;
                                                trungZeno.quantity = 1;
                                                InventoryService.gI().addItemBag(player, ruongspl, 99);
                                                InventoryService.gI().addItemBag(player, maydo, 99);
                                                InventoryService.gI().addItemBag(player, ruongsach, 1);
                                                InventoryService.gI().addItemBag(player, cuonghoa, 1);
                                                InventoryService.gI().addItemBag(player, trungZeno, 1);
                                                InventoryService.gI().sendItemBags(player);
                                                this.npcChat(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c 2000 H·ªôp s√°ch k·ªπ nƒÉng, 99 m√°y d√≤ Boss, 500 H·ªôp ph√°p s∆∞, 50 r∆∞∆°ng Sao pha l√™ VIP, 1 tr·ª©ng ƒë·ªá Zeno");
                                            }
                                            break;
                                        case 4:
                                            if (player.tongnap < 1000000) {
                                                this.npcChat(player, "|7|B·∫°n ch∆∞a ƒë·ªß ƒëi·ªÅu ki·ªán nh·∫≠n!!!!");
                                                return;
                                            }
                                            if (player.nam != 0) {
                                                this.npcChat(player, "|7|B·∫°n ƒë√£ nh·∫≠n th∆∞·ªüng r·ªìi m√† !!!!");
                                                return;
                                            }
                                            if (InventoryService.gI().getCountEmptyBag(player) < 5) {
                                                this.npcChat(player, "H√†nh trang c·ªßa b·∫°n kh√¥ng ƒë·ªß ch·ªó tr·ªëng");
                                                return;
                                            }
                                            if (player.tongnap >= 1000000 && player.nam == 0) {
                                                player.nam++;
                                                Item hopps = ItemService.gI().createNewItem((short) 1237);
                                                Item danhhieu = ItemService.gI().createNewItem((short) 1326);
                                                Item cauvong = ItemService.gI().createNewItem((short) 1083);
                                                Item nrosc = ItemService.gI().createNewItem((short) 1015);
                                                Item keo = ItemService.gI().createNewItem((short) 899);
                                                Item khthanlinh = ItemService.gI().createNewItem((short) 1558);
                                                danhhieu.itemOptions.add(new ItemOption(50, 40));
                                                danhhieu.itemOptions.add(new ItemOption(77, 55));
                                                danhhieu.itemOptions.add(new ItemOption(77, 55));
                                                danhhieu.itemOptions.add(new ItemOption(14, 15));
                                                danhhieu.itemOptions.add(new ItemOption(101, 1200));
                                                danhhieu.itemOptions.add(new ItemOption(30, 1));
                                                nrosc.quantity = 20;
                                                cauvong.quantity = 20;
                                                hopps.quantity = 1000;
                                                keo.quantity = 30;
                                                khthanlinh.quantity = 1;
                                                InventoryService.gI().addItemBag(player, nrosc, 99);
                                                InventoryService.gI().addItemBag(player, danhhieu, 99);
                                                InventoryService.gI().addItemBag(player, cauvong, 99);
                                                InventoryService.gI().addItemBag(player, hopps, 999);
                                                InventoryService.gI().addItemBag(player, keo, 999);
                                                InventoryService.gI().addItemBag(player, khthanlinh, 1);
                                                InventoryService.gI().sendItemBags(player);
                                                this.npcChat(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c Danh hi·ªáu Thi√™n t·ª≠, 20 ƒê√° c·∫ßu v√≤ng v√† 1000 H·ªôp ph√°p s∆∞, 20 Vi√™n Ng·ªçc r·ªìng Si√™u c·∫•p, H·ªôp ƒë·ªì k√≠ch ho·∫°t th·∫ßn linh");
                                            }
                                            break;
                                        case 5:
                                            if (player.tongnap < 2000000) {
                                                this.npcChat(player, "|7|B·∫°n ch∆∞a ƒë·ªß ƒëi·ªÅu ki·ªán nh·∫≠n!!!!");
                                                return;
                                            }
                                            if (player.sau != 0) {
                                                this.npcChat(player, "|7|B·∫°n ƒë√£ nh·∫≠n th∆∞·ªüng r·ªìi m√† !!!!");
                                                return;
                                            }
                                            if (InventoryService.gI().getCountEmptyBag(player) < 4) {
                                                this.npcChat(player, "H√†nh trang c·ªßa b·∫°n kh√¥ng ƒë·ªß ch·ªó tr·ªëng");
                                                return;
                                            }
                                            if (player.tongnap >= 2000000 && player.sau == 0) {
                                                player.sau++;
                                                Item csbac = ItemService.gI().createNewItem((short) 573, 1000);
                                                Item csvang = ItemService.gI().createNewItem((short) 574, 2000);
                                                Item dahkim = ItemService.gI().createNewItem((short) 1318, 2000);
                                                Item nrsc = ItemService.gI().createNewItem((short) 1015, 50);
                                                Item khHuyDiet = ItemService.gI().createNewItem((short) 1559);
                                                InventoryService.gI().addItemBag(player, csbac, 1);
                                                InventoryService.gI().addItemBag(player, csvang, 1);
                                                InventoryService.gI().addItemBag(player, dahkim, 1);
                                                InventoryService.gI().addItemBag(player, nrsc, 1);
                                                InventoryService.gI().addItemBag(player, khHuyDiet, 1);
                                                InventoryService.gI().sendItemBags(player);
                                                this.npcChat(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c 1000 Capsule B·∫°c, 2000 Capsule V√†ng, 2000 ƒê√° Ho√†ng Kim, 50 Vi√™n Ng·ªçc r·ªìng Si√™u c·∫•p, H·ªôp ƒë·ªì k√≠ch ho·∫°t hu·ª∑ di·ªát");
                                            }
                                            break;
                                        case 6:
                                            if (player.tongnap < 5000000) {
                                                this.npcChat(player, "|7|B·∫°n ch∆∞a ƒë·ªß ƒëi·ªÅu ki·ªán nh·∫≠n!!!!");
                                                return;
                                            }
                                            if (player.bay != 0) {
                                                this.npcChat(player, "|7|B·∫°n ƒë√£ nh·∫≠n th∆∞·ªüng r·ªìi m√† !!!!");
                                                return;
                                            }
                                            if (InventoryService.gI().getCountEmptyBag(player) < 4) {
                                                this.npcChat(player, "H√†nh trang c·ªßa b·∫°n kh√¥ng ƒë·ªß ch·ªó tr·ªëng");
                                                return;
                                            }
                                            if (player.tongnap >= 5000000 && player.bay == 0) {
                                                player.bay++;
                                                Item csbac = ItemService.gI().createNewItem((short) 573, 3000);
                                                Item csvang = ItemService.gI().createNewItem((short) 574, 5000);
                                                Item dahkim = ItemService.gI().createNewItem((short) 1318, 5000);
                                                Item tvang = ItemService.gI().createNewItem((short) 457, 15000);
                                                Item skhts = ItemService.gI().createNewItem((short) 1105, 1);
                                                InventoryService.gI().addItemBag(player, csbac, 1);
                                                InventoryService.gI().addItemBag(player, csvang, 1);
                                                InventoryService.gI().addItemBag(player, dahkim, 1);
                                                InventoryService.gI().addItemBag(player, tvang, 1);
                                                InventoryService.gI().addItemBag(player, skhts, 1);
                                                InventoryService.gI().sendItemBags(player);
                                                this.npcChat(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c 3000 Capsule B·∫°c, 5000 Capsule V√†ng, 5000 ƒê√° Ho√†ng Kim, 15.000 Th·ªèi v√†ng, H·ªôp ƒë·ªì k√≠ch ho·∫°t thi√™n s·ª©");
                                            }
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.QUA_TAN_THU) {
                                    switch (select) {
                                        case 0:
                                            // if (!player.gift.gemTanThu) {
                                            if (true) {
                                                player.inventory.gem = 200000;
                                                Service.getInstance().sendMoney(player);
                                                Service.getInstance().sendThongBao(player,
                                                        "B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c 100K ng·ªçc xanh");
                                                player.gift.gemTanThu = true;
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.IGNORE_MENU,
                                                        "Con ƒë√£ nh·∫≠n ph·∫ßn qu√† n√†y r·ªìi m√†", "ƒê√≥ng");
                                            }
                                            break;
                                        // case 1:
                                        // if (nhanVang) {
                                        // player.inventory.gold = Inventory.LIMIT_GOLD;
                                        // Service.getInstance().sendMoney(player);
                                        // Service.getInstance().sendThongBao(player, "B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c 2 t·ªâ v√†ng");
                                        // } else {
                                        // this.npcChat("T√≠nh nƒÉng Nh·∫≠n v√†ng ƒë√£ ƒë√≥ng.");
                                        // }
                                        // break;
                                        case 1:
                                            if (nhanDeTu) {
                                                if (player.pet == null) {
                                                    PetService.gI().createNormalPet(player);
                                                    Service.getInstance().sendThongBao(player,
                                                            "B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c ƒë·ªá t·ª≠");
                                                } else {
                                                    this.npcChat("Con ƒë√£ nh·∫≠n ƒë·ªá t·ª≠ r·ªìi");
                                                }
                                            } else {
                                                this.npcChat("T√≠nh nƒÉng Nh·∫≠n ƒë·ªá t·ª≠ ƒë√£ ƒë√≥ng.");
                                            }
                                            break;

                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_PHAN_THUONG) {
                                    switch (select) {
                                        // case 0:
                                        // ShopService.gI().openBoxItemReward(player);
                                        // break;
                                        case 0:
                                            if (player.getSession().goldBar > 0) {
                                                if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                                                    int quantity = player.getSession().goldBar;
                                                    Item goldBar = ItemService.gI().createNewItem((short) 457,
                                                            quantity);
                                                    InventoryService.gI().addItemBag(player, goldBar, 0);
                                                    InventoryService.gI().sendItemBags(player);
                                                    this.npcChat(player, "√îng ƒë√£ ƒë·ªÉ " + quantity
                                                            + " Th·ªèi v√†ng v√†o h√†nh trang con r·ªìi ƒë·∫•y");
                                                    PlayerDAO.subGoldBar(player, quantity);
                                                    player.getSession().goldBar = 0;
                                                } else {
                                                    this.npcChat(player,
                                                            "Con ph·∫£i c√≥ √≠t nh·∫•t 1 √¥ tr·ªëng trong h√†nh trang √¥ng m·ªõi ƒë∆∞a cho con ƒë∆∞·ª£c");
                                                }
                                            }
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;

                case ConstNpc.BUNMA:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "C·∫≠u c·∫ßn trang b·ªã g√¨ c·ª© ƒë·∫øn ch·ªó t√¥i nh√©", "C·ª≠a\nh√†ng");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:// Shop
                                            if (player.gender == ConstPlayer.TRAI_DAT) {
                                                this.openShopWithGender(player, ConstNpc.SHOP_BUNMA_QK_0, 0);
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.IGNORE_MENU,
                                                        "Xin l·ªói c∆∞ng, ch·ªã ch·ªâ b√°n ƒë·ªì cho ng∆∞·ªùi Tr√°i ƒê·∫•t", "ƒê√≥ng");
                                            }
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.DENDE:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    if (player.isHoldNamecBall) {
                                        this.createOtherMenu(player, ConstNpc.ORTHER_MENU,
                                                "√î,ng·ªçc r·ªìng Namek,anh th·∫≠t may m·∫Øn,n·∫øu t√¨m ƒë·ªß 7 vi√™n ng·ªçc c√≥ th·ªÉ tri·ªáu h·ªìi R·ªìng Th·∫ßn Namek,",
                                                "G·ªçi r·ªìng", "T·ª´ ch·ªëi");
                                    } else {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                                "Anh c·∫ßn trang b·ªã g√¨ c·ª© ƒë·∫øn ch·ªó em nh√©", "C·ª≠a\nh√†ng");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:// Shop
                                            if (player.gender == ConstPlayer.NAMEC) {
                                                this.openShopWithGender(player, ConstNpc.SHOP_DENDE_0, 0);
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.IGNORE_MENU,
                                                        "Xin l·ªói anh, em ch·ªâ b√°n ƒë·ªì cho d√¢n t·ªôc Nam·∫øc", "ƒê√≥ng");
                                            }
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.ORTHER_MENU) {
                                    NamekBallWar.gI().summonDragon(player, this);
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.APPULE:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Ng∆∞∆°i c·∫ßn trang b·ªã g√¨ c·ª© ƒë·∫øn ch·ªó ta nh√©", "C·ª≠a\nh√†ng");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:// Shop
                                            if (player.gender == ConstPlayer.XAYDA) {
                                                this.openShopWithGender(player, ConstNpc.SHOP_APPULE_0, 0);
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.IGNORE_MENU,
                                                        "V·ªÅ h√†nh tinh h·∫° ƒë·∫≥ng c·ªßa ng∆∞∆°i m√† mua ƒë·ªì c√πi nh√©. T·∫°i ƒë√¢y ta ch·ªâ b√°n ƒë·ªì cho ng∆∞·ªùi Xayda th√¥i",
                                                        "ƒê√≥ng");
                                            }
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.DR_DRIEF:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player pl) {
                            if (canOpenNpc(pl)) {
                                if (this.mapId == 84) {
                                    this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                            "T√†u V≈© Tr·ª• c·ªßa ta c√≥ th·ªÉ ƒë∆∞a c·∫≠u ƒë·∫øn h√†nh tinh kh√°c ch·ªâ trong 3 gi√¢y. C·∫≠u mu·ªën ƒëi ƒë√¢u?",
                                            pl.gender == ConstPlayer.TRAI_DAT ? "ƒê·∫øn\nTr√°i ƒê·∫•t"
                                                    : pl.gender == ConstPlayer.NAMEC ? "ƒê·∫øn\nNam·∫øc" : "ƒê·∫øn\nXayda");
                                } else if (this.mapId == 153) {
                                    Clan clan = pl.clan;
                                    ClanMember cm = pl.clanMember;
                                    if (cm.role == Clan.LEADER) {
                                        this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                "C·∫ßn 1000 capsule bang [ƒëang c√≥ " + clan.clanPoint
                                                + " capsule bang] ƒë·ªÉ n√¢ng c·∫•p bang h·ªôi l√™n c·∫•p "
                                                + (clan.level + 1) + "\n"
                                                + "+1 t·ªëi ƒëa s·ªë l∆∞·ª£ng th√†nh vi√™n\n"
                                                + "|3|C√πng 1 th√†nh vi√™n trong bang ƒë√°nh qu√°i ·ªü L√£nh ƒë·ªãa bang h·ªôi ƒë·ªÉ nh·∫≠n ƒë∆∞·ª£c Capsule bang h·ªôi",
                                                "V·ªÅ\nƒê·∫£oKame", "G√≥p " + cm.memberPoint + " capsule", "N√¢ng c·∫•p",
                                                "T·ª´ ch·ªëi");
                                    } else {
                                        this.createOtherMenu(pl, ConstNpc.BASE_MENU, "B·∫°n ƒëang c√≥ " + cm.memberPoint
                                                + " capsule bang,b·∫°n c√≥ mu·ªën ƒë√≥ng g√≥p to√†n b·ªô cho bang h·ªôi c·ªßa m√¨nh kh√¥ng ?",
                                                "V·ªÅ\nƒê·∫£oKame", "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                    }
                                } else if (!TaskService.gI().checkDoneTaskTalkNpc(pl, this)) {
                                    if (pl.playerTask.taskMain.id == 7) {
                                        NpcService.gI().createTutorial(pl, this.avartar,
                                                "H√£y l√™n ƒë∆∞·ªùng c·ª©u ƒë·ª©a b√© nh√† t√¥i\n"
                                                + "Ch·∫Øc b√¢y gi·ªù n√≥ ƒëang s·ª£ h√£i l·∫Øm r·ªìi");
                                    } else {
                                        this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                "T√†u V≈© Tr·ª• c·ªßa ta c√≥ th·ªÉ ƒë∆∞a c·∫≠u ƒë·∫øn h√†nh tinh kh√°c ch·ªâ trong 3 gi√¢y. C·∫≠u mu·ªën ƒëi ƒë√¢u?",
                                                "ƒê·∫øn\nNam·∫øc", "ƒê·∫øn\nXayda", "Si√™u th·ªã");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 84) {
                                    ChangeMapService.gI().changeMapBySpaceShip(player, player.gender + 24, -1, -1);
                                } else if (mapId == 153) {
                                    switch (select) {
                                        case 0:
                                            ChangeMapService.gI().changeMap(player, ConstMap.DAO_KAME, -1, 1059, 408);
                                            break;
                                        case 1:
                                            Clan clan = player.clan;
                                            if (clan == null) {
                                                Service.getInstance().sendThongBao(player, "Ch∆∞a c√≥ bang h·ªôi");
                                                return;
                                            }
                                            ClanMember cm = player.clanMember;
                                            player.clan.clanPoint += cm.memberPoint;
                                            cm.clanPoint += cm.memberPoint;
                                            cm.memberPoint = 0;
                                            Service.getInstance().sendThongBao(player, "ƒê√≥ng g√≥p th√†nh c√¥ng");
                                            break;
                                        case 2:
                                            Clan clan1 = player.clan;
                                            if (clan1 == null) {
                                                Service.getInstance().sendThongBao(player,
                                                        "B·∫°n ch∆∞a c√≥ bang h·ªôi");
                                                return;
                                            }
                                            if (clan1.level >= 10) {
                                                Service.getInstance().sendThongBao(player,
                                                        "Bang h·ªôi c·ªßa b·∫°n ƒë√£ ƒë·∫°t c·∫•p t·ªëi ƒëa");
                                                return;
                                            }
                                            if (clan1.clanPoint < 1000) {
                                                Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß capsule");
                                            } else {
                                                clan1.level++;
                                                clan1.maxMember++;
                                                clan1.clanPoint -= 1000;
                                                Service.getInstance().sendThongBao(player,
                                                        "Bang h·ªôi c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c n√¢ng c·∫•p l√™n c·∫•p " + clan1.level);
                                            }
                                            break;
                                    }
                                } else if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 25, -1, -1);
                                            break;
                                        case 1:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 26, -1, -1);
                                            break;
                                        case 2:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 84, -1, -1);
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.CARGO:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player pl) {
                            if (canOpenNpc(pl)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(pl, this)) {
                                    if (pl.playerTask.taskMain.id == 7) {
                                        NpcService.gI().createTutorial(pl, this.avartar,
                                                "H√£y l√™n ƒë∆∞·ªùng c·ª©u ƒë·ª©a b√© nh√† t√¥i\n"
                                                + "Ch·∫Øc b√¢y gi·ªù n√≥ ƒëang s·ª£ h√£i l·∫Øm r·ªìi");
                                    } else {
                                        this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                "T√†u V≈© Tr·ª• c·ªßa ta c√≥ th·ªÉ ƒë∆∞a c·∫≠u ƒë·∫øn h√†nh tinh kh√°c ch·ªâ trong 3 gi√¢y. C·∫≠u mu·ªën ƒëi ƒë√¢u?",
                                                "ƒê·∫øn\nTr√°i ƒê·∫•t", "ƒê·∫øn\nXayda", "Si√™u th·ªã");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 24, -1, -1);
                                            break;
                                        case 1:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 26, -1, -1);
                                            break;
                                        case 2:
                                            ChangeMapService.gI().changeMapBySpaceShip(player, 84, -1, -1);
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.CUI:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        private final int COST_FIND_BOSS = 20000000;

                        @Override
                        public void openBaseMenu(Player pl) {
                            if (canOpenNpc(pl)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(pl, this)) {
                                    if (pl.playerTask.taskMain.id == 7) {
                                        NpcService.gI().createTutorial(pl, this.avartar,
                                                "H√£y l√™n ƒë∆∞·ªùng c·ª©u ƒë·ª©a b√© nh√† t√¥i\n"
                                                + "Ch·∫Øc b√¢y gi·ªù n√≥ ƒëang s·ª£ h√£i l·∫Øm r·ªìi");
                                    } else {
                                        if (this.mapId == 19) {

                                            int taskId = TaskService.gI().getIdTask(pl);
                                            switch (taskId) {
                                                case ConstTask.TASK_19_0:
                                                    this.createOtherMenu(pl, ConstNpc.MENU_FIND_KUKU,
                                                            "ƒê·ªôi qu√¢n c·ªßa Fide ƒëang ·ªü Thung l≈©ng Nappa, ta s·∫Ω ƒë∆∞a ng∆∞∆°i ƒë·∫øn ƒë√≥",
                                                            "ƒê·∫øn ch·ªó\nKuku\n(" + Util.numberToMoney(COST_FIND_BOSS)
                                                            + " v√†ng)",
                                                            "ƒê·∫øn Cold", "ƒê·∫øn\nNappa", "T·ª´ ch·ªëi");
                                                    break;
                                                case ConstTask.TASK_19_1:
                                                    this.createOtherMenu(pl, ConstNpc.MENU_FIND_MAP_DAU_DINH,
                                                            "ƒê·ªôi qu√¢n c·ªßa Fide ƒëang ·ªü Thung l≈©ng Nappa, ta s·∫Ω ƒë∆∞a ng∆∞∆°i ƒë·∫øn ƒë√≥",
                                                            "ƒê·∫øn ch·ªó\nM·∫≠p ƒë·∫ßu ƒëinh\n("
                                                            + Util.numberToMoney(COST_FIND_BOSS) + " v√†ng)",
                                                            "ƒê·∫øn Cold", "ƒê·∫øn\nNappa", "T·ª´ ch·ªëi");
                                                    break;
                                                case ConstTask.TASK_19_2:
                                                    this.createOtherMenu(pl, ConstNpc.MENU_FIND_RAMBO,
                                                            "ƒê·ªôi qu√¢n c·ªßa Fide ƒëang ·ªü Thung l≈©ng Nappa, ta s·∫Ω ƒë∆∞a ng∆∞∆°i ƒë·∫øn ƒë√≥",
                                                            "ƒê·∫øn ch·ªó\nRambo\n(" + Util.numberToMoney(COST_FIND_BOSS)
                                                            + " v√†ng)",
                                                            "ƒê·∫øn Cold", "ƒê·∫øn\nNappa", "T·ª´ ch·ªëi");
                                                    break;
                                                default:
                                                    this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                            "ƒê·ªôi qu√¢n c·ªßa Fide ƒëang ·ªü Thung l≈©ng Nappa, ta s·∫Ω ƒë∆∞a ng∆∞∆°i ƒë·∫øn ƒë√≥",
                                                            "ƒê·∫øn Cold", "ƒê·∫øn\nNappa", "T·ª´ ch·ªëi");

                                                    break;
                                            }
                                        } else if (this.mapId == 68) {
                                            this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                    "Ng∆∞∆°i mu·ªën v·ªÅ Th√†nh Ph·ªë Vegeta", "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                        } else {
                                            this.createOtherMenu(pl, ConstNpc.BASE_MENU,
                                                    "T√†u v≈© tr·ª• Xayda s·ª≠ d·ª•ng c√¥ng ngh·ªá m·ªõi nh·∫•t, "
                                                    + "c√≥ th·ªÉ ƒë∆∞a ng∆∞∆°i ƒëi b·∫•t k·ª≥ ƒë√¢u, ch·ªâ c·∫ßn tr·∫£ ti·ªÅn l√† ƒë∆∞·ª£c.",
                                                    "ƒê·∫øn\nTr√°i ƒê·∫•t", "ƒê·∫øn\nNam·∫øc", "Si√™u th·ªã");
                                        }
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 26) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 24, -1, -1);
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 25, -1, -1);
                                                break;
                                            case 2:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 84, -1, -1);
                                                break;
                                        }
                                    }
                                }
                                if (this.mapId == 19) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 109, -1, 295);
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 68, -1, 90);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_FIND_KUKU) {
                                        switch (select) {
                                            case 0:
                                                Boss boss = BossManager.gI().getBossById(BossFactory.KUKU);
                                                if (boss != null && !boss.isDie()) {
                                                    if (player.inventory.gold >= COST_FIND_BOSS) {
                                                        player.inventory.gold -= COST_FIND_BOSS;
                                                        ChangeMapService.gI().changeMap(player, boss.zone,
                                                                boss.location.x, boss.location.y);
                                                        Service.getInstance().sendMoney(player);
                                                    } else {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Kh√¥ng ƒë·ªß v√†ng, c√≤n thi·∫øu "
                                                                + Util.numberToMoney(
                                                                        COST_FIND_BOSS - player.inventory.gold)
                                                                + " v√†ng");
                                                    }
                                                }
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 109, -1, 295);
                                                break;
                                            case 2:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 68, -1, 90);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_FIND_MAP_DAU_DINH) {
                                        switch (select) {
                                            case 0:
                                                Boss boss = BossManager.gI().getBossById(BossFactory.MAP_DAU_DINH);
                                                if (boss != null && !boss.isDie()) {
                                                    if (player.inventory.gold >= COST_FIND_BOSS) {
                                                        player.inventory.gold -= COST_FIND_BOSS;
                                                        ChangeMapService.gI().changeMap(player, boss.zone,
                                                                boss.location.x, boss.location.y);
                                                        Service.getInstance().sendMoney(player);
                                                    } else {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Kh√¥ng ƒë·ªß v√†ng, c√≤n thi·∫øu "
                                                                + Util.numberToMoney(
                                                                        COST_FIND_BOSS - player.inventory.gold)
                                                                + " v√†ng");
                                                    }
                                                }
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 109, -1, 295);
                                                break;
                                            case 2:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 68, -1, 90);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_FIND_RAMBO) {
                                        switch (select) {
                                            case 0:
                                                Boss boss = BossManager.gI().getBossById(BossFactory.RAMBO);
                                                if (boss != null && !boss.isDie()) {
                                                    if (player.inventory.gold >= COST_FIND_BOSS) {
                                                        player.inventory.gold -= COST_FIND_BOSS;
                                                        ChangeMapService.gI().changeMap(player, boss.zone,
                                                                boss.location.x, boss.location.y);
                                                        Service.getInstance().sendMoney(player);
                                                    } else {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Kh√¥ng ƒë·ªß v√†ng, c√≤n thi·∫øu "
                                                                + Util.numberToMoney(
                                                                        COST_FIND_BOSS - player.inventory.gold)
                                                                + " v√†ng");
                                                    }
                                                }
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 109, -1, 295);
                                                break;
                                            case 2:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 68, -1, 90);
                                                break;
                                        }
                                    }
                                }
                                if (this.mapId == 68) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 19, -1, 1100);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.SANTA:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "Xin ch√†o, ta c√≥ m·ªôt s·ªë v·∫≠t ph·∫©m ƒë·∫∑t bi·ªát c·∫≠u c√≥ mu·ªën xem kh√¥ng?",
                                        "C·ª≠a h√†ng", "Ti·ªám\nV·∫≠t ph·∫©m", "Shop\n ph·ª• ki·ªán", "Shop Pet", "Xu V√†ng", "Shop\nVIP KID", "M·ªü th√†nh vi√™n\nmi·ªÖn ph√≠\nnv 26");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 5 || this.mapId == 13 || this.mapId == 20) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0: //shop
                                                ShopService.gI().openShopNormal(player, this, ConstNpc.SHOP_SANTA_0, 0, -1);
                                                break;
                                            case 1: //ti·ªám h·ªìng ng·ªçc
                                                ShopService.gI().openShopSpecial(player, this, ConstNpc.SHOP_SANTA_1, 1, -1);
                                                break;
                                            case 2:
                                                ShopService.gI().openShopSpecial(player, this, ConstNpc.SHOP_SANTA_3, 3, -1);
                                                break;
                                            case 3: //ti·ªám h·ªõt t√≥c
                                                ShopService.gI().openShopSpecial(player, this, ConstNpc.SHOP_SANTA_4, 4, -1);
                                                break;
                                            case 4: //ti·ªám h·ªõt t√≥c
                                                ShopService.gI().openShopSpecial(player, this, ConstNpc.SHOP_SANTA_5, 5, -1);
                                                break;
                                            case 5:
                                                ShopService.gI().openShopSpecial(player, this, ConstNpc.SHOP_SANTA_6, 6, -1);
                                                break;
                                            case 6:
                                                if (TaskService.gI().getIdTask(player) < ConstTask.TASK_26_0 && !player.getSession().actived) {
                                                    Service.getInstance().sendThongBao(player, "B·∫°n ch∆∞a ƒë·ªß ƒëi·ªÅu ki·ªán\nvui l√≤ng ho√†n th√†nh nhi·ªám v·ª•");
                                                } else {
                                                    if (player.getSession().actived) {
                                                        Service.getInstance().sendThongBao(player, "T√†i kho·∫£n c·ªßa b·∫°n\nƒë√£ m·ªü th√†nh vi√™n");
                                                    } else {
                                                        try {
                                                            PlayerDAO.subActive(player, 1);
                                                            player.getSession().actived = true;
                                                            Service.getInstance().sendThongBao(player, "|2|B·∫°n ƒë√£ m·ªü th√†nh vi√™n Th√†nh c√¥ng. ƒê√£ m·ªü kh√≥a ch·ª©c nƒÉng Giao d·ªãch v√† Chat th·∫ø gi·ªõi !!");
                                                        } catch (Exception e) {
                                                            System.out.println("Loi chuc nang mo thanh vien");
                                                        }
                                                    }
                                                }
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.GIUMA_DAU_BO:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 6 || this.mapId == 25 || this.mapId == 26) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "G√¥ T√™n, Calich v√† Monaka ƒëang g·∫∑p chuy·ªán ·ªü h√†nh tinh Potaufeu \n H√£y ƒë·∫øn ƒë√≥ ngay", "ƒê·∫øn \nPotaufeu");
                                } else if (this.mapId == 139) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Ng∆∞·ªùi mu·ªën tr·ªü v·ªÅ?", "Quay v·ªÅ", "T·ª´ ch·ªëi");
                                }//l√£nh ƒë·ªãa bang
                                else if (this.mapId == 153) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Theo ta, ta s·∫Ω ƒë∆∞a ng∆∞∆°i ƒë·∫øn Khu v·ª±c Th√°nh ƒë·ªãa\nN∆°i ƒë√¢y ng∆∞∆°i s·∫Ω truy t√¨m m·∫£nh b√¥ng tai c·∫•p 2 v√† H·ªìn b√¥ng tai ƒë·ªÉ m·ªü ch·ªâ s·ªë B√¥ng tai C·∫•p 3."
                                            + "\n|7|Ng∆∞∆°i c√≥ mu·ªën ƒë·∫øn ƒë√≥ kh√¥ng?", "ƒê·∫øn\nTh√°nh ƒë·ªãa", "T·ª´ ch·ªëi");
                                } else if (this.mapId == 156) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Ng∆∞·ªùi mu·ªën tr·ªü v·ªÅ?", "Quay v·ªÅ", "T·ª´ ch·ªëi");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 24 || this.mapId == 25 || this.mapId == 26) {
                                    if (player.iDMark.isBaseMenu()) {
                                        if (select == 0) {
                                            //ƒë·∫øn potaufeu
                                            ChangeMapService.gI().goToPotaufeu(player);
                                        }
                                    }
                                } else if (this.mapId == 139) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            //v·ªÅ tr·∫°m v≈© tr·ª•
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 24 + player.gender, -1, -1);
                                                break;
                                        }
                                    }
                                } else if (this.mapId == 153) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            //l√£nh ƒë·ªãa bang
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 156, -1, -1);
                                                break;
                                        }
                                    }
                                } else if (this.mapId == 156) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            //v·ªÅ tr·∫°m v≈© tr·ª•
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 21 + player.gender, -1, -1);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.URON:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player pl) {
                            if (canOpenNpc(pl)) {
                                this.openShopWithGender(pl, ConstNpc.SHOP_URON_0, 0);
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {

                            }
                        }
                    };
                    break;
                case ConstNpc.BA_HAT_MIT:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 5 || this.mapId == 13) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Ng∆∞∆°i t√¨m ta c√≥ vi·ªác g√¨?",
                                            "√âp sao\ntrang b·ªã",
                                            "Pha l√™\nh√≥a\ntrang b·ªã",
                                            "ƒê·ªôt ph√°\ntrang b·ªã",
                                            "N√¢ng c·∫•p\nTrang b·ªã",
                                            "Gia H·∫°n\nv·∫≠t ph·∫©m",
                                            "Chuy·ªÉn h√≥a\nƒë·ªì H·ªßy di·ªát",
                                            "Ch√¢n m·ªánh");
                                } else if (this.mapId == 121) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Ng∆∞∆°i t√¨m ta c√≥ vi·ªác g√¨?",
                                            "V·ªÅ ƒë·∫£o\nr√πa");

                                } else {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Ng∆∞∆°i t√¨m ta c√≥ vi·ªác g√¨?",
                                            "C·ª≠a h√†ng\nB√πa", "N√¢ng c·∫•p\nV·∫≠t ph·∫©m",
                                            "Nh·∫≠p\nNg·ªçc R·ªìng",
                                            "N√¢ng c·∫•p\nB√¥ng tai\nPorata",
                                            "M·ªü ch·ªâ s·ªë\n b√¥ng tai 2,3,4,5",
                                            "S√°ch tuy·ªát k·ªπ");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 5 || this.mapId == 13) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.EP_SAO_TRANG_BI);
                                                break;
                                            case 1:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.PHA_LE_HOA_TRANG_BI);
                                                break;
                                            case 2: //n√¢ng c·∫•p Ch√¢n m·ªánh
                                                this.createOtherMenu(player, 8632,
                                                        "|7|ƒê·ªòT PH√Å TRANG B·ªä"
                                                        + "\n\n|1|Ta s·∫Ω gi√∫p trang b·ªã c·ªßa ng∆∞∆°i m·∫°nh h∆°n r·∫•t nhi·ªÅu. H√£y l·ª±a ch·ªçn ƒë·ªÉ bi·∫øt th√™m th√¥ng tin chi ti·∫øt!!!",
                                                        "Tinh ·∫•n\ntrang b·ªã",
                                                        "Ph√°p s∆∞ ho√°\ntrang b·ªã",
                                                        "T·∫©y\nph√°p s∆∞");
                                                break;
                                            case 3:
                                                this.createOtherMenu(player, 12514,
                                                        "|7|N√ÇNG C·∫§P TRANG B·ªä"
                                                        + "\n|0|Ta s·∫Ω n√¢ng c·∫•p Trang b·ªã c·ªßa con l√™n c·∫•p cao h∆°n:"
                                                        + "\n|5|- N√¢ng ƒë·ªì Th·∫ßn linh : n√¢ng t·ª´ ƒë·ªì Th·∫ßn linh th√†nh ƒê·ªì H·ªßy di·ªát"
                                                        + "\n- N√¢ng ƒë·ªì SKH Vip : c·∫ßn 3 m√≥n ƒê·ªì H·ªßy di·ªát ƒë·ªÉ n√¢ng th√†nh Set k√≠ch ho·∫°t Vip h∆°n (T·ªâ l·ªá ra ƒë·ªì Th·∫ßn linh SKH)",
                                                        "N√¢ng ƒë·ªì\nTh·∫ßn linh", "N√¢ng ƒë·ªì\nSKH Vip");
                                                break;
                                            case 4:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.GIA_HAN_VAT_PHAM);
                                                break;
                                            case 5:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.CHUYEN_HOA_DO_HUY_DIET);
                                                break;
                                            case 6: //n√¢ng c·∫•p Ch√¢n m·ªánh
                                                this.createOtherMenu(player, 5701,
                                                        "|7|CH√ÇN M·ªÜNH"
                                                        + "\n\n|5|C·∫ßn 100 Th·ªèi v√†ng ƒë·ªÉ nh·∫≠n Ch√¢n M·ªánh c·∫•p 1"
                                                        + "\n|3| L∆∞u √Ω: Ch·ªâ ƒë∆∞·ª£c nh·∫≠n Ch√¢n m·ªánh 1 l·∫ßn (H√†nh trang ch·ªâ t·ªìn t·∫°i 1 Ch√¢n m·ªánh)"
                                                        + "\nN·∫øu ƒë√£ c√≥ Ch√¢n m·ªánh. Ta s·∫Ω gi√∫p ng∆∞∆°i n√¢ng c·∫•p b·∫≠c l√™n v·ªõi c√°c d√≤ng ch·ªâ s·ªë cao h∆°n",
                                                        "Nh·∫≠n Ch√¢n m·ªánh", "N√¢ng c·∫•p Ch√¢n m·ªánh", "Shop\nCh√¢n m·ªánh");
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == 8632) {
                                        switch (select) {
                                            case 0:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.AN_TRANG_BI);
                                                break;
                                            case 1:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.PHAP_SU_HOA);
                                                break;
                                            case 2:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.TAY_PHAP_SU);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == 12514) {
                                        switch (select) {
                                            case 0:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.NANG_CAP_THAN_LINH);
                                                break;
                                            case 1:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.NANG_CAP_SKH_VIP);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == 5701) {
                                        switch (select) {
                                            case 0:
                                                for (int i = 0; i < 9; i++) {
                                                    Item findItemBag = InventoryService.gI().findItemBagByTemp(player, 1300 + i);
                                                    Item findItemBody = InventoryService.gI().findItemBodyByTemp(player, 1300 + i);
                                                    if (findItemBag != null || findItemBody != null) {
                                                        Service.getInstance().sendThongBao(player, "|7|Ng∆∞∆°i ƒë√£ c√≥ Ch√¢n m·ªánh r·ªìi m√†");
                                                        return;
                                                    }
                                                }
                                                Item thoivang = null;
                                                try {
                                                    thoivang = InventoryService.gI().findItemBagByTemp(player, 457);
                                                } catch (Exception e) {
                                                }
                                                if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                                                    if (thoivang == null || thoivang.quantity < 100) {
                                                        Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß Th·ªèi v√†ng");
                                                    } else {
                                                        InventoryService.gI().subQuantityItemsBag(player, thoivang, 100);
                                                        Item chanmenh = ItemService.gI().createNewItem((short) 1300);
                                                        chanmenh.itemOptions.add(new ItemOption(50, 5));
                                                        chanmenh.itemOptions.add(new ItemOption(77, 7));
                                                        chanmenh.itemOptions.add(new ItemOption(103, 7));
                                                        chanmenh.itemOptions.add(new ItemOption(30, 1));
                                                        InventoryService.gI().addItemBag(player, chanmenh, 0);
                                                        Service.getInstance().sendMoney(player);
                                                        InventoryService.gI().sendItemBags(player);
                                                        this.npcChat(player, "|1|B·∫°n nh·∫≠n ƒë∆∞·ª£c Ch√¢n m·ªánh C·∫•p 1");
                                                    }
                                                } else {
                                                    this.npcChat(player, "H√†nh trang kh√¥ng ƒë·ªß ch·ªï tr·ªëng");
                                                }
                                                break;
                                            case 1:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.NANG_CAP_CHAN_MENH);
                                                break;
                                            case 2:
                                                ShopService.gI().openShopNormal(player, this, ConstNpc.SHOP_BA_HAT_MIT_4, 4, -1);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_START_COMBINE) {
                                        switch (player.combineNew.typeCombine) {
                                            case CombineServiceNew.EP_SAO_TRANG_BI:
                                            case CombineServiceNew.AN_TRANG_BI:
                                            case CombineServiceNew.PHA_LE_HOA_TRANG_BI:
                                            case CombineServiceNew.CHUYEN_HOA_TRANG_BI:
                                            case CombineServiceNew.PHAP_SU_HOA:
                                            case CombineServiceNew.TAY_PHAP_SU:
                                            case CombineServiceNew.NANG_CAP_CHAN_MENH:
                                            case CombineServiceNew.CHUYEN_HOA_DO_HUY_DIET:
                                            case CombineServiceNew.NANG_CAP_THAN_LINH:
                                            case CombineServiceNew.NANG_CAP_SKH_VIP:
                                            case CombineServiceNew.GIA_HAN_VAT_PHAM:
//                                                switch (select) {
//                                                    case 0:
//                                                        if (player.combineNew.typeCombine == CombineServiceNew.PHA_LE_HOA_TRANG_BI) {
//                                                            player.combineNew.quantities = 1;
//                                                        }
//                                                        break;
//                                                    case 1:
//                                                        if (player.combineNew.typeCombine == CombineServiceNew.PHA_LE_HOA_TRANG_BI) {
//                                                            player.combineNew.quantities = 10;
//                                                        }
//                                                        break;
//                                                    case 2:
//                                                        if (player.combineNew.typeCombine == CombineServiceNew.PHA_LE_HOA_TRANG_BI) {
//                                                            player.combineNew.quantities = 100;
//                                                        }
//                                                        break;
//                                                }
                                                CombineServiceNew.gI().startCombine(player);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_CHUYEN_HOA_DO_HUY_DIET) {
                                        if (select == 0) {
                                            CombineServiceNew.gI().startCombine(player);
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_NANG_CAP_THAN_LINH) {
                                        if (select == 0) {
                                            CombineServiceNew.gI().startCombine(player);
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_NANG_DOI_SKH_VIP) {
                                        if (select == 0) {
                                            CombineServiceNew.gI().startCombine(player);
                                        }
                                    }
                                } else if (this.mapId == 112) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 5, -1, 1156);
                                                break;
                                        }
                                    }
                                } else if (this.mapId == 42 || this.mapId == 43 || this.mapId == 44) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0: // shop b√πa
                                                createOtherMenu(player, ConstNpc.MENU_OPTION_SHOP_BUA,
                                                        "B√πa c·ªßa ta r·∫•t l·ª£i h·∫°i, nh√¨n ng∆∞∆°i y·∫øu ƒëu·ªëi th·∫ø n√†y, ch·∫Øc mu·ªën mua b√πa ƒë·ªÉ "
                                                        + "m·∫°nh m·∫Ω √†, mua kh√¥ng ta b√°n cho, x√†i r·ªìi l·∫°i th√≠ch cho m√† xem.",
                                                        "B√πa\n1 gi·ªù", "B√πa\n8 gi·ªù", "B√πa\n1 th√°ng",
                                                        "B√πa\n  ƒê·ªá t·ª≠ Mab∆∞\n 1 gi·ªù", "ƒê√≥ng");
                                                break;
                                            case 1:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.NANG_CAP_VAT_PHAM);
                                                break;
                                            case 2:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.NHAP_NGOC_RONG);
                                                break;
                                            case 3: //n√¢ng c·∫•p b√¥ng tai
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.NANG_CAP_BONG_TAI);
                                                break;
                                            case 4: //M·ªü ch·ªâ s·ªë b√¥ng tai
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.MO_CHI_SO_BONG_TAI);
                                                break;
                                            case 5: // S√°ch tuy·ªát k·ªπ
                                                createOtherMenu(player, ConstNpc.SACH_TUYET_KY, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                                        "ƒê√≥ng th√†nh\nS√°ch c≈©",
                                                        "ƒê·ªïi S√°ch\nTuy·ªát k·ªπ",
                                                        "Gi√°m ƒë·ªãnh\nS√°ch",
                                                        "T·∫©y\nS√°ch",
                                                        "N√¢ng c·∫•p\nS√°ch\nTuy·ªát k·ªπ",
                                                        "H·ªìi ph·ª•c\nS√°ch",
                                                        "Ph√¢n r√£\nS√°ch");
                                                break;

                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.SACH_TUYET_KY) {
                                        switch (select) {
                                            case 0:
                                                Item trangSachCu = InventoryService.gI().findItemBagByTemp(player, 1516);

                                                Item biaSach = InventoryService.gI().findItemBagByTemp(player, 1506);
                                                if ((trangSachCu != null && trangSachCu.quantity >= 9999) && (biaSach != null && biaSach.quantity >= 1)) {
                                                    createOtherMenu(player, ConstNpc.DONG_THANH_SACH_CU,
                                                            "|2|Ch·∫ø t·∫°o Cu·ªën s√°ch c≈©\n"
                                                            + "|1|Trang s√°ch c≈© " + trangSachCu.quantity + "/9999\n"
                                                            + "B√¨a s√°ch " + biaSach.quantity + "/1\n"
                                                            + "T·ªâ l·ªá th√†nh c√¥ng: 60%\n"
                                                            + "Th·∫•t b·∫°i m·∫•t 99 trang s√°ch v√† 1 b√¨a s√°ch", "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                                    break;
                                                } else {
                                                    String NpcSay = "|2|Ch·∫ø t·∫°o Cu·ªën s√°ch c≈©\n";
                                                    if (trangSachCu == null) {
                                                        NpcSay += "|7|Trang s√°ch c≈© " + "0/9999\n";
                                                    } else {
                                                        NpcSay += "|1|Trang s√°ch c≈© " + trangSachCu.quantity + "/9999\n";
                                                    }
                                                    if (biaSach == null) {
                                                        NpcSay += "|7|B√¨a s√°ch " + "0/1\n";
                                                    } else {
                                                        NpcSay += "|1|B√¨a s√°ch " + biaSach.quantity + "/1\n";
                                                    }

                                                    NpcSay += "|7|T·ªâ l·ªá th√†nh c√¥ng: 60%\n";
                                                    NpcSay += "|7|Th·∫•t b·∫°i m·∫•t 99 trang s√°ch v√† 1 b√¨a s√°ch";
                                                    createOtherMenu(player, ConstNpc.DONG_THANH_SACH_CU_2,
                                                            NpcSay, "T·ª´ ch·ªëi");
                                                    break;
                                                }
                                            case 1:
                                                Item cuonSachCu = InventoryService.gI().findItemBagByTemp(player, 1509);
                                                Item kimBam = InventoryService.gI().findItemBagByTemp(player, 1507);

                                                if ((cuonSachCu != null && cuonSachCu.quantity >= 10) && (kimBam != null && kimBam.quantity >= 1)) {
                                                    createOtherMenu(player, ConstNpc.DOI_SACH_TUYET_KY,
                                                            "|2|ƒê·ªïi s√°ch tuy·ªát k·ªπ 1\n"
                                                            + "|1|Cu·ªën s√°ch c≈© " + cuonSachCu.quantity + "/10\n"
                                                            + "K√¨m b·∫•m gi·∫•y " + kimBam.quantity + "/1\n"
                                                            + "T·ªâ l·ªá th√†nh c√¥ng: 60%\n", "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                                    break;
                                                } else {
                                                    String NpcSay = "|2|ƒê·ªïi s√°ch Tuy·ªát k·ªπ 1\n";
                                                    if (cuonSachCu == null) {
                                                        NpcSay += "|7|Cu·ªën s√°ch c≈© " + "0/10\n";
                                                    } else {
                                                        NpcSay += "|1|Cu·ªën s√°ch c≈© " + cuonSachCu.quantity + "/10\n";
                                                    }
                                                    if (kimBam == null) {
                                                        NpcSay += "|7|K√¨m b·∫•m gi·∫•y " + "0/1\n";
                                                    } else {
                                                        NpcSay += "|1|K√¨m b·∫•m gi·∫•y " + kimBam.quantity + "/1\n";
                                                    }
                                                    NpcSay += "|7|T·ªâ l·ªá th√†nh c√¥ng: 60%\n";
                                                    createOtherMenu(player, ConstNpc.DOI_SACH_TUYET_KY_2,
                                                            NpcSay, "T·ª´ ch·ªëi");
                                                }
                                                break;
                                            case 2:// gi√°m ƒë·ªãnh s√°ch
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.GIAM_DINH_SACH);
                                                break;
                                            case 3:// t·∫©y s√°ch
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.TAY_SACH);
                                                break;
                                            case 4:// n√¢ng c·∫•p s√°ch
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.NANG_CAP_SACH_TUYET_KY);
                                                break;
                                            case 5:// ph·ª•c h·ªìi s√°ch
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.PHUC_HOI_SACH);
                                                break;
                                            case 6:// ph√¢n r√£ s√°ch
                                                CombineServiceNew.gI().openTabCombine(player,
                                                        CombineServiceNew.PHAN_RA_SACH);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.DOI_SACH_TUYET_KY) {
                                        switch (select) {
                                            case 0:
                                                Item cuonSachCu = InventoryService.gI().findItemBagByTemp(player, 1509);
                                                Item kimBam = InventoryService.gI().findItemBagByTemp(player, 1507);

                                                short baseValue = 1512;
                                                short genderModifier = (player.gender == 0) ? -2 : ((player.gender == 2) ? 2 : (short) 0);

                                                Item sachTuyetKy = ItemService.gI().createNewItem((short) (baseValue + genderModifier));

                                                if (Util.isTrue(60, 100)) {

                                                    sachTuyetKy.itemOptions.add(new ItemOption(241, 0));
                                                    sachTuyetKy.itemOptions.add(new ItemOption(21, 40));
                                                    sachTuyetKy.itemOptions.add(new ItemOption(30, 0));
                                                    sachTuyetKy.itemOptions.add(new ItemOption(87, 1));
                                                    sachTuyetKy.itemOptions.add(new ItemOption(242, 10));
                                                    sachTuyetKy.itemOptions.add(new ItemOption(243, 1000));
                                                    try { // send effect susscess
                                                        Message msg = new Message(-81);
                                                        msg.writer().writeByte(0);
                                                        msg.writer().writeUTF("test");
                                                        msg.writer().writeUTF("test");
                                                        msg.writer().writeShort(tempId);
                                                        player.sendMessage(msg);
                                                        msg.cleanup();
                                                        msg = new Message(-81);
                                                        msg.writer().writeByte(1);
                                                        msg.writer().writeByte(2);
                                                        msg.writer().writeByte(InventoryService.gI().getIndexBag(player, kimBam));
                                                        msg.writer().writeByte(InventoryService.gI().getIndexBag(player, cuonSachCu));
                                                        player.sendMessage(msg);
                                                        msg.cleanup();
                                                        msg = new Message(-81);
                                                        msg.writer().writeByte(7);
                                                        msg.writer().writeShort(sachTuyetKy.template.iconID);
                                                        msg.writer().writeShort(-1);
                                                        msg.writer().writeShort(-1);
                                                        msg.writer().writeShort(-1);
                                                        player.sendMessage(msg);
                                                        msg.cleanup();
                                                    } catch (Exception e) {
                                                        System.out.println("l·ªói 4");
                                                    }
                                                    InventoryService.gI().addItemList(player.inventory.itemsBag, sachTuyetKy, 1);
                                                    InventoryService.gI().subQuantityItemsBag(player, cuonSachCu, 10);
                                                    InventoryService.gI().subQuantityItemsBag(player, kimBam, 1);
                                                    InventoryService.gI().sendItemBags(player);
//                                                    npcChat(player, "Th√†nh c√¥ng g√≤i cu ∆°i");
                                                    return;
                                                } else {
                                                    try { // send effect faile
                                                        Message msg = new Message(-81);
                                                        msg.writer().writeByte(0);
                                                        msg.writer().writeUTF("test");
                                                        msg.writer().writeUTF("test");
                                                        msg.writer().writeShort(tempId);
                                                        player.sendMessage(msg);
                                                        msg.cleanup();
                                                        msg = new Message(-81);
                                                        msg.writer().writeByte(1);
                                                        msg.writer().writeByte(2);
                                                        msg.writer().writeByte(InventoryService.gI().getIndexBag(player, kimBam));
                                                        msg.writer().writeByte(InventoryService.gI().getIndexBag(player, cuonSachCu));
                                                        player.sendMessage(msg);
                                                        msg.cleanup();
                                                        msg = new Message(-81);
                                                        msg.writer().writeByte(8);
                                                        msg.writer().writeShort(-1);
                                                        msg.writer().writeShort(-1);
                                                        msg.writer().writeShort(-1);
                                                        player.sendMessage(msg);
                                                        msg.cleanup();
                                                    } catch (Exception e) {
                                                        System.out.println("l·ªói 3");
                                                    }
                                                    InventoryService.gI().subQuantityItemsBag(player, cuonSachCu, 5);
                                                    InventoryService.gI().subQuantityItemsBag(player, kimBam, 1);
                                                    InventoryService.gI().sendItemBags(player);
//                                                    npcChat(player, "Th·∫•t b·∫°i g√≤i cu ∆°i");
                                                }
                                                return;
                                            case 1:
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.DONG_THANH_SACH_CU) {
                                        switch (select) {
                                            case 0:

                                                Item trangSachCu = InventoryService.gI().findItemBagByTemp(player, 1516);
                                                Item biaSach = InventoryService.gI().findItemBagByTemp(player, 1506);
                                                Item cuonSachCu = ItemService.gI().createNewItem((short) 1509);
                                                if (Util.isTrue(60, 100)) {
                                                    cuonSachCu.itemOptions.add(new ItemOption(30, 0));

                                                    try { // send effect susscess
                                                        Message msg = new Message(-81);
                                                        msg.writer().writeByte(0);
                                                        msg.writer().writeUTF("test");
                                                        msg.writer().writeUTF("test");
                                                        msg.writer().writeShort(tempId);
                                                        player.sendMessage(msg);
                                                        msg.cleanup();

                                                        msg = new Message(-81);
                                                        msg.writer().writeByte(1);
                                                        msg.writer().writeByte(2);
                                                        msg.writer().writeByte(InventoryService.gI().getIndexBag(player, trangSachCu));
                                                        msg.writer().writeByte(InventoryService.gI().getIndexBag(player, biaSach));
                                                        player.sendMessage(msg);
                                                        msg.cleanup();

                                                        msg = new Message(-81);
                                                        msg.writer().writeByte(7);
                                                        msg.writer().writeShort(cuonSachCu.template.iconID);
                                                        msg.writer().writeShort(-1);
                                                        msg.writer().writeShort(-1);
                                                        msg.writer().writeShort(-1);
                                                        player.sendMessage(msg);
                                                        msg.cleanup();

                                                    } catch (Exception e) {
                                                        System.out.println("l·ªói 1");
                                                    }

                                                    InventoryService.gI().addItemList(player.inventory.itemsBag, cuonSachCu, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, trangSachCu, 9999);
                                                    InventoryService.gI().subQuantityItemsBag(player, biaSach, 1);
                                                    InventoryService.gI().sendItemBags(player);
                                                    return;
                                                } else {
                                                    try { // send effect faile
                                                        Message msg = new Message(-81);
                                                        msg.writer().writeByte(0);
                                                        msg.writer().writeUTF("test");
                                                        msg.writer().writeUTF("test");
                                                        msg.writer().writeShort(tempId);
                                                        player.sendMessage(msg);
                                                        msg.cleanup();
                                                        msg = new Message(-81);
                                                        msg.writer().writeByte(1);
                                                        msg.writer().writeByte(2);
                                                        msg.writer().writeByte(InventoryService.gI().getIndexBag(player, biaSach));
                                                        msg.writer().writeByte(InventoryService.gI().getIndexBag(player, trangSachCu));
                                                        player.sendMessage(msg);
                                                        msg.cleanup();
                                                        msg = new Message(-81);
                                                        msg.writer().writeByte(8);
                                                        msg.writer().writeShort(-1);
                                                        msg.writer().writeShort(-1);
                                                        msg.writer().writeShort(-1);
                                                        player.sendMessage(msg);
                                                        msg.cleanup();
                                                    } catch (Exception e) {
                                                        System.out.println("l·ªói 2");
                                                    }
                                                    InventoryService.gI().subQuantityItemsBag(player, trangSachCu, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, biaSach, 1);
                                                    InventoryService.gI().sendItemBags(player);
                                                }
                                                return;
                                            case 1:
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPTION_SHOP_BUA) {
                                        switch (select) {
                                            case 0:
                                                ShopService.gI().openShopBua(player, ConstNpc.SHOP_BA_HAT_MIT_0, 0);
                                                break;
                                            case 1:
                                                ShopService.gI().openShopBua(player, ConstNpc.SHOP_BA_HAT_MIT_1, 1);
                                                break;
                                            case 2:
                                                ShopService.gI().openShopBua(player, ConstNpc.SHOP_BA_HAT_MIT_2, 2);
                                                break;
                                            case 3:
                                                ShopService.gI().openShopBua(player, ConstNpc.SHOP_BA_HAT_MIT_3, 3);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_START_COMBINE) {
                                        switch (player.combineNew.typeCombine) {
                                            case CombineServiceNew.NANG_CAP_VAT_PHAM:
                                            case CombineServiceNew.NANG_CAP_BONG_TAI:
                                            case CombineServiceNew.LAM_PHEP_NHAP_DA:
                                            case CombineServiceNew.NHAP_NGOC_RONG:
                                            case CombineServiceNew.PHAN_RA_DO_THAN_LINH:
                                            case CombineServiceNew.NANG_CAP_SKH_VIP:
                                            case CombineServiceNew.MO_CHI_SO_BONG_TAI:
                                            //START _ S√ÅCH TUY·ªÜT K·ª∏//
                                            case CombineServiceNew.GIAM_DINH_SACH:
                                            case CombineServiceNew.TAY_SACH:
                                            case CombineServiceNew.NANG_CAP_SACH_TUYET_KY:
                                            case CombineServiceNew.PHUC_HOI_SACH:
                                            case CombineServiceNew.PHAN_RA_SACH:
                                                //END _ S√ÅCH TUY·ªÜT K·ª∏//
                                                if (select == 0) {
                                                    CombineServiceNew.gI().startCombine(player);
                                                }
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.RUONG_DO:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                InventoryService.gI().sendItemBox(player);
                                InventoryService.gI().openBox(player);
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {

                            }
                        }
                    };
                    break;
                case ConstNpc.DAU_THAN:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                player.magicTree.openMenuTree();
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                TaskService.gI().checkDoneTaskConfirmMenuNpc(player, this, (byte) select);
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.MAGIC_TREE_NON_UPGRADE_LEFT_PEA:
                                        if (select == 0) {
                                            player.magicTree.harvestPea();
                                        } else if (select == 1) {
                                            if (player.magicTree.level == 10) {
                                                player.magicTree.fastRespawnPea();
                                            } else {
                                                player.magicTree.showConfirmUpgradeMagicTree();
                                            }
                                        } else if (select == 2) {
                                            player.magicTree.fastRespawnPea();
                                        }
                                        break;
                                    case ConstNpc.MAGIC_TREE_NON_UPGRADE_FULL_PEA:
                                        if (select == 0) {
                                            player.magicTree.harvestPea();
                                        } else if (select == 1) {
                                            player.magicTree.showConfirmUpgradeMagicTree();
                                        }
                                        break;
                                    case ConstNpc.MAGIC_TREE_CONFIRM_UPGRADE:
                                        if (select == 0) {
                                            player.magicTree.upgradeMagicTree();
                                        }
                                        break;
                                    case ConstNpc.MAGIC_TREE_UPGRADE:
                                        if (select == 0) {
                                            player.magicTree.fastUpgradeMagicTree();
                                        } else if (select == 1) {
                                            player.magicTree.showConfirmUnuppgradeMagicTree();
                                        }
                                        break;
                                    case ConstNpc.MAGIC_TREE_CONFIRM_UNUPGRADE:
                                        if (select == 0) {
                                            player.magicTree.unupgradeMagicTree();
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.CALICK:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        private final byte COUNT_CHANGE = 50;
                        private int count;

                        private void changeMap() {
                            if (this.mapId != 102) {
                                count++;
                                if (this.count >= COUNT_CHANGE) {
                                    count = 0;
                                    this.map.npcs.remove(this);
                                    Map map = MapService.gI().getMapForCalich();
                                    this.mapId = map.mapId;
                                    this.cx = Util.nextInt(100, map.mapWidth - 100);
                                    this.cy = map.yPhysicInTop(this.cx, 0);
                                    this.map = map;
                                    this.map.npcs.add(this);
                                }
                            }
                        }

                        @Override
                        public void openBaseMenu(Player player) {
                            player.iDMark.setIndexMenu(ConstNpc.BASE_MENU);
                            if (TaskService.gI().getIdTask(player) < ConstTask.TASK_20_0) {
                                Service.getInstance().hideWaitDialog(player);
                                Service.getInstance().sendThongBao(player, "Kh√¥ng th·ªÉ th·ª±c hi·ªán");
                                return;
                            }
                            if (this.mapId != player.zone.map.mapId) {
                                Service.getInstance().sendThongBao(player, "Cal√≠ch ƒë√£ r·ªùi kh·ªèi map!");
                                Service.getInstance().hideWaitDialog(player);
                                return;
                            }

                            if (this.mapId == 102) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ch√†o ch√∫, ch√°u c√≥ th·ªÉ gi√∫p g√¨?",
                                        "K·ªÉ\nChuy·ªán", "Quay v·ªÅ\nQu√° kh·ª©");
                            } else {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ch√†o ch√∫, ch√°u c√≥ th·ªÉ gi√∫p g√¨?",
                                        "K·ªÉ\nChuy·ªán", "ƒêi ƒë·∫øn\nT∆∞∆°ng lai", "T·ª´ ch·ªëi");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (this.mapId == 102) {
                                if (player.iDMark.isBaseMenu()) {
                                    if (select == 0) {
                                        // k·ªÉ chuy·ªán
                                        NpcService.gI().createTutorial(player, this.avartar, ConstNpc.CALICK_KE_CHUYEN);
                                    } else if (select == 1) {
                                        // v·ªÅ qu√° kh·ª©
                                        ChangeMapService.gI().goToQuaKhu(player);
                                    }
                                }
                            } else if (player.iDMark.isBaseMenu()) {
                                if (select == 0) {
                                    // k·ªÉ chuy·ªán
                                    NpcService.gI().createTutorial(player, this.avartar, ConstNpc.CALICK_KE_CHUYEN);
                                } else if (select == 1) {
                                    // ƒë·∫øn t∆∞∆°ng lai
                                    // changeMap();
                                    if (TaskService.gI().getIdTask(player) >= ConstTask.TASK_20_0) {
                                        ChangeMapService.gI().goToTuongLai(player);
                                    }
                                } else {
                                    Service.getInstance().sendThongBao(player, "Kh√¥ng th·ªÉ th·ª±c hi·ªán");
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.JACO:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 0) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "|7| KHU V·ª∞C BOSS NH√ÇN B·∫¢N"
                                            + "\n\n|6|G√¥ T√™n, Calich v√† Monaka ƒëang g·∫∑p chuy·ªán ·ªü h√†nh tinh Potaufeu"
                                            + "\nƒê√°nh b·∫°i nh·ªØng k·∫ª gi·∫£ m·∫°o ng∆∞∆°i s·∫Ω nh·∫≠n ƒë∆∞·ª£c nh·ªØng ph·∫ßn th∆∞·ªüng h·∫•p d·∫´n"
                                            + "\n|3|H·∫° Boss Nh√¢n B·∫£n s·∫Ω nh·∫≠n ƒë∆∞·ª£c Item Si√™u c·∫•p"
                                            + "\n|2|H√£y ƒë·∫øn ƒë√≥ ngay",
                                            "ƒê·∫øn \nPotaufeu");
                                } else {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Ng∆∞·ªùi mu·ªën tr·ªü v·ªÅ?", "Quay v·ªÅ", "T·ª´ ch·ªëi");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 0) {
                                    if (player.iDMark.isBaseMenu()) {
                                        if (select == 0) {
                                            ChangeMapService.gI().goToPotaufeu(player);
                                        }
                                    }
                                } else {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, player.gender + 21, -1, 250);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.THAN_MEO_KARIN:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (mapId == ConstMap.THAP_KARIN) {
                                    if (player.zone instanceof ZSnakeRoad) {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                                "H√£y c·∫ßm l·∫•y hai h·∫°t ƒë·∫≠u cu·ªëi c√πng ·ªü ƒë√¢y\nC·ªë gi·ªØ m√¨nh nh√© "
                                                + player.name,
                                                "C·∫£m ∆°n\ns∆∞ ph·ª•");
                                    } else if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                                "Ch√†o con, con mu·ªën ta gi√∫p g√¨ n√†o?", getMenuSuKien(EVENT_SEVER));
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (mapId == ConstMap.THAP_KARIN) {
                                    if (player.iDMark.isBaseMenu()) {
                                        if (player.zone instanceof ZSnakeRoad) {
                                            switch (select) {
                                                case 0:
                                                    player.setInteractWithKarin(true);
                                                    Service.getInstance().sendThongBao(player,
                                                            "H√£y mau bay xu·ªëng ch√¢n th√°p Karin");
                                                    break;
                                            }
                                        } else {
                                            switch (select) {
                                                case 0:
                                                    switch (EVENT_SEVER) {
                                                        case 2:
                                                            Attribute at = ServerManager.gI().getAttributeManager()
                                                                    .find(ConstAttribute.TNSM);
                                                            String text = "S·ª± ki·ªán 20/11 ch√≠nh th·ª©c t·∫°i Ng·ªçc R·ªìng "
                                                                    + Manager.SERVER_NAME + "\n "
                                                                    + "S·ªë ƒëi·ªÉm hi·ªán t·∫°i c·ªßa b·∫°n l√† : "
                                                                    + player.event.getEventPoint()
                                                                    + "\nT·ªïng s·ªë hoa ƒë√£ t·∫∑ng tr√™n to√†n m√°y ch·ªß "
                                                                    + EVENT_COUNT_THAN_MEO % 999 + "/999";
                                                            this.createOtherMenu(player, ConstNpc.MENU_OPEN_SUKIEN,
                                                                    at != null && !at.isExpired() ? text
                                                                    + "\nTo√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 20% TNSM cho ƒë·ªá t·ª≠ khi ƒë√°nh qu√°i,th·ªùi gian c√≤n l·∫°i "
                                                                    + at.getTime() / 60 + " ph√∫t."
                                                                    : text + "\nKhi t·∫∑ng ƒë·ªß 999 b√¥ng hoa to√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng tƒÉng 20% TNSM cho ƒë·ªá t·ª≠ trong 60 ph√∫t\n",
                                                                    "T·∫∑ng 1\n B√¥ng hoa", "T·∫∑ng\n10 B√¥ng",
                                                                    "T·∫∑ng\n99 B√¥ng", "ƒê·ªïi\nH·ªôp qu√†");
                                                            break;
                                                    }
                                            }
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPEN_SUKIEN) {
                                        openMenuSuKien(player, this, tempId, select);
                                    }
                                }
                            }
                        }
                    };
                    break;

                case ConstNpc.THUONG_DE:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 45) {
                                    if (!player.istrain) {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU, "Con ƒë√£ m·∫°nh h∆°n ta"
                                                + ", ta s·∫Ω ch·ªâ ƒë∆∞·ªùng cho con ƒë·∫øn Kaio ƒë·ªÉ g·∫∑p th·∫ßn V≈© Tr·ª• Ph∆∞∆°ng B·∫Øc"
                                                + "\nNg√†i l√† th·∫ßn cai qu·∫£n v≈© tr·ª• n√†y, h√£y theo ng√†i ·∫•y h·ªçc v√µ c√¥ng",
                                                "ƒêƒÉng k√Ω t·∫≠p t·ª± ƒë·ªông", "ƒê·∫øn Kaio", "Quay s·ªë\nmay m·∫Øn", getMenuSuKien(EVENT_SEVER));
                                    } else {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU, "Con ƒë√£ m·∫°nh h∆°n ta"
                                                + ", ta s·∫Ω ch·ªâ ƒë∆∞·ªùng cho con ƒë·∫øn Kaio ƒë·ªÉ g·∫∑p th·∫ßn V≈© Tr·ª• Ph∆∞∆°ng B·∫Øc"
                                                + "\nNg√†i l√† th·∫ßn cai qu·∫£n v≈© tr·ª• n√†y, h√£y theo ng√†i ·∫•y h·ªçc v√µ c√¥ng",
                                                "H·ªßy ƒëƒÉng k√Ω t·∫≠p t·ª± ƒë·ªông", "ƒê·∫øn Kaio", "Quay s·ªë\nmay m·∫Øn", getMenuSuKien(EVENT_SEVER));
                                    }
                                } else if (player.zone instanceof ZSnakeRoad) {
                                    if (mapId == ConstMap.CON_DUONG_RAN_DOC) {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU, "H√£y l·∫Øm l·∫•y tay ta mau",
                                                "V·ªÅ th·∫ßn ƒëi·ªán");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 45) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                if (!player.istrain) {
                                                    this.createOtherMenu(player, ConstNpc.MENU_TRAIN_OFFLINE,
                                                            "ƒêƒÉng k√Ω ƒë·ªÉ m·ªói khi Offline qu√° 30 ph√∫t"
                                                            + ", con s·∫Ω ƒë∆∞·ª£c t·ª± ƒë·ªông luy·ªán t·∫≠p v·ªõi t·ªëc ƒë·ªô " + player.getexp() + " s·ª©c m·∫°nh m·ªói ph√∫t",
                                                            "H∆∞·ªõng d·∫´n th√™m", "ƒê·ªìng √Ω 1 ng·ªçc m·ªói l·∫ßn", "Kh√¥ng ƒë·ªìng √Ω");
                                                } else {
                                                    player.istrain = false;
                                                    this.createOtherMenu(player, ConstNpc.IGNORE_MENU, "Con ƒë√£ h·ªßy th√†nh c√¥ng ƒëƒÉng k√Ω t·∫≠p t·ª± ƒë·ªông", "ƒê√≥ng");
                                                }
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 48, -1, 354);
                                                break;
                                            case 2:
                                                this.createOtherMenu(player, ConstNpc.MENU_CHOOSE_LUCKY_ROUND,
                                                        "Con mu·ªën l√†m g√¨ n√†o?", "Quay b·∫±ng\nv√†ng",
                                                        "R∆∞∆°ng ph·ª•\n("
                                                        + (player.inventory.itemsBoxCrackBall.size()
                                                        - InventoryService.gI().getCountEmptyListItem(
                                                                player.inventory.itemsBoxCrackBall))
                                                        + " m√≥n)",
                                                        "X√≥a h·∫øt\ntrong r∆∞∆°ng", "ƒê√≥ng");
                                                break;
                                            case 3:
                                                switch (EVENT_SEVER) {
                                                    case 2:
                                                        Attribute at = ServerManager.gI().getAttributeManager()
                                                                .find(ConstAttribute.KI);
                                                        String text = "S·ª± ki·ªán 20/11 ch√≠nh th·ª©c t·∫°i Ng·ªçc R·ªìng "
                                                                + Manager.SERVER_NAME + "\n + "
                                                                + "S·ªë ƒëi·ªÉm hi·ªán t·∫°i c·ªßa b·∫°n l√† : "
                                                                + player.event.getEventPoint()
                                                                + "\nT·ªïng s·ªë hoa ƒë√£ t·∫∑ng tr√™n to√†n m√°y ch·ªß "
                                                                + EVENT_COUNT_THUONG_DE % 999 + "/999";
                                                        this.createOtherMenu(player, ConstNpc.MENU_OPEN_SUKIEN,
                                                                at != null && !at.isExpired() ? text
                                                                + "\nTo√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 20% KI,th·ªùi gian c√≤n l·∫°i "
                                                                + at.getTime() / 60 + " ph√∫t."
                                                                : text + "\nKhi t·∫∑ng ƒë·ªß 999 b√¥ng hoa to√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 20% Ki trong 60 ph√∫t\n",
                                                                "T·∫∑ng 1\n B√¥ng hoa", "T·∫∑ng\n10 B√¥ng", "T·∫∑ng\n99 B√¥ng",
                                                                "ƒê·ªïi\nH·ªôp qu√†");
                                                        break;
                                                }
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_TRAIN_OFFLINE) {
                                        switch (select) {
                                            case 0:
                                                Service.getInstance().sendPopUpMultiLine(player, tempId, this.avartar, ConstNpc.INFOR_TRAIN_OFFLINE);
                                                break;
                                            case 1:
                                                player.istrain = true;
                                                NpcService.gI().createTutorial(player, this.avartar, "T·ª´ gi·ªù, qu√° 30 ph√∫t Offline con s·∫Ω t·ª± ƒë·ªông luy·ªán t·∫≠p");
                                                break;
                                            case 3:
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_CHOOSE_LUCKY_ROUND) {
                                        switch (select) {
                                            case 0:
                                                LuckyRoundService.gI().openCrackBallUI(player,
                                                        LuckyRoundService.USING_GOLD);
                                                break;
                                            case 1:
                                                ShopService.gI().openBoxItemLuckyRound(player);
                                                break;
                                            case 2:
                                                NpcService.gI().createMenuConMeo(player,
                                                        ConstNpc.CONFIRM_REMOVE_ALL_ITEM_LUCKY_ROUND, this.avartar,
                                                        "Con c√≥ ch·∫Øc mu·ªën x√≥a h·∫øt v·∫≠t ph·∫©m trong r∆∞∆°ng ph·ª•? Sau khi x√≥a "
                                                        + "s·∫Ω kh√¥ng th·ªÉ kh√¥i ph·ª•c!",
                                                        "ƒê·ªìng √Ω", "H·ªßy b·ªè");
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPEN_SUKIEN) {
                                        openMenuSuKien(player, this, tempId, select);
                                    }
                                } else if (player.zone instanceof ZSnakeRoad) {
                                    if (mapId == ConstMap.CON_DUONG_RAN_DOC) {
                                        ZSnakeRoad zroad = (ZSnakeRoad) player.zone;
                                        if (zroad.isKilledAll()) {
                                            SnakeRoad road = (SnakeRoad) zroad.getDungeon();
                                            ZSnakeRoad egr = (ZSnakeRoad) road.find(ConstMap.THAN_DIEN);
                                            egr.enter(player, 360, 408);
                                            Service.getInstance().sendThongBao(player, "H√£y xu·ªëng g·∫∑p th·∫ßn m√®o Karin");
                                        } else {
                                            Service.getInstance().sendThongBao(player,
                                                    "H√£y ti√™u di·ªát h·∫øt qu√°i v·∫≠t ·ªü ƒë√¢y!");
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.THAN_VU_TRU:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 48) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Con mu·ªën l√†m g√¨ n√†o", "Di chuy·ªÉn",
                                            getMenuSuKien(EVENT_SEVER));
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 48) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                this.createOtherMenu(player, ConstNpc.MENU_DI_CHUYEN,
                                                        "Con mu·ªën ƒëi ƒë√¢u?", "V·ªÅ\nth·∫ßn ƒëi·ªán", "Th√°nh ƒë·ªãa\nKaio",
                                                        "Con\nƒë∆∞·ªùng\nr·∫Øn ƒë·ªôc", getMenuSuKien(EVENT_SEVER), "T·ª´ ch·ªëi");
                                                break;
                                            case 1:
                                                switch (EVENT_SEVER) {
                                                    case 2:
                                                        Attribute at = ServerManager.gI().getAttributeManager()
                                                                .find(ConstAttribute.HP);
                                                        String text = "S·ª± ki·ªán 20/11 ch√≠nh th·ª©c t·∫°i Ng·ªçc R·ªìng "
                                                                + Manager.SERVER_NAME + "\n "
                                                                + "S·ªë ƒëi·ªÉm hi·ªán t·∫°i c·ªßa b·∫°n l√† : "
                                                                + player.event.getEventPoint()
                                                                + "\nT·ªïng s·ªë hoa ƒë√£ t·∫∑ng tr√™n to√†n m√°y ch·ªß "
                                                                + EVENT_COUNT_THAN_VU_TRU % 999 + "/999";
                                                        this.createOtherMenu(player, ConstNpc.MENU_OPEN_SUKIEN,
                                                                at != null && !at.isExpired() ? text
                                                                + "\nTo√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 20% HP,th·ªùi gian c√≤n l·∫°i "
                                                                + at.getTime() / 60 + " ph√∫t."
                                                                : text + "\nKhi t·∫∑ng ƒë·ªß 999 b√¥ng hoa to√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 20% HP trong 60 ph√∫t\n",
                                                                "T·∫∑ng 1\n B√¥ng hoa", "T·∫∑ng\n10 B√¥ng", "T·∫∑ng\n99 B√¥ng",
                                                                "ƒê·ªïi\nH·ªôp qu√†");
                                                        break;
                                                }
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_DI_CHUYEN) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 45, -1, 354);
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMap(player, 50, -1, 318, 336);
                                                break;
                                            case 2:
                                                // con ƒë∆∞·ªùng r·∫Øn ƒë·ªôc
                                                // Service.getInstance().sendThongBao(player, "Comming Soon.");
                                                if (player.clan != null) {
                                                    Calendar calendar = Calendar.getInstance();
                                                    int dayOfWeek = calendar.get(Calendar.DAY_OF_WEEK);
                                                    if (!(dayOfWeek == Calendar.MONDAY
                                                            || dayOfWeek == Calendar.WEDNESDAY
                                                            || dayOfWeek == Calendar.FRIDAY
                                                            || dayOfWeek == Calendar.SUNDAY)) {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Ch·ªâ m·ªü v√†o th·ª© 2, 4, 6, CN h√†ng tu·∫ßn!");
                                                        return;
                                                    }
                                                    if (player.clanMember.getNumDateFromJoinTimeToToday() < 2) {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Ph·∫£i tham gia bang h·ªôi √≠t nh·∫•t 2 ng√†y m·ªõi c√≥ th·ªÉ tham gia!");
                                                        return;
                                                    }
                                                    if (player.clan.snakeRoad == null) {
                                                        this.createOtherMenu(player, ConstNpc.MENU_CHON_CAP_DO,
                                                                "H√£y mau tr·ªü v·ªÅ b·∫±ng con ƒë∆∞·ªùng r·∫Øn ƒë·ªôc\nb·ªçn Xayda ƒë√£ ƒë·∫øn Tr√°i ƒê·∫•t",
                                                                "Ch·ªçn\nc·∫•p ƒë·ªô", "T·ª´ ch·ªëi");
                                                    } else {
                                                        if (player.clan.snakeRoad.isClosed()) {
                                                            Service.getInstance().sendThongBao(player,
                                                                    "Bang h·ªôi ƒë√£ h·∫øt l∆∞·ª£t tham gia!");
                                                        } else {
                                                            this.createOtherMenu(player,
                                                                    ConstNpc.MENU_ACCEPT_GO_TO_CDRD,
                                                                    "Con c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒë·∫øn con ƒë∆∞·ªùng r·∫Øn ƒë·ªôc c·∫•p ƒë·ªô "
                                                                    + player.clan.snakeRoad.getLevel() + "?",
                                                                    "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                                        }
                                                    }
                                                } else {
                                                    Service.getInstance().sendThongBao(player,
                                                            "Ch·ªâ d√†nh cho nh·ªØng ng∆∞·ªùi trong bang h·ªôi!");
                                                }
                                                break;

                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_CHON_CAP_DO) {
                                        switch (select) {
                                            case 0:
                                                Input.gI().createFormChooseLevelCDRD(player);
                                                break;

                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_ACCEPT_GO_TO_CDRD) {
                                        switch (select) {
                                            case 0:
                                                if (player.clan != null) {
                                                    synchronized (player.clan) {
                                                        if (player.clan.snakeRoad == null) {
                                                            int level = Byte.parseByte(
                                                                    String.valueOf(PLAYERID_OBJECT.get(player.id)));
                                                            SnakeRoad road = new SnakeRoad(level);
                                                            ServerManager.gI().getDungeonManager().addDungeon(road);
                                                            road.join(player);
                                                            player.clan.snakeRoad = road;
                                                        } else {
                                                            player.clan.snakeRoad.join(player);
                                                        }
                                                    }
                                                }
                                                break;

                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPEN_SUKIEN) {
                                        openMenuSuKien(player, this, tempId, select);
                                    }
                                }
                            }
                        }

                    };
                    break;
                case ConstNpc.KIBIT:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 50) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                            "ƒê·∫øn\nKaio", "T·ª´ ch·ªëi");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 50) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMap(player, 48, -1, 354, 240);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.OSIN:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 50) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                            "ƒê·∫øn\nKaio", "ƒê·∫øn\nh√†nh tinh\nBill", "T·ª´ ch·ªëi");
                                } else if (this.mapId == 52) {
                                    if (MabuWar.gI().isTimeMabuWar() || MabuWar14h.gI().isTimeMabuWar()) {
                                        if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                            this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                                    "B√¢y gi·ªù t√¥i s·∫Ω b√≠ m·∫≠t...\n ƒëu·ªïi theo 2 t√™n ƒë·ªì t·ªÉ... \n"
                                                    + "Qu√Ω v·ªã n√†o mu·ªën ƒëi theo th√¨ xin m·ªùi !",
                                                    "Ok", "T·ª´ ch·ªëi");
                                        }
                                    } else {
                                        if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                            this.createOtherMenu(player, ConstNpc.IGNORE_MENU,
                                                    "V√†o l√∫c 12h t√¥i s·∫Ω b√≠ m·∫≠t...\n ƒëu·ªïi theo 2 t√™n ƒë·ªì t·ªÉ... \n"
                                                    + "Qu√Ω v·ªã n√†o mu·ªën ƒëi theo th√¨ xin m·ªùi !",
                                                    "Ok", "T·ª´ ch·ªëi");
                                        }
                                    }
                                } else if (this.mapId == 154) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "|3|ƒê·ªÉ ƒë·∫øn ƒë∆∞·ª£c H√†nh tinh ng·ª•c t√π y√™u c·∫ßu mang 5 m√≥n ƒë·ªì H·ªßy di·ªát"
                                            + "\n|1|Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                            "V·ªÅ th√°nh ƒë·ªãa", "ƒê·∫øn\nh√†nh tinh\nng·ª•c t√π", "T·ª´ ch·ªëi");
                                } else if (this.mapId == 155 || this.mapId == 165) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i ?",
                                            "Quay v·ªÅ", "T·ª´ ch·ªëi");
                                } else if (MapService.gI().isMapMabuWar(this.mapId) || MapService.gI().isMapMabuWar14H(this.mapId)) {
                                    if (MabuWar.gI().isTimeMabuWar()) {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                                "ƒê·ª´ng v·ªôi xem th∆∞·ªùng Babyƒë√¢y,ngay ƒë·∫øn cha h·∫Øn l√† th·∫ßn ma ƒë·∫°o sƒ©\n"
                                                + "Bibiƒë√¢y khi c√≤n s·ªëng c≈©ng ph·∫£i s·ª£ h·∫Øn ƒë·∫•y",
                                                "Gi·∫£i tr·ª´\nph√©p thu·∫≠t\n50Tr V√†ng",
                                                player.zone.map.mapId != 120 ? "Xu·ªëng\nT·∫ßng D∆∞·ªõi" : "R·ªùi\nKh·ªèi ƒë√¢y");
                                    } else if (MabuWar14h.gI().isTimeMabuWar()) {
                                        createOtherMenu(player, ConstNpc.BASE_MENU, "Ta s·∫Ω ph√π h·ªô cho ng∆∞∆°i b·∫±ng ngu·ªìn s·ª©c m·∫°nh c·ªßa Th·∫ßn Kai√¥"
                                                + "\n+1 tri·ªáu HP, +1 tri·ªáu MP, +10k S·ª©c ƒë√°nh"
                                                + "\nL∆∞u √Ω: s·ª©c m·∫°nh s·∫Ω bi·∫øn m·∫•t khi ng∆∞∆°i r·ªùi kh·ªèi ƒë√¢y",
                                                "Ph√π h·ªô\n55 h·ªìng ng·ªçc", "T·ª´ ch·ªëi", "V·ªÅ\nƒê·∫°i H·ªôi\nV√µ Thu·∫≠t");
                                    }
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 50) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMap(player, 48, -1, 354, 240);
                                                break;
                                            case 1:
                                                ChangeMapService.gI().changeMap(player, 154, -1, 200, 312);
                                                break;
                                        }
                                    }
                                } else if (this.mapId == 52) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                if (MabuWar.gI().isTimeMabuWar()) {
                                                    ChangeMapService.gI().changeMap(player, 114, -1, 354, 240);
                                                } else {
                                                    ChangeMapService.gI().changeMap(player, 127, -1, 354, 240);
                                                }
                                                break;
                                        }
                                    }
                                } else if (this.mapId == 154) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                ChangeMapService.gI().changeMap(player, 50, -1, 318, 336);
                                                break;
                                            case 1:
                                                if (!Manager.gI().getGameConfig().isOpenPrisonPlanet()) {
                                                    Service.getInstance().sendThongBao(player,
                                                            "L·ªëi v√†o h√†nh tinh ng·ª•c t√π ch∆∞a m·ªü");
                                                    return;
                                                }
                                                if (player.nPoint.power < 60000000000L) {
                                                    Service.getInstance().sendThongBao(player,
                                                            "Y√™u c·∫ßu t·ªëi thi·∫øu 60t·ª∑ s·ª©c m·∫°nh");
                                                    return;
                                                }
                                                if (player.setClothes.setDHD != 5) {
                                                    Service.getInstance().sendThongBao(player,
                                                            "Y√™u c·∫ßu mang set ƒê·ªì H·ªßy di·ªát");
                                                    return;
                                                }
                                                ChangeMapService.gI().changeMap(player, 155, -1, 111, 792);
                                                break;
                                        }
                                    }
                                } else if (this.mapId == 155) {
                                    if (player.iDMark.isBaseMenu()) {
                                        if (select == 0) {
                                            ChangeMapService.gI().changeMap(player, 154, -1, 200, 312);
                                        }
                                    }
                                } else if (this.mapId == 165) {
                                    if (player.iDMark.isBaseMenu()) {
                                        if (select == 0) {
                                            ChangeMapService.gI().changeMapBySpaceShip(player, player.gender + 21, -1, 250);
                                        }
                                    }
                                } else if (MapService.gI().isMapMabuWar(this.mapId) || MapService.gI().isMapMabuWar14H(this.mapId)) {
                                    if (player.iDMark.isBaseMenu()) {
                                        if (MabuWar.gI().isTimeMabuWar()) {
                                            switch (select) {
                                                case 0:
                                                    if (player.inventory.getGold() >= 50000000) {
                                                        Service.getInstance().changeFlag(player, 9);
                                                        player.inventory.subGold(50000000);

                                                    } else {
                                                        Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß v√†ng");
                                                    }
                                                    break;
                                                case 1:
                                                    if (player.zone.map.mapId == 120) {
                                                        ChangeMapService.gI().changeMapBySpaceShip(player,
                                                                player.gender + 21, -1, 250);
                                                    }
                                                    if (player.cFlag == 9) {
                                                        if (player.getPowerPoint() >= 20) {
                                                            if (!(player.zone.map.mapId == 119)) {
                                                                int idMapNextFloor = player.zone.map.mapId == 115
                                                                        ? player.zone.map.mapId + 2
                                                                        : player.zone.map.mapId + 1;
                                                                ChangeMapService.gI().changeMap(player, idMapNextFloor, -1,
                                                                        354, 240);
                                                            } else {
                                                                Zone zone = MabuWar.gI().getMapLastFloor(120);
                                                                if (zone != null) {
                                                                    ChangeMapService.gI().changeMap(player, zone, 354, 240);
                                                                } else {
                                                                    Service.getInstance().sendThongBao(player,
                                                                            "Tr·∫≠n ƒë·∫°i chi·∫øn ƒë√£ k·∫øt th√∫c, t√†u v·∫≠n chuy·ªÉn s·∫Ω ƒë∆∞a b·∫°n v·ªÅ nh√†");
                                                                }
                                                            }
                                                            player.resetPowerPoint();
                                                            player.sendMenuGotoNextFloorMabuWar = false;
                                                            Service.getInstance().sendPowerInfo(player, "%",
                                                                    player.getPowerPoint());
                                                            if (Util.isTrue(1, 30)) {
                                                                player.inventory.ruby += 1;
                                                                PlayerService.gI().sendInfoHpMpMoney(player);
                                                                Service.getInstance().sendThongBao(player,
                                                                        "B·∫°n nh·∫≠n ƒë∆∞·ª£c 1 H·ªìng Ng·ªçc");
                                                            } else {
                                                                Service.getInstance().sendThongBao(player,
                                                                        "B·∫°n ƒëen v√¥ c√πng lu√¥n n√™n kh√¥ng nh·∫≠n ƒë∆∞·ª£c g√¨ c·∫£");
                                                            }
                                                        } else {
                                                            this.npcChat(player,
                                                                    "Ng∆∞∆°i c·∫ßn c√≥ ƒë·ªß ƒëi·ªÉm ƒë·ªÉ xu·ªëng t·∫ßng ti·∫øp theo");
                                                        }
                                                        break;
                                                    } else {
                                                        this.npcChat(player,
                                                                "Ng∆∞∆°i ƒëang theo phe Babiƒë√¢y,H√£y qua b√™n ƒë√≥ m√† th·ªÉ hi·ªán");
                                                    }
                                            }
                                        } else if (MabuWar14h.gI().isTimeMabuWar()) {
                                            switch (select) {
                                                case 0:
                                                    if (player.effectSkin.isPhuHo) {
                                                        this.npcChat("Con ƒë√£ mang trong m√¨nh s·ª©c m·∫°nh c·ªßa th·∫ßn Kai√¥!");
                                                        return;
                                                    }
                                                    if (player.inventory.ruby < 55) {
                                                        Service.getInstance().sendThongBao(player, "B·∫°n kh√¥ng ƒë·ªß h·ªìng ng·ªçc");
                                                    } else {
                                                        player.inventory.ruby -= 55;
                                                        player.effectSkin.isPhuHo = true;
                                                        Service.getInstance().point(player);
                                                        this.npcChat("Ta ƒë√£ ph√π h·ªô cho con h√£y gi√∫p ta ti√™u di·ªát Mab∆∞!");
                                                    }
                                                    break;
                                                case 2:
                                                    ChangeMapService.gI().changeMapBySpaceShip(player, 52, -1, 250);
                                                    break;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.BABIDAY:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (MapService.gI().isMapMabuWar(this.mapId)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "ƒê·ª´ng v·ªôi xem th∆∞·ªùng Babyƒë√¢y,ngay ƒë·∫øn cha h·∫Øn l√† th·∫ßn ma ƒë·∫°o sƒ©\n"
                                            + "Bibiƒë√¢y khi c√≤n s·ªëng c≈©ng ph·∫£i s·ª£ h·∫Øn ƒë·∫•y",
                                            "Y·ªÉm b√πa\n50Tr V√†ng",
                                            player.zone.map.mapId != 120 ? "Xu·ªëng\nT·∫ßng D∆∞·ªõi" : "R·ªùi\nKh·ªèi ƒë√¢y");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (MapService.gI().isMapMabuWar(this.mapId) && MabuWar.gI().isTimeMabuWar()) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                if (player.inventory.getGold() >= 50000000) {
                                                    Service.getInstance().changeFlag(player, 10);
                                                    player.inventory.subGold(50000000);
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß v√†ng");
                                                }
                                                break;
                                            case 1:
                                                if (player.zone.map.mapId == 120) {
                                                    ChangeMapService.gI().changeMapBySpaceShip(player,
                                                            player.gender + 21, -1, 250);
                                                }
                                                if (player.cFlag == 10) {
                                                    if (player.getPowerPoint() >= 20) {
                                                        if (!(player.zone.map.mapId == 119)) {
                                                            int idMapNextFloor = player.zone.map.mapId == 115
                                                                    ? player.zone.map.mapId + 2
                                                                    : player.zone.map.mapId + 1;
                                                            ChangeMapService.gI().changeMap(player, idMapNextFloor, -1,
                                                                    354, 240);
                                                        } else {
                                                            Zone zone = MabuWar.gI().getMapLastFloor(120);
                                                            if (zone != null) {
                                                                ChangeMapService.gI().changeMap(player, zone, 354, 240);
                                                            } else {
                                                                Service.getInstance().sendThongBao(player,
                                                                        "Tr·∫≠n ƒë·∫°i chi·∫øn ƒë√£ k·∫øt th√∫c, t√†u v·∫≠n chuy·ªÉn s·∫Ω ƒë∆∞a b·∫°n v·ªÅ nh√†");
                                                                ChangeMapService.gI().changeMapBySpaceShip(player,
                                                                        player.gender + 21, -1, 250);
                                                            }
                                                        }
                                                        player.resetPowerPoint();
                                                        player.sendMenuGotoNextFloorMabuWar = false;
                                                        Service.getInstance().sendPowerInfo(player, "TL",
                                                                player.getPowerPoint());
                                                        if (Util.isTrue(1, 30)) {
                                                            player.inventory.ruby += 1;
                                                            PlayerService.gI().sendInfoHpMpMoney(player);
                                                            Service.getInstance().sendThongBao(player,
                                                                    "B·∫°n nh·∫≠n ƒë∆∞·ª£c 1 H·ªìng Ng·ªçc");
                                                        } else {
                                                            Service.getInstance().sendThongBao(player,
                                                                    "B·∫°n ƒëen v√¥ c√πng lu√¥n n√™n kh√¥ng nh·∫≠n ƒë∆∞·ª£c g√¨ c·∫£");
                                                        }
                                                    } else {
                                                        this.npcChat(player,
                                                                "Ng∆∞∆°i c·∫ßn c√≥ ƒë·ªß ƒëi·ªÉm ƒë·ªÉ xu·ªëng t·∫ßng ti·∫øp theo");
                                                    }
                                                    break;
                                                } else {
                                                    this.npcChat(player,
                                                            "Ng∆∞∆°i ƒëang theo phe √îsin,H√£y qua b√™n ƒë√≥ m√† th·ªÉ hi·ªán");
                                                }
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.LINH_CANH:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (player.clan == null) {
                                    this.createOtherMenu(player, ConstNpc.MENU_KHONG_CHO_VAO_DT,
                                            "Ch·ªâ ti·∫øp c√°c bang h·ªôi, mi·ªÖn ti·∫øp kh√°ch v√£ng lai", "ƒê√≥ng");
                                } else if (player.clan.getMembers().size() < 5) {
                                    // } else if (player.clan.getMembers().size() < 1) {
                                    this.createOtherMenu(player, ConstNpc.MENU_KHONG_CHO_VAO_DT,
                                            "Bang h·ªôi ph·∫£i c√≥ √≠t nh·∫•t 5 th√†nh vi√™n m·ªõi c√≥ th·ªÉ m·ªü", "ƒê√≥ng");
                                } else {
                                    ClanMember clanMember = player.clan.getClanMember((int) player.id);
                                    int days = (int) (((System.currentTimeMillis() / 1000) - clanMember.joinTime) / 60
                                            / 60 / 24);
                                    if (days < 2) {
                                        NpcService.gI().createTutorial(player, avartar,
                                                "Ch·ªâ nh·ªØng th√†nh vi√™n gia nh·∫≠p bang h·ªôi t·ªëi thi·ªÉu 2 ng√†y m·ªõi c√≥ th·ªÉ tham gia");
                                        return;
                                    }
                                    if (!player.clan.haveGoneDoanhTrai && player.clan.timeOpenDoanhTrai != 0) {
                                        createOtherMenu(player, ConstNpc.MENU_VAO_DT,
                                                "Bang h·ªôi c·ªßa ng∆∞∆°i ƒëang ƒë√°nh tr·∫°i ƒë·ªôc nh√£n\n" + "Th·ªùi gian c√≤n l·∫°i l√† "
                                                + TimeUtil.getSecondLeft(player.clan.timeOpenDoanhTrai,
                                                        DoanhTrai.TIME_DOANH_TRAI / 1000)
                                                + ". Ng∆∞∆°i c√≥ mu·ªën tham gia kh√¥ng?",
                                                "Tham gia", "Kh√¥ng", "H∆∞·ªõng\nd·∫´n\nth√™m");
                                    } else {
                                        List<Player> plSameClans = new ArrayList<>();
                                        List<Player> playersMap = player.zone.getPlayers();
                                        synchronized (playersMap) {
                                            for (Player pl : playersMap) {
                                                if (!pl.equals(player) && pl.clan != null
                                                        && pl.clan.id == player.clan.id && pl.location.x >= 1285
                                                        && pl.location.x <= 1645) {
                                                    plSameClans.add(pl);
                                                }

                                            }
                                        }
                                        // if (plSameClans.size() >= 0) {
                                        if (plSameClans.size() >= 2) {
                                            if (!player.isAdmin() && player.clanMember
                                                    .getNumDateFromJoinTimeToToday() < DoanhTrai.DATE_WAIT_FROM_JOIN_CLAN) {
                                                createOtherMenu(player, ConstNpc.MENU_KHONG_CHO_VAO_DT,
                                                        "Bang h·ªôi ch·ªâ cho ph√©p nh·ªØng ng∆∞·ªùi ·ªü trong bang tr√™n 1 ng√†y. H·∫πn ng∆∞∆°i quay l·∫°i v√†o l√∫c kh√°c",
                                                        "OK", "H∆∞·ªõng\nd·∫´n\nth√™m");
                                            } else if (player.clan.haveGoneDoanhTrai) {
                                                createOtherMenu(player, ConstNpc.MENU_KHONG_CHO_VAO_DT,
                                                        "Bang h·ªôi c·ªßa ng∆∞∆°i ƒë√£ ƒëi tr·∫°i l√∫c "
                                                        + Util.formatTime(player.clan.timeOpenDoanhTrai)
                                                        + " h√¥m nay. Ng∆∞·ªùi m·ªü\n" + "("
                                                        + player.clan.playerOpenDoanhTrai.name
                                                        + "). H·∫πn ng∆∞∆°i quay l·∫°i v√†o ng√†y mai",
                                                        "OK", "H∆∞·ªõng\nd·∫´n\nth√™m");

                                            } else {
                                                createOtherMenu(player, ConstNpc.MENU_CHO_VAO_DT,
                                                        "H√¥m nay bang h·ªôi c·ªßa ng∆∞∆°i ch∆∞a v√†o tr·∫°i l·∫ßn n√†o. Ng∆∞∆°i c√≥ mu·ªën v√†o\n"
                                                        + "kh√¥ng?\nƒê·ªÉ v√†o, ta khuy√™n ng∆∞∆°i n√™n c√≥ 3-4 ng∆∞·ªùi c√πng bang ƒëi c√πng",
                                                        "V√†o\n(mi·ªÖn ph√≠)", "Kh√¥ng", "H∆∞·ªõng\nd·∫´n\nth√™m");
                                            }
                                        } else {
                                            createOtherMenu(player, ConstNpc.MENU_KHONG_CHO_VAO_DT,
                                                    "Ng∆∞∆°i ph·∫£i c√≥ √≠t nh·∫•t 2 ƒë·ªìng ƒë·ªôi c√πng bang ƒë·ª©ng g·∫ßn m·ªõi c√≥ th·ªÉ\nv√†o\n"
                                                    + "tuy nhi√™n ta khuy√™n ng∆∞∆°i n√™n ƒëi c√πng v·ªõi 3-4 ng∆∞·ªùi ƒë·ªÉ kh·ªèi ch·∫øt.\n"
                                                    + "Hahaha.",
                                                    "OK", "H∆∞·ªõng\nd·∫´n\nth√™m");
                                        }
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 27) {
                                    switch (player.iDMark.getIndexMenu()) {
                                        case ConstNpc.MENU_KHONG_CHO_VAO_DT:
                                            if (select == 1) {
                                                NpcService.gI().createTutorial(player, this.avartar,
                                                        ConstNpc.HUONG_DAN_DOANH_TRAI);
                                            }
                                            break;
                                        case ConstNpc.MENU_CHO_VAO_DT:
                                            switch (select) {
                                                case 0:
                                                    DoanhTraiService.gI().openDoanhTrai(player);
                                                    break;
                                                case 2:
                                                    NpcService.gI().createTutorial(player, this.avartar,
                                                            ConstNpc.HUONG_DAN_DOANH_TRAI);
                                                    break;
                                            }
                                            break;
                                        case ConstNpc.MENU_VAO_DT:
                                            switch (select) {
                                                case 0:
                                                    ChangeMapService.gI().changeMap(player, 53, 0, 35, 432);
                                                    break;
                                                case 2:
                                                    NpcService.gI().createTutorial(player, this.avartar,
                                                            ConstNpc.HUONG_DAN_DOANH_TRAI);
                                                    break;
                                            }
                                            break;
                                        default:
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.QUA_TRUNG:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        private final int COST_AP_TRUNG_NHANH = 1000000000;

                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                player.mabuEgg.sendMabuEgg();
                                if (player.mabuEgg.getSecondDone() != 0) {
                                    this.createOtherMenu(player, ConstNpc.CAN_NOT_OPEN_EGG, "B∆∞ b∆∞ b∆∞...",
                                            "H·ªßy b·ªè\ntr·ª©ng",
                                            "·∫§p nhanh\n" + Util.numberToMoney(COST_AP_TRUNG_NHANH) + " v√†ng", "ƒê√≥ng");
                                } else {
                                    this.createOtherMenu(player, ConstNpc.CAN_OPEN_EGG, "B∆∞ b∆∞ b∆∞...", "N·ªü",
                                            "H·ªßy b·ªè\ntr·ª©ng", "ƒê√≥ng");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.CAN_NOT_OPEN_EGG:
                                        if (select == 0) {
                                            this.createOtherMenu(player, ConstNpc.CONFIRM_DESTROY_EGG,
                                                    "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën h·ªßy b·ªè tr·ª©ng Mab∆∞?", "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                        } else if (select == 1) {
                                            if (player.inventory.gold >= COST_AP_TRUNG_NHANH) {
                                                player.inventory.gold -= COST_AP_TRUNG_NHANH;
                                                player.mabuEgg.timeDone = 0;
                                                Service.getInstance().sendMoney(player);
                                                player.mabuEgg.sendMabuEgg();
                                            } else {
                                                Service.getInstance().sendThongBao(player,
                                                        "B·∫°n kh√¥ng ƒë·ªß v√†ng ƒë·ªÉ th·ª±c hi·ªán, c√≤n thi·∫øu "
                                                        + Util.numberToMoney(
                                                                (COST_AP_TRUNG_NHANH - player.inventory.gold))
                                                        + " v√†ng");
                                            }
                                        }
                                        break;
                                    case ConstNpc.CAN_OPEN_EGG:
                                        switch (select) {
                                            case 0:
                                                this.createOtherMenu(player, ConstNpc.CONFIRM_OPEN_EGG,
                                                        "B·∫°n c√≥ ch·∫Øc ch·∫Øn cho tr·ª©ng n·ªü?\n"
                                                        + "ƒê·ªá t·ª≠ c·ªßa b·∫°n s·∫Ω ƒë∆∞·ª£c thay th·∫ø b·∫±ng ƒë·ªá Mab∆∞",
                                                        "ƒê·ªá mab∆∞\nTr√°i ƒê·∫•t", "ƒê·ªá mab∆∞\nNam·∫øc", "ƒê·ªá mab∆∞\nXayda",
                                                        "T·ª´ ch·ªëi");
                                                break;
                                            case 1:
                                                this.createOtherMenu(player, ConstNpc.CONFIRM_DESTROY_EGG,
                                                        "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën h·ªßy b·ªè tr·ª©ng Mab∆∞?", "ƒê·ªìng √Ω",
                                                        "T·ª´ ch·ªëi");
                                                break;
                                        }
                                        break;
                                    case ConstNpc.CONFIRM_OPEN_EGG:
                                        switch (select) {
                                            case 0:
                                                player.mabuEgg.openEgg(ConstPlayer.TRAI_DAT);
                                                break;
                                            case 1:
                                                player.mabuEgg.openEgg(ConstPlayer.NAMEC);
                                                break;
                                            case 2:
                                                player.mabuEgg.openEgg(ConstPlayer.XAYDA);
                                                break;
                                            default:
                                                break;
                                        }
                                        break;
                                    case ConstNpc.CONFIRM_DESTROY_EGG:
                                        if (select == 0) {
                                            player.mabuEgg.destroyEgg();
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.QUOC_VUONG:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        @Override
                        public void openBaseMenu(Player player) {
                            this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                    "Con mu·ªën n√¢ng gi·ªõi h·∫°n s·ª©c m·∫°nh cho b·∫£n th√¢n hay ƒë·ªá t·ª≠?", "B·∫£n th√¢n", "ƒê·ªá t·ª≠",
                                    "Chuy·ªÉn Sinh");
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            if (player.nPoint.limitPower < NPoint.MAX_LIMIT) {
                                                this.createOtherMenu(player, ConstNpc.OPEN_POWER_MYSEFT,
                                                        "Ta s·∫Ω tru·ªÅn nƒÉng l∆∞·ª£ng gi√∫p con m·ªü gi·ªõi h·∫°n s·ª©c m·∫°nh c·ªßa b·∫£n th√¢n l√™n "
                                                        + Util.numberToMoney(player.nPoint.getPowerNextLimit()),
                                                        "N√¢ng ngay\n" + Util.numberToMoney(OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER) + " v√†ng", "ƒê√≥ng");
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.IGNORE_MENU,
                                                        "S·ª©c m·∫°nh c·ªßa con ƒë√£ ƒë·∫°t t·ªõi gi·ªõi h·∫°n",
                                                        "ƒê√≥ng");
                                            }
                                            break;
                                        case 1:
                                            if (player.pet != null) {
                                                if (player.pet.nPoint.limitPower < NPoint.MAX_LIMIT) {
                                                    this.createOtherMenu(player, ConstNpc.OPEN_POWER_PET,
                                                            "Ta s·∫Ω tru·ªÅn nƒÉng l∆∞·ª£ng gi√∫p con m·ªü gi·ªõi h·∫°n s·ª©c m·∫°nh c·ªßa ƒë·ªá t·ª≠ l√™n "
                                                            + Util.numberToMoney(player.pet.nPoint.getPowerNextLimit()),
                                                            "N√¢ng ngay\n" + Util.numberToMoney(OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER) + " v√†ng", "ƒê√≥ng");
                                                } else {
                                                    this.createOtherMenu(player, ConstNpc.IGNORE_MENU,
                                                            "S·ª©c m·∫°nh c·ªßa ƒë·ªá con ƒë√£ ƒë·∫°t t·ªõi gi·ªõi h·∫°n",
                                                            "ƒê√≥ng");
                                                }
                                            } else {
                                                Service.getInstance().sendThongBao(player, "Kh√¥ng th·ªÉ th·ª±c hi·ªán");
                                            }
                                            // gi·ªõi h·∫°n ƒë·ªá t·ª≠
                                            break;
                                        case 2:
                                            this.createOtherMenu(player, ConstNpc.MENU_CHUYENSINH,
                                                    "|8| -- CHUY·ªÇN SINH --"
                                                    + "\n|3|S·ª©c M·∫°nh Hi·ªán T·∫°i: \n"
                                                    + Util.format(player.nPoint.power)
                                                    + "\n|5| ----------------"
                                                    + "\n B·∫°n s·∫Ω ƒë∆∞·ª£c t√°i sinh ·ªü m·ªôt h√†nh tinh kh√°c b·∫•t k√¨"
                                                    + "\n C√°c chi√™u th·ª©c s·∫Ω v·ªÅ c·∫•p 1, S·ª©c m·∫°nh v·ªÅ 1 tri·ªáu 5"
                                                    + "\n|1| T√°i sinh c√†ng nhi·ªÅu Sƒê,HP,KI c√†ng cao"
                                                    + "\n ----------------"
                                                    + "\n|7| Y√™u C·∫ßu:"
                                                    + "\n|2| S·ª©c m·∫°nh ƒë·∫°t 500 T·ª∑"
                                                    + "\n C√≥ Skill " + player.tenskill9(player.gender)
                                                    + "\n ----------------"
                                                    + "\n|6| C√≥ t·ªâ l·ªá th·∫•t b·∫°i !"
                                                    + "\n Th·∫•t b·∫°i s·∫Ω tr·ª´ ƒëi Th·ªèi v√†ng v√† Gi·∫£m 10 T·ª∑ S·ª©c m·∫°nh",
                                                    "Chuy·ªÉn sinh", "Th√¥ng tin\nchuy·ªÉn sinh",
                                                    "ƒê√≥ng");
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_CHUYENSINH) {
                                    switch (select) {
                                        case 0:
                                            int tvang = 0;
                                            if (player.chuyensinh <= 10) {
                                                tvang = 2;
                                            }
                                            if (player.chuyensinh <= 20 && player.chuyensinh > 10) {
                                                tvang = 3;
                                            }
                                            if (player.chuyensinh > 20 && player.chuyensinh <= 30) {
                                                tvang = 5;
                                            }
                                            if (player.chuyensinh > 30 && player.chuyensinh <= 50) {
                                                tvang = 8;
                                            }
                                            if (player.chuyensinh > 50 && player.chuyensinh <= 60) {
                                                tvang = 20;
                                            }
                                            if (player.chuyensinh > 60 && player.chuyensinh <= 72) {
                                                tvang = 50;
                                            }
                                            this.createOtherMenu(player, ConstNpc.CHUYENSINH,
                                                    "|7|CHUY·ªÇN SINH"
                                                    + "\n\n|5|B·∫°n ƒëang chuy·ªÉn sinh : " + player.chuyensinh
                                                    + " \nC·∫•p ti·∫øp theo v·ªõi t·ªâ l·ªá : " + (100 - player.chuyensinh * 2)
                                                    + "% \n M·ª©c gi√° chuy·ªÉn sinh : " + tvang + " Th·ªèi v√†ng \n\n|7|B·∫°n c√≥ mu·ªën chuy·ªÉn sinh ?",
                                                    "ƒê·ªìng √Ω", "T·ª´ ch·ªëi");
                                            break; // 
                                        case 1:
                                            int hp = 0,
                                             dame = 0;
                                            if (player.chuyensinh > 0) {
                                                if (player.chuyensinh <= 10) {
                                                    dame += (1750) * player.chuyensinh;
                                                    hp += (15650) * player.chuyensinh;
                                                }
                                                if (player.chuyensinh <= 20 && player.chuyensinh > 10) {
                                                    dame += (3350) * (player.chuyensinh);
                                                    hp += (30750) * (player.chuyensinh);
                                                }
                                                if (player.chuyensinh > 20 && player.chuyensinh <= 30) {
                                                    dame += (4950) * (player.chuyensinh);
                                                    hp += (45875) * (player.chuyensinh);
                                                }
                                                if (player.chuyensinh > 30) {
                                                    dame += (6000) * (player.chuyensinh);
                                                    hp += (60000) * (player.chuyensinh);
                                                }
                                            }
                                            Service.getInstance().sendThongBaoOK(player, "B·∫°n ƒëang c·∫•p chuy·ªÉn sinh: " + player.chuyensinh
                                                    + "\n HP : +" + Util.format(hp) + "\n KI : +" + Util.format(hp) + "\n S·ª©c ƒë√°nh : +" + Util.format(dame));
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.CHUYENSINH) {
                                    if (player.chuyensinh >= 72) {
                                        npcChat(player, "|7| C·∫•p Chuy·ªÉn sinh ƒë·∫°t MAX l√† 72 C·∫•p");
                                        return;
                                    }
                                    if (player.playerSkill.skills.get(7).point == 0) {
                                        npcChat(player, "|7|Y√™u c·∫ßu ph·∫£i h·ªçc k·ªπ nƒÉng " + player.tenskill9(player.gender));
                                        return;
                                    }
                                    if (player.nPoint.power < 500_000_000_000L) {
                                        npcChat(player, "|7|B·∫°n ch∆∞a ƒë·ªß s·ª©c m·∫°nh y√™u c·∫ßu ƒë·ªÉ Chuy·ªÉn sinh");
                                    } else {
                                        Item thoivang = null;
                                        try {
                                            thoivang = InventoryService.gI().findItemBagByTemp(player, 457);
                                        } catch (Exception e) {
                                        }
                                        int tvang = 0;
                                        if (player.chuyensinh <= 10) {
                                            tvang = 2;
                                        }
                                        if (player.chuyensinh <= 20 && player.chuyensinh > 10) {
                                            tvang = 3;
                                        }
                                        if (player.chuyensinh > 20 && player.chuyensinh <= 30) {
                                            tvang = 5;
                                        }
                                        if (player.chuyensinh > 30 && player.chuyensinh <= 50) {
                                            tvang = 8;
                                        }
                                        if (player.chuyensinh > 50 && player.chuyensinh <= 60) {
                                            tvang = 20;
                                        }
                                        if (player.chuyensinh > 60 && player.chuyensinh <= 72) {
                                            tvang = 50;
                                        }
                                        if (thoivang == null || thoivang.quantity < tvang) {
                                            npcChat(player, "B·∫°n ch∆∞a ƒë·ªß Th·ªèi v√†ng ƒë·ªÉ chuy·ªÉn sinh");
                                            return;
                                        }
                                        int percent = (player.chuyensinh <= 45) ? (100 - (player.chuyensinh) * 2) : 10;
                                        if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                                            if (player.inventory.itemsBody.get(0).quantity < 1
                                                    && player.inventory.itemsBody.get(1).quantity < 1
                                                    && player.inventory.itemsBody.get(2).quantity < 1
                                                    && player.inventory.itemsBody.get(3).quantity < 1
                                                    && player.inventory.itemsBody.get(4).quantity < 1) {
                                                if (Util.nextInt(0, 100) < (percent)) {
                                                    InventoryService.gI().subQuantityItemsBag(player, thoivang, tvang);
                                                    player.gender += 1;
                                                    player.nPoint.power = 1_500_000;
                                                    player.chuyensinh++;
                                                    if (player.gender > 2) {
                                                        player.gender = 0;
                                                    }
                                                    short[] headtd = {30, 31, 64};
                                                    short[] headnm = {9, 29, 32};
                                                    short[] headxd = {27, 28, 6};
                                                    player.playerSkill.skills.clear();
                                                    for (Skill skill : player.playerSkill.skills) {
                                                        skill.point = 1;
                                                    }
                                                    int[] skillsArr = player.gender == 0 ? new int[]{0, 1, 6, 9, 10, 20, 22, 24, 19}
                                                            : player.gender == 1 ? new int[]{2, 3, 7, 11, 12, 17, 18, 26, 19}
                                                            : new int[]{4, 5, 8, 13, 14, 21, 23, 25, 19};
                                                    for (int i = 0; i < skillsArr.length; i++) {
                                                        player.playerSkill.skills.add(SkillUtil.createSkill(skillsArr[i], 1));
                                                    }
                                                    player.playerIntrinsic.intrinsic = IntrinsicService.gI().getIntrinsicById(0);
                                                    player.playerIntrinsic.intrinsic.param1 = 0;
                                                    player.playerIntrinsic.intrinsic.param2 = 0;
                                                    player.playerIntrinsic.countOpen = 0;
                                                    switch (player.gender) {
                                                        case 0:
                                                            player.head = headtd[Util.nextInt(headtd.length)];
                                                            break;
                                                        case 1:
                                                            player.head = headnm[Util.nextInt(headnm.length)];
                                                            break;
                                                        case 2:
                                                            player.head = headxd[Util.nextInt(headxd.length)];
                                                            break;
                                                        default:
                                                            break;
                                                    }
                                                    npcChat(player, "|1|Chuy·ªÉn sinh th√†nh c√¥ng \n c·∫•p hi·ªán t·∫°i :" + player.chuyensinh);
                                                    Service.getInstance().player(player);
                                                    player.zone.loadAnotherToMe(player);
                                                    player.zone.load_Me_To_Another(player);
                                                    Service.getInstance().sendFlagBag(player);
                                                    Service.getInstance().Send_Caitrang(player);
                                                    PlayerService.gI().sendInfoHpMpMoney(player);
                                                    Service.getInstance().point(player);
                                                    Service.getInstance().Send_Info_NV(player);
                                                    InventoryService.gI().sendItemBags(player);
                                                    Service.getInstance().sendMoney(player);
                                                } else {
                                                    npcChat(player, "|7|Chuy·ªÉn sinh th·∫•t b·∫°i \n c·∫•p hi·ªán t·∫°i :" + player.chuyensinh);
                                                    player.nPoint.power -= 10_000_000_000L;
                                                    InventoryService.gI().subQuantityItemsBag(player, thoivang, tvang);
                                                    Service.getInstance().point(player);
                                                    Service.getInstance().Send_Info_NV(player);
                                                    InventoryService.gI().sendItemBags(player);
                                                    Service.getInstance().sendMoney(player);
                                                }
                                            } else {
                                                Service.getInstance().sendThongBao(player, "Th√°o h·∫øt 5 m√≥n ƒë·∫ßu ƒëang m·∫∑c ra nha");
                                            }
                                        } else {
                                            Service.getInstance().sendThongBao(player, "Balo ƒë·∫ßy");
                                        }
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.OPEN_POWER_MYSEFT && player.nPoint.limitPower < NPoint.MAX_LIMIT) {
                                    switch (select) {
                                        case 0:
                                            if (player.inventory.gold >= OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER) {
                                                if (OpenPowerService.gI().openPowerSpeed(player)) {
                                                    player.inventory.gold -= OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER;
                                                    Service.getInstance().sendMoney(player);
                                                }
                                            } else {
                                                Service.getInstance().sendThongBao(player,
                                                        "B·∫°n kh√¥ng ƒë·ªß v√†ng ƒë·ªÉ m·ªü, c√≤n thi·∫øu "
                                                        + Util.numberToMoney((OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER - player.inventory.gold)) + " v√†ng");
                                            }
                                            break;
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.OPEN_POWER_PET && player.pet.nPoint.limitPower < NPoint.MAX_LIMIT) {
                                    if (select == 0) {
                                        if (player.inventory.gold >= OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER) {
                                            if (OpenPowerService.gI().openPowerSpeed(player.pet)) {
                                                player.inventory.gold -= OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER;
                                                Service.getInstance().sendMoney(player);
                                            }
                                        } else {
                                            Service.getInstance().sendThongBao(player,
                                                    "B·∫°n kh√¥ng ƒë·ªß v√†ng ƒë·ªÉ m·ªü, c√≤n thi·∫øu "
                                                    + Util.numberToMoney((OpenPowerService.COST_SPEED_OPEN_LIMIT_POWER - player.inventory.gold)) + " v√†ng");
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.BARDOCK:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "T√¥i c√≥ th·ªÉ gi√∫p g√¨ cho b·∫°n??", "ƒê√≥ng");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.BERRY:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "T√¥i c√≥ th·ªÉ gi√∫p g√¨ cho b·∫°n??", "ƒê√≥ng");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.BUNMA_TL:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "C·∫≠u b√© mu·ªën mua g√¨ n√†o?",
                                            "C·ª≠a h√†ng", "ƒê√≥ng");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    if (select == 0) {
                                        ShopService.gI().openShopNormal(player, this, ConstNpc.SHOP_BUNMA_TL_0, 0,
                                                player.gender);
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.RONG_OMEGA:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                BlackBallWar.gI().setTime();
                                if (this.mapId == 24 || this.mapId == 25 || this.mapId == 26) {
                                    try {
                                        long now = System.currentTimeMillis();
                                        if (now > BlackBallWar.TIME_OPEN && now < BlackBallWar.TIME_CLOSE) {
                                            this.createOtherMenu(player, ConstNpc.MENU_OPEN_BDW,
                                                    "ƒê∆∞·ªùng ƒë·∫øn v·ªõi ng·ªçc r·ªìng sao ƒëen ƒë√£ m·ªü, "
                                                    + "ng∆∞∆°i c√≥ mu·ªën tham gia kh√¥ng?",
                                                    "H∆∞·ªõng d·∫´n\nth√™m", "Tham gia", "T·ª´ ch·ªëi");
                                        } else {
                                            String[] optionRewards = new String[7];
                                            int index = 0;
                                            for (int i = 0; i < 7; i++) {
                                                if (player.rewardBlackBall.timeOutOfDateReward[i] > System
                                                        .currentTimeMillis()) {
                                                    optionRewards[index] = "Nh·∫≠n th∆∞·ªüng\n" + (i + 1) + " sao";
                                                    index++;
                                                }
                                            }
                                            if (index != 0) {
                                                String[] options = new String[index + 1];
                                                for (int i = 0; i < index; i++) {
                                                    options[i] = optionRewards[i];
                                                }
                                                options[options.length - 1] = "T·ª´ ch·ªëi";
                                                this.createOtherMenu(player, ConstNpc.MENU_REWARD_BDW,
                                                        "Ng∆∞∆°i c√≥ m·ªôt v√†i ph·∫ßn th∆∞·ªüng ng·ªçc " + "r·ªìng sao ƒëen ƒë√¢y!",
                                                        options);
                                            } else {
                                                this.createOtherMenu(player, ConstNpc.MENU_NOT_OPEN_BDW,
                                                        "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i?", "H∆∞·ªõng d·∫´n", "T·ª´ ch·ªëi");
                                            }
                                        }
                                    } catch (Exception ex) {
                                        Log.error("L·ªói m·ªü menu r·ªìng Omega");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.MENU_REWARD_BDW:
                                        player.rewardBlackBall.getRewardSelect((byte) select);
                                        break;
                                    case ConstNpc.MENU_OPEN_BDW:
                                        if (select == 0) {
                                            NpcService.gI().createTutorial(player, this.avartar,
                                                    ConstNpc.HUONG_DAN_BLACK_BALL_WAR);
                                        } else if (select == 1) {
                                            player.iDMark.setTypeChangeMap(ConstMap.CHANGE_BLACK_BALL);
                                            ChangeMapService.gI().openChangeMapTab(player);
                                        }
                                        break;
                                    case ConstNpc.MENU_NOT_OPEN_BDW:
                                        if (select == 0) {
                                            NpcService.gI().createTutorial(player, this.avartar,
                                                    ConstNpc.HUONG_DAN_BLACK_BALL_WAR);
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.RONG_1S:
                case ConstNpc.RONG_2S:
                case ConstNpc.RONG_3S:
                case ConstNpc.RONG_4S:
                case ConstNpc.RONG_5S:
                case ConstNpc.RONG_6S:
                case ConstNpc.RONG_7S:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (player.isHoldBlackBall) {
                                    this.createOtherMenu(player, ConstNpc.MENU_PHU_HP, "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i?",
                                            "Ph√π h·ªô", "T·ª´ ch·ªëi");
                                } else {
                                    this.createOtherMenu(player, ConstNpc.MENU_OPTION_GO_HOME,
                                            "Ta c√≥ th·ªÉ gi√∫p g√¨ cho ng∆∞∆°i?", "V·ªÅ nh√†", "T·ª´ ch·ªëi");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.getIndexMenu() == ConstNpc.MENU_PHU_HP) {
                                    if (select == 0) {
                                        this.createOtherMenu(player, ConstNpc.MENU_OPTION_PHU_HP,
                                                "Ta s·∫Ω gi√∫p ng∆∞∆°i tƒÉng HP l√™n m·ª©c kinh ho√†ng, ng∆∞∆°i ch·ªçn ƒëi",
                                                "x3 HP\n" + Util.numberToMoney(BlackBallWar.COST_X3) + " v√†ng",
                                                "x5 HP\n" + Util.numberToMoney(BlackBallWar.COST_X5) + " v√†ng",
                                                "x7 HP\n" + Util.numberToMoney(BlackBallWar.COST_X7) + " v√†ng",
                                                "T·ª´ ch·ªëi");
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPTION_GO_HOME) {
                                    if (select == 0) {
                                        ChangeMapService.gI().changeMapBySpaceShip(player, player.gender + 21, -1, 250);
                                    }
                                } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPTION_PHU_HP) {
                                    switch (select) {
                                        case 0:
                                            BlackBallWar.gI().xHPKI(player, BlackBallWar.X3);
                                            break;
                                        case 1:
                                            BlackBallWar.gI().xHPKI(player, BlackBallWar.X5);
                                            break;
                                        case 2:
                                            BlackBallWar.gI().xHPKI(player, BlackBallWar.X7);
                                            break;
                                        case 3:
                                            this.npcChat(player, "ƒê·ªÉ ta xem ng∆∞∆°i tr·ª• ƒë∆∞·ª£c bao l√¢u");
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.NPC_64:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                createOtherMenu(player, ConstNpc.BASE_MENU, "Ng∆∞∆°i mu·ªën xem th√¥ng tin g√¨?",
                                        "Top\ns·ª©c m·∫°nh", "ƒê√≥ng");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    if (select == 0) {
                                        Service.getInstance().showTopPower(player, Service.getInstance().TOP_SUCMANH);
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.BILL:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {

                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 48) {
                                    createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "|7|SHOP ƒê·ªí H·ª¶Y DI·ªÜT\n|6| Mang ƒë·ªß 5 m√≥n ƒë·ªì Th·∫ßn linh v√† ƒëem 99 Th·ª©c ƒÉn ƒë·∫øn cho ta. Ta s·∫Ω b√°n ƒë·ªì H·ªßy di·ªát cho ng∆∞∆°i",
                                            "SHOP H·ª¶Y DI·ªÜT", "ƒê·ªïi Phi·∫øu\nH·ªßy di·ªát", getMenuSuKien(EVENT_SEVER), "ƒê√≥ng");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (this.mapId) {
                                    case 48:
                                        if (player.iDMark.isBaseMenu()) {
                                            switch (select) {
                                                case 0:
                                                    if (player.check99ThucAnHuyDiet() == true) {
                                                        if (player.setClothes.setDTL == 5) {
                                                            ShopService.gI().openShopSpecial(player, this, ConstNpc.SHOP_BILL_HUY_DIET_0, 0, -1);
                                                        } else {
                                                            createOtherMenu(player, ConstNpc.IGNORE_MENU, "Y√™u c·∫ßu m·∫∑c 5 m√≥n Th·∫ßn linh", "ƒê√≥ng");
                                                        }
                                                    } else {
                                                        createOtherMenu(player, ConstNpc.IGNORE_MENU, "Ng∆∞∆°i ch∆∞a ƒë·ªß 99 th·ª©c ƒÉn", "ƒê√≥ng");
                                                    }
                                                    break;
                                                case 1:
                                                    if (player.setClothes.setDTL == 5) {
                                                        ShopService.gI().openShopSpecial(player, this, ConstNpc.SHOP_BILL_HUY_DIET_1, 1, -1);
                                                    } else {
                                                        createOtherMenu(player, ConstNpc.IGNORE_MENU, "Y√™u c·∫ßu m·∫∑c 5 m√≥n Th·∫ßn linh", "ƒê√≥ng");
                                                    }
                                                    break;
                                                case 2:
                                                    switch (EVENT_SEVER) {
                                                        case 2:
                                                            Attribute at = ServerManager.gI().getAttributeManager()
                                                                    .find(ConstAttribute.SUC_DANH);
                                                            String text = "S·ª± ki·ªán 20/11 ch√≠nh th·ª©c t·∫°i Ng·ªçc R·ªìng "
                                                                    + Manager.SERVER_NAME + "\n "
                                                                    + "S·ªë ƒëi·ªÉm hi·ªán t·∫°i c·ªßa b·∫°n l√† : "
                                                                    + player.event.getEventPoint()
                                                                    + "\nT·ªïng s·ªë hoa ƒë√£ t·∫∑ng tr√™n to√†n m√°y ch·ªß "
                                                                    + EVENT_COUNT_THAN_HUY_DIET % 999 + "/999";
                                                            this.createOtherMenu(player, ConstNpc.MENU_OPEN_SUKIEN,
                                                                    at != null && !at.isExpired() ? text
                                                                    + "\nTo√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 20% s·ª©c ƒë√°nh,th·ªùi gian c√≤n l·∫°i "
                                                                    + at.getTime() / 60 + " ph√∫t."
                                                                    : text + "\nKhi t·∫∑ng ƒë·ªß 999 b√¥ng to√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng tƒÉng 20% s·ª©c ƒë√°nh trong 60 ph√∫t\n",
                                                                    "T·∫∑ng 1\n B√¥ng hoa", "T·∫∑ng\n10 B√¥ng",
                                                                    "T·∫∑ng\n99 B√¥ng", "ƒê·ªïi\nH·ªôp qu√†");
                                                            break;
                                                        default:
                                                            createOtherMenu(player, 5656,
                                                                    "|7|Npc n√†y kh√¥ng li√™n quan ƒë·∫øn S·ª± ki·ªán\nVui l√≤ng t√¨m Npc kh√°c !!!", "ƒê√≥ng");
                                                            break;
                                                    }
                                            }
                                        } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPEN_SUKIEN) {
                                            openMenuSuKien(player, this, tempId, select);
                                        }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.WHIS:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 48) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "ƒê√£ t√¨m ƒë·ªß nguy√™n li·ªáu cho t√¥i ch∆∞a?"
                                            + "\n T√¥i s·∫Ω gi√∫p c·∫≠u m·∫°nh l√™n kha kh√° ƒë·∫•y!"
                                            + "\n\b|7| ƒêi·ªÅu ki·ªán h·ªçc Tuy·ªát k·ªπ"
                                            + "\b|5| -Khi l·∫ßn ƒë·∫ßu h·ªçc skill c·∫ßn: x999 B√≠ ki·∫øp tuy·ªát k·ªπ v√† SM tr√™n 60 T·ª∑"
                                            + "\n -M·ªói m·ªôt c·∫•p y√™u c·∫ßu: x999 B√≠ ki·∫øp tuy·ªát k·ªπ v√† Th√¥ng th·∫°o ƒë·∫°t MAX 100%", "H·ªçc\ntuy·ªát kƒ©", "T·ª´ Ch·ªëi");
                                }
                                if (this.mapId == 154) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "|7|N√ÇNG C·∫§P ƒê·ªí THI√äN S·ª®\n|6| Mang cho ta C√¥ng th·ª©c + ƒê√° c·∫ßu v√≤ng v√† 999 M·∫£nh thi√™n s·ª© ta s·∫Ω ch·∫ø t·∫°o ƒë·ªì Thi√™n s·ª© cho ng∆∞∆°i"
                                            + "\nƒê·ªì Thi√™n s·ª© khi ch·∫ø t·∫°o s·∫Ω random ch·ªâ s·ªë 0-15%"
                                            + "\n|2|(Khi mang ƒë·ªß 5 m√≥n H·ªßy di·ªát ng∆∞∆°i h√£y theo Osin qua H√†nh tinh ng·ª•c t√π t√¨m ki·∫øm M·∫£nh thi√™n s·ª© v√† sƒÉn BOSS Thi√™n s·ª© ƒë·ªÉ thu th·∫≠p ƒê√° c·∫ßu v√≤ng)"
                                            + "\n|1| Ng∆∞∆°i c√≥ mu·ªën n√¢ng c·∫•p kh√¥ng?",
                                            "H∆∞·ªõng d·∫´n", "N√¢ng C·∫•p \nƒê·ªì Thi√™n S·ª©", "Shop\n Thi√™n s·ª©", "Ph√¢n r√£\nƒê·ªì Thi√™n s·ª©", "N√¢ng SKH Thi√™n s·ª©");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 154) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                NpcService.gI().createTutorial(player, this.avartar, ConstNpc.HUONG_DAN_DO_TS);
                                                break;
                                            case 1:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.NANG_CAP_DO_TS);
                                                break;
                                            case 2:
                                                ShopService.gI().openShopWhisThienSu(player,
                                                        ConstNpc.SHOP_WHIS_THIEN_SU, 0);
                                                break;
                                            case 3: //M·ªü ch·ªâ s·ªë b√¥ng tai
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.PHAN_RA_DO_TS);
                                                break;
                                            case 4:
                                                CombineServiceNew.gI().openTabCombine(player, CombineServiceNew.NANG_CAP_SKH_TS);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_START_COMBINE) {
                                        switch (player.combineNew.typeCombine) {
                                            case CombineServiceNew.NANG_CAP_DO_TS:
                                            case CombineServiceNew.NANG_CAP_SKH_TS:
                                            case CombineServiceNew.PHAN_RA_DO_TS:
                                                if (select == 0) {
                                                    CombineServiceNew.gI().startCombine(player);
                                                }
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_NANG_CAP_DO_TS) {
                                        if (select == 0) {
                                            CombineServiceNew.gI().startCombine(player);
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_NANG_DO_SKH_TS) {
                                        if (select == 0) {
                                            CombineServiceNew.gI().startCombine(player);
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_PHAN_RA_TS) {
                                        if (select == 0) {
                                            CombineServiceNew.gI().startCombine(player);
                                        }
                                    }
                                }

                                if (player.iDMark.isBaseMenu() && this.mapId == 48) {
                                    if (select == 0) {
                                        Message msg;
                                        try {
                                            Item sachTuyetki = null;
                                            try {
                                                sachTuyetki = InventoryService.gI().findItemBagByTemp(player, 1215);
                                            } catch (Exception e) {
                                            }
                                            if (player.gender == 0) {
                                                Skill curSkill = SkillUtil.getSkillbyId(player, Skill.SUPER_KAME);
                                                if (curSkill.point == 0) {
                                                    if (player.nPoint.power >= 60000000000L) {
                                                        if (sachTuyetki == null || sachTuyetki.quantity < 999) {
                                                            this.npcChat(player, "B·∫°n kh√¥ng ƒë·ªß 999 b√≠ k√≠p tuy·ªát kƒ©");
                                                            return;
                                                        }
                                                        if (sachTuyetki.quantity >= 999) {
                                                            InventoryService.gI().subQuantityItemsBag(player, sachTuyetki, 999);
                                                            InventoryService.gI().sendItemBags(player);
                                                            curSkill = SkillUtil.createSkill(Skill.SUPER_KAME, 1);
                                                            SkillUtil.setSkill(player, curSkill);
                                                            msg = Service.getInstance().messageSubCommand((byte) 23);
                                                            msg.writer().writeShort(curSkill.skillId);
                                                            player.sendMessage(msg);
                                                            msg.cleanup();
                                                        } else {
                                                            Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß b√≠ k√≠p tuy·ªát kƒ©");
                                                        }
                                                    } else {
                                                        Service.getInstance().sendThongBao(player, "Y√™u c·∫ßu s·ª©c m·∫°nh tr√™n 60 T·ª∑");
                                                    }
                                                } else if (curSkill.point > 0 && curSkill.point < 9) {
                                                    if (sachTuyetki == null || sachTuyetki.quantity < 999) {
                                                        this.npcChat(player, "B·∫°n kh√¥ng ƒë·ªß 999 b√≠ k√≠p tuy·ªát kƒ©");
                                                        return;
                                                    }
                                                    if (sachTuyetki.quantity >= 999 && curSkill.currLevel == 1000) {
                                                        InventoryService.gI().subQuantityItemsBag(player, sachTuyetki, 999);
                                                        InventoryService.gI().sendItemBags(player);
                                                        curSkill = SkillUtil.createSkill(Skill.SUPER_KAME, curSkill.point + 1);
                                                        SkillUtil.setSkill(player, curSkill);
                                                        msg = Service.getInstance().messageSubCommand((byte) 62);
                                                        msg.writer().writeShort(curSkill.skillId);
                                                        player.sendMessage(msg);
                                                        msg.cleanup();
                                                    } else {
                                                        Service.getInstance().sendThongBao(player, "Th√¥ng th·∫°o c·ªßa b·∫°n ch∆∞a ƒë·ªß 100%");
                                                    }
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Tuy·ªát kƒ© c·ªßa b·∫°n ƒë√£ ƒë·∫°t c·∫•p t·ªëi ƒëa");
                                                }
                                            }
                                            if (player.gender == 1) {
                                                Skill curSkill = SkillUtil.getSkillbyId(player, Skill.MA_PHONG_BA);
                                                if (curSkill.point == 0) {
                                                    if (player.nPoint.power >= 60000000000L) {
                                                        if (sachTuyetki == null || sachTuyetki.quantity < 999) {
                                                            this.npcChat(player, "B·∫°n kh√¥ng ƒë·ªß 999 b√≠ k√≠p tuy·ªát kƒ©");
                                                            return;
                                                        }
                                                        if (sachTuyetki.quantity >= 999) {
                                                            InventoryService.gI().subQuantityItemsBag(player, sachTuyetki, 999);
                                                            InventoryService.gI().sendItemBags(player);
                                                            curSkill = SkillUtil.createSkill(Skill.MA_PHONG_BA, 1);
                                                            SkillUtil.setSkill(player, curSkill);
                                                            msg = Service.getInstance().messageSubCommand((byte) 23);
                                                            msg.writer().writeShort(curSkill.skillId);
                                                            player.sendMessage(msg);
                                                            msg.cleanup();
                                                        } else {
                                                            Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß b√≠ k√≠p tuy·ªát kƒ©");
                                                        }
                                                    } else {
                                                        Service.getInstance().sendThongBao(player, "Y√™u c·∫ßu s·ª©c m·∫°nh tr√™n 60 T·ª∑");
                                                    }
                                                } else if (curSkill.point > 0 && curSkill.point < 9) {
                                                    if (sachTuyetki == null || sachTuyetki.quantity < 999) {
                                                        this.npcChat(player, "B·∫°n kh√¥ng ƒë·ªß 999 b√≠ k√≠p tuy·ªát kƒ©");
                                                        return;
                                                    }
                                                    if (sachTuyetki.quantity >= 999 && curSkill.currLevel == 1000) {
                                                        InventoryService.gI().subQuantityItemsBag(player, sachTuyetki, 999);
                                                        InventoryService.gI().sendItemBags(player);
                                                        curSkill = SkillUtil.createSkill(Skill.MA_PHONG_BA, curSkill.point + 1);
                                                        SkillUtil.setSkill(player, curSkill);
                                                        msg = Service.getInstance().messageSubCommand((byte) 62);
                                                        msg.writer().writeShort(curSkill.skillId);
                                                        player.sendMessage(msg);
                                                        msg.cleanup();
                                                    } else {
                                                        Service.getInstance().sendThongBao(player, "Th√¥ng th·∫°o c·ªßa b·∫°n ch∆∞a ƒë·ªß 100%");
                                                    }
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Tuy·ªát kƒ© c·ªßa b·∫°n ƒë√£ ƒë·∫°t c·∫•p t·ªëi ƒëa");
                                                }
                                            }
                                            if (player.gender == 2) {
                                                Skill curSkill = SkillUtil.getSkillbyId(player, Skill.LIEN_HOAN_CHUONG);
                                                if (curSkill.point == 0) {
                                                    if (player.nPoint.power >= 60000000000L) {
                                                        if (sachTuyetki == null || sachTuyetki.quantity < 999) {
                                                            this.npcChat(player, "B·∫°n kh√¥ng ƒë·ªß 999 b√≠ k√≠p tuy·ªát kƒ©");
                                                            return;
                                                        }
                                                        if (sachTuyetki.quantity >= 999) {
                                                            InventoryService.gI().subQuantityItemsBag(player, sachTuyetki, 999);
                                                            InventoryService.gI().sendItemBags(player);
                                                            curSkill = SkillUtil.createSkill(Skill.LIEN_HOAN_CHUONG, 1);
                                                            SkillUtil.setSkill(player, curSkill);
                                                            msg = Service.getInstance().messageSubCommand((byte) 23);
                                                            msg.writer().writeShort(curSkill.skillId);
                                                            player.sendMessage(msg);
                                                            msg.cleanup();
                                                        } else {
                                                            Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß b√≠ k√≠p tuy·ªát kƒ©");
                                                        }
                                                    } else {
                                                        Service.getInstance().sendThongBao(player, "Y√™u c·∫ßu s·ª©c m·∫°nh tr√™n 60 T·ª∑");
                                                    }
                                                } else if (curSkill.point > 0 && curSkill.point < 9) {
                                                    if (sachTuyetki == null || sachTuyetki.quantity < 999) {
                                                        this.npcChat(player, "B·∫°n kh√¥ng ƒë·ªß 999 b√≠ k√≠p tuy·ªát kƒ©");
                                                        return;
                                                    }
                                                    if (sachTuyetki.quantity >= 999 && curSkill.currLevel == 1000) {
                                                        InventoryService.gI().subQuantityItemsBag(player, sachTuyetki, 999);
                                                        InventoryService.gI().sendItemBags(player);
                                                        curSkill = SkillUtil.createSkill(Skill.LIEN_HOAN_CHUONG, curSkill.point + 1);
                                                        SkillUtil.setSkill(player, curSkill);
                                                        msg = Service.getInstance().messageSubCommand((byte) 62);
                                                        msg.writer().writeShort(curSkill.skillId);
                                                        player.sendMessage(msg);
                                                        msg.cleanup();
                                                    } else {
                                                        Service.getInstance().sendThongBao(player, "Th√¥ng th·∫°o c·ªßa b·∫°n ch∆∞a ƒë·ªß 100%");
                                                    }
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Tuy·ªát kƒ© c·ªßa b·∫°n ƒë√£ ƒë·∫°t c·∫•p t·ªëi ƒëa");
                                                }
                                            }
                                        } catch (Exception ex) {
                                            ex.printStackTrace();
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.BO_MONG:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 47 || this.mapId == 84) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU, "Xin ch√†o, c·∫≠u mu·ªën t√¥i gi√∫p g√¨?",
                                            "Nhi·ªám v·ª•\nh√†ng ng√†y", "M√£ qu√† t·∫∑ng", "Nh·∫≠n ng·ªçc\nmi·ªÖn ph√≠", "T·ª´ ch·ªëi");
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 47 || this.mapId == 84) {
                                    if (player.iDMark.isBaseMenu()) {
                                        switch (select) {
                                            case 0:
                                                if (player.playerTask.sideTask.template != null) {
                                                    String npcSay = "Nhi·ªám v·ª• hi·ªán t·∫°i: "
                                                            + player.playerTask.sideTask.getName() + " ("
                                                            + player.playerTask.sideTask.getLevel() + ")"
                                                            + "\nHi·ªán t·∫°i ƒë√£ ho√†n th√†nh: "
                                                            + player.playerTask.sideTask.count + "/"
                                                            + player.playerTask.sideTask.maxCount + " ("
                                                            + player.playerTask.sideTask.getPercentProcess()
                                                            + "%)\nS·ªë nhi·ªám v·ª• c√≤n l·∫°i trong ng√†y: "
                                                            + player.playerTask.sideTask.leftTask + "/"
                                                            + ConstTask.MAX_SIDE_TASK;
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPTION_PAY_SIDE_TASK,
                                                            npcSay, "Tr·∫£ nhi·ªám\nv·ª•", "H·ªßy nhi·ªám\nv·ª•");
                                                } else {
                                                    this.createOtherMenu(player, ConstNpc.MENU_OPTION_LEVEL_SIDE_TASK,
                                                            "|2|Khi ho√†n th√†nh c√°c nhi·ªám v·ª• ng√†y nh·∫≠n ƒë∆∞·ª£c c√°c ph·∫ßn th∆∞·ªüng sau:"
                                                            + "\n|4|-D·ªÖ : 5TV kh√≥a + 1000 Hng·ªçc"
                                                            + "\n-Bth∆∞·ªùng : 7TV kh√≥a + 2000 Hng·ªçc"
                                                            + "\n-Kh√≥ : 9TV kh√≥a + 3000 Hng·ªçc"
                                                            + "\n-Si√™u kh√≥ : 10TV kh√≥a + 4000 Hng·ªçc"
                                                            + "\n|1|T√¥i c√≥ v√†i nhi·ªám v·ª• theo c·∫•p b·∫≠c, s·ª©c c·∫≠u c√≥ th·ªÉ l√†m ƒë∆∞·ª£c c√°i n√†o?",
                                                            "D·ªÖ", "B√¨nh th∆∞·ªùng", "Kh√≥", "Si√™u kh√≥", "T·ª´ ch·ªëi");
                                                }
                                                break;

                                            case 1:
                                                Input.gI().createFormGiftCode(player);
                                                break;
                                            case 2:
                                                TaskService.gI().checkDoneAchivements(player);
                                                TaskService.gI().sendAchivement(player);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPTION_LEVEL_SIDE_TASK) {
                                        switch (select) {
                                            case 0:
                                            case 1:
                                            case 2:
                                            case 3:
                                                TaskService.gI().changeSideTask(player, (byte) select);
                                                break;
                                        }
                                    } else if (player.iDMark.getIndexMenu() == ConstNpc.MENU_OPTION_PAY_SIDE_TASK) {
                                        switch (select) {
                                            case 0:
                                                TaskService.gI().paySideTask(player);
                                                break;
                                            case 1:
                                                TaskService.gI().removeSideTask(player);
                                                break;
                                        }
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.GOKU_SSJ:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 80) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Xin ch√†o, t√¥i c√≥ th·ªÉ gi√∫p g√¨ cho c·∫≠u?", "T·ªõi h√†nh tinh\nYardart",
                                            "T·ª´ ch·ªëi");
                                } else if (this.mapId == 131) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Xin ch√†o, t√¥i c√≥ th·ªÉ gi√∫p g√¨ cho c·∫≠u?", "Quay v·ªÅ", "T·ª´ ch·ªëi");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.BASE_MENU:
                                        if (this.mapId == 80) {
                                            // if (select == 0) {
                                            // if (TaskService.gI().getIdTask(player) >= ConstTask.TASK_24_0) {
                                            // ChangeMapService.gI().changeMapBySpaceShip(player, 160, -1, 168);
                                            // } else {
                                            // this.npcChat(player, "Xin l·ªói, t√¥i ch∆∞a th·ªÉ ƒë∆∞a c·∫≠u t·ªõi n∆°i ƒë√≥ l√∫c
                                            // n√†y...");
                                            // }
                                            // } else
                                            if (select == 0) {
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 131, -1, 940);
                                            }
                                        } else if (this.mapId == 131) {
                                            if (select == 0) {
                                                ChangeMapService.gI().changeMapBySpaceShip(player, 80, -1, 870);
                                            }
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.GOKU_SSJ_:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 133) {
                                    Item biKiep = InventoryService.gI().findItem(player.inventory.itemsBag, 590);
                                    int soLuong = 0;
                                    if (biKiep != null) {
                                        soLuong = biKiep.quantity;
                                    }
                                    if (soLuong >= 10000) {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU, "B·∫°n ƒëang c√≥ " + soLuong
                                                + " b√≠ ki·∫øp.\n"
                                                + "H√£y ki·∫øm ƒë·ªß 10000 b√≠ ki·∫øp t√¥i s·∫Ω d·∫°y b·∫°n c√°ch d·ªãch chuy·ªÉn t·ª©c th·ªùi c·ªßa ng∆∞·ªùi Yardart",
                                                "H·ªçc d·ªãch\nchuy·ªÉn", "ƒê√≥ng");
                                    } else {
                                        this.createOtherMenu(player, ConstNpc.BASE_MENU, "B·∫°n ƒëang c√≥ " + soLuong
                                                + " b√≠ ki·∫øp.\n"
                                                + "H√£y ki·∫øm ƒë·ªß 10000 b√≠ ki·∫øp t√¥i s·∫Ω d·∫°y b·∫°n c√°ch d·ªãch chuy·ªÉn t·ª©c th·ªùi c·ªßa ng∆∞·ªùi Yardart",
                                                "ƒê√≥ng");
                                    }
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == 133) {
                                    Item biKiep = InventoryService.gI().findItem(player.inventory.itemsBag, 590);
                                    int soLuong = 0;
                                    if (biKiep != null) {
                                        soLuong = biKiep.quantity;
                                    }
                                    if (soLuong >= 10000 && InventoryService.gI().getCountEmptyBag(player) > 0) {
                                        Item yardart = ItemService.gI().createNewItem((short) (player.gender + 592));
                                        yardart.itemOptions.add(new ItemOption(47, 400));
                                        yardart.itemOptions.add(new ItemOption(108, 10));
                                        InventoryService.gI().addItemBag(player, yardart, 0);
                                        InventoryService.gI().subQuantityItemsBag(player, biKiep, 10000);
                                        InventoryService.gI().sendItemBags(player);
                                        Service.getInstance().sendThongBao(player,
                                                "B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c trang ph·ª•c t·ªôc Yardart");
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.GHI_DANH:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        String[] menuselect = new String[]{};

                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                if (this.mapId == ConstMap.DAI_HOI_VO_THUAT) {
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi ƒë·∫°i h·ªôi v√µ thu·∫≠t", "ƒê·∫°i H·ªôi\nV√µ Thu·∫≠t\nL·∫ßn Th·ª©\n23", "Gi·∫£i si√™u h·∫°ng");
                                } else if (this.mapId == ConstMap.DAI_HOI_VO_THUAT_129) {
                                    int goldchallenge = player.goldChallenge;
                                    if (player.levelWoodChest == 0) {
                                        menuselect = new String[]{
                                            "Thi ƒë·∫•u\n" + Util.numberToMoney(goldchallenge) + " v√†ng",
                                            "V·ªÅ\nƒê·∫°i H·ªôi\nV√µ Thu·∫≠t"};
                                    } else {
                                        menuselect = new String[]{
                                            "Thi ƒë·∫•u\n" + Util.numberToMoney(goldchallenge) + " v√†ng",
                                            "Nh·∫≠n th∆∞·ªüng\nR∆∞∆°ng c·∫•p\n" + player.levelWoodChest,
                                            "V·ªÅ\nƒê·∫°i H·ªôi\nV√µ Thu·∫≠t"};
                                    }
                                    this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                            "ƒê·∫°i h·ªôi v√µ thu·∫≠t l·∫ßn th·ª© 23\nDi·ªÖn ra b·∫•t k·ªÉ ng√†y ƒë√™m,ng√†y ngh·ªâ ng√†y l·ªÖ\nPh·∫ßn th∆∞·ªüng v√¥ c√πng qu√Ω gi√°\nNhanh ch√≥ng tham gia n√†o",
                                            menuselect, "T·ª´ ch·ªëi");
                                } else {
                                    super.openBaseMenu(player);
                                }
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.BASE_MENU:
                                        if (this.mapId == ConstMap.DAI_HOI_VO_THUAT) {
                                            switch (select) {
                                                case 0:
                                                    ChangeMapService.gI().changeMapNonSpaceship(player,
                                                            ConstMap.DAI_HOI_VO_THUAT_129, player.location.x, 360);
                                                    break;
                                                case 1:
                                                    ChangeMapService.gI().changeMapNonSpaceship(player, 113, player.location.x, 360);
                                                    break;
                                            }
                                        } else if (this.mapId == ConstMap.DAI_HOI_VO_THUAT_129) {
                                            int goldchallenge = player.goldChallenge;
                                            if (player.levelWoodChest == 0) {
                                                switch (select) {
                                                    case 0:
                                                        if (InventoryService.gI().finditemWoodChest(player)) {
                                                            if (player.inventory.getGold() >= goldchallenge) {
                                                                MartialCongressService.gI().startChallenge(player);
                                                                player.inventory.subGold(goldchallenge);
                                                                PlayerService.gI().sendInfoHpMpMoney(player);
                                                                player.goldChallenge += 2000000;
                                                            } else {
                                                                Service.getInstance().sendThongBao(player,
                                                                        "Kh√¥ng ƒë·ªß v√†ng, c√≤n thi·∫øu "
                                                                        + Util.numberToMoney(goldchallenge
                                                                                - player.inventory.gold)
                                                                        + " v√†ng");
                                                            }
                                                        } else {
                                                            Service.getInstance().sendThongBao(player,
                                                                    "H√£y m·ªü r∆∞∆°ng b√°u v·∫≠t tr∆∞·ªõc");
                                                        }
                                                        break;
                                                    case 1:
                                                        ChangeMapService.gI().changeMapNonSpaceship(player,
                                                                ConstMap.DAI_HOI_VO_THUAT, player.location.x, 336);
                                                        break;
                                                }
                                            } else {
                                                switch (select) {
                                                    case 0:
                                                        if (InventoryService.gI().finditemWoodChest(player)) {
                                                            if (player.inventory.getGold() >= goldchallenge) {
                                                                MartialCongressService.gI().startChallenge(player);
                                                                player.inventory.subGold(goldchallenge);
                                                                PlayerService.gI().sendInfoHpMpMoney(player);
                                                                player.goldChallenge += 2000000;
                                                            } else {
                                                                Service.getInstance().sendThongBao(player,
                                                                        "Kh√¥ng ƒë·ªß v√†ng, c√≤n thi·∫øu "
                                                                        + Util.numberToMoney(goldchallenge
                                                                                - player.inventory.gold)
                                                                        + " v√†ng");
                                                            }
                                                        } else {
                                                            Service.getInstance().sendThongBao(player,
                                                                    "H√£y m·ªü r∆∞∆°ng b√°u v·∫≠t tr∆∞·ªõc");
                                                        }
                                                        break;
                                                    case 1:
                                                        if (!player.receivedWoodChest) {
                                                            if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                                                                Item it = ItemService.gI()
                                                                        .createNewItem((short) ConstItem.RUONG_GO);
                                                                it.itemOptions
                                                                        .add(new ItemOption(72, player.levelWoodChest));
                                                                it.itemOptions.add(new ItemOption(30, 0));
                                                                it.createTime = System.currentTimeMillis();
                                                                InventoryService.gI().addItemBag(player, it, 0);
                                                                InventoryService.gI().sendItemBags(player);

                                                                player.receivedWoodChest = true;
                                                                player.levelWoodChest = 0;
                                                                Service.getInstance().sendThongBao(player,
                                                                        "B·∫°n nh·∫≠n ƒë∆∞·ª£c r∆∞∆°ng g·ªó");
                                                            } else {
                                                                this.npcChat(player, "H√†nh trang ƒë√£ ƒë·∫ßy");
                                                            }
                                                        } else {
                                                            Service.getInstance().sendThongBao(player,
                                                                    "M·ªói ng√†y ch·ªâ c√≥ th·ªÉ nh·∫≠n r∆∞∆°ng b√°u 1 l·∫ßn");
                                                        }
                                                        break;
                                                    case 2:
                                                        ChangeMapService.gI().changeMapNonSpaceship(player,
                                                                ConstMap.DAI_HOI_VO_THUAT, player.location.x, 336);
                                                        break;
                                                }
                                            }
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                // bunma t·∫øt 2025
                case ConstNpc.ANDROID_AODAI:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
//                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
//                                        "Xin ch√†o " + player.name + "\nCh·ª©c nƒÉng ƒëang ƒë∆∞·ª£c ADMIN c·∫≠p nh·∫≠t",
//                                        "OK\nAD ƒê·∫∏P TRAI");
                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "Xin ch√†o " + player.name + "\nT√¥i c√≥ th·ªÉ gi√∫p g√¨ cho b·∫°n"
                                        + "\n|5|-ƒê·ªïi Capsule B·∫°c : C·∫ßn 99 ch·ªØ V·∫°n S·ª± Nh∆∞ √ù 2024 v√† 2 Thi·ªáp ch√∫c t·∫øt"
                                        + "\n-ƒê·ªïi T√∫i v√†ng :  C·∫ßn 50 ch·ªØ V·∫°n S·ª± Nh∆∞ √ù 2024 v√† 1 Thi·ªáp ch√∫c t·∫øt"
                                        + "\n-Danh hi·ªáu ƒê·∫°i th·∫ßn 1 Ng√†y (Ch·ªâ s·ªë ng·∫´u nhi√™n) :  C·∫ßn 99 ch·ªØ V·∫°n S·ª± Nh∆∞ √ù 2024 v√† 10 Thi·ªáp ch√∫c t·∫øt"
                                        + "\n-Danh hi·ªáu ƒê·∫°i th·∫ßn Vƒ©nh vi·ªÖn (Ch·ªâ s·ªë Max):  C·∫ßn 99 ch·ªØ V·∫°n S·ª± Nh∆∞ √ù 2024 v√† 99 Thi·ªáp ch√∫c t·∫øt + 2000 Th·ªèi v√†ng",
                                        "Capsule 2024", "T√∫i v√†ng", "Danh hi·ªáu 1 Ng√†y", "Danh hi·ªáu Vƒ©nh vi·ªÖn");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.BASE_MENU:
                                        switch (select) {
                                            case 0:
                                                Item chuvan = InventoryService.gI().findItem(player,
                                                        ConstItem.CHU_VAN, 99);
                                                Item chusu = InventoryService.gI().findItem(player, ConstItem.CHU_SU,
                                                        99);
                                                Item chunhu = InventoryService.gI().findItem(player, ConstItem.CHU_NHU,
                                                        99);
                                                Item chuy = InventoryService.gI().findItem(player,
                                                        ConstItem.CHU_Y, 99);
//                                                Item chu2024 = InventoryService.gI().findItem(player,
//                                                        ConstItem.CHU_2024, 99);
                                                Item thiep = InventoryService.gI().findItem(player,
                                                        ConstItem.THIEP_CHUC_TET_2024, 2);
                                                if (chuvan != null && chusu != null && chunhu != null
                                                        && chuy != null && thiep != null) {
                                                    InventoryService.gI().subQuantityItemsBag(player, chuvan, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, chusu, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, chunhu, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, chuy, 99);
//                                                    InventoryService.gI().subQuantityItemsBag(player, chu2024, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, thiep, 2);

                                                    Item capsule2024 = ItemService.gI().createNewItem((short) ConstItem.CAPSULE_BAC);
                                                    capsule2024.itemOptions.add(new ItemOption(74, 0));
                                                    InventoryService.gI().addItemBag(player, capsule2024, 0);
                                                    InventoryService.gI().sendItemBags(player);
                                                    Service.getInstance().sendThongBao(player,
                                                            "B·∫°n nh·∫≠n ƒë∆∞·ª£c " + capsule2024.template.name);
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß nguy√™n li·ªáu");
                                                }
                                                break;
                                            case 1:
                                                Item chuvana = InventoryService.gI().findItem(player,
                                                        ConstItem.CHU_VAN, 50);
                                                Item chusua = InventoryService.gI().findItem(player, ConstItem.CHU_SU,
                                                        50);
                                                Item chunhua = InventoryService.gI().findItem(player, ConstItem.CHU_NHU,
                                                        50);
                                                Item chuya = InventoryService.gI().findItem(player,
                                                        ConstItem.CHU_Y, 50);
//                                                Item chu2024a = InventoryService.gI().findItem(player,
//                                                        ConstItem.CHU_2024, 50);
                                                Item thiepa = InventoryService.gI().findItem(player,
                                                        ConstItem.THIEP_CHUC_TET_2024, 1);
                                                if (chuvana != null && chusua != null && chunhua != null
                                                        && chuya != null && thiepa != null) {
                                                    InventoryService.gI().subQuantityItemsBag(player, chuvana, 50);
                                                    InventoryService.gI().subQuantityItemsBag(player, chusua, 50);
                                                    InventoryService.gI().subQuantityItemsBag(player, chunhua, 50);
                                                    InventoryService.gI().subQuantityItemsBag(player, chuya, 50);
//                                                    InventoryService.gI().subQuantityItemsBag(player, chu2024a, 50);
                                                    InventoryService.gI().subQuantityItemsBag(player, thiepa, 1);

                                                    Item tuivang = ItemService.gI().createNewItem((short) ConstItem.TUI_VANG);
                                                    tuivang.itemOptions.add(new ItemOption(74, 0));
                                                    InventoryService.gI().addItemBag(player, tuivang, 0);
                                                    InventoryService.gI().sendItemBags(player);
                                                    Service.getInstance().sendThongBao(player,
                                                            "B·∫°n nh·∫≠n ƒë∆∞·ª£c " + tuivang.template.name);
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß nguy√™n li·ªáu");
                                                }
                                                break;
                                            case 2:
                                                Item chuvanb = InventoryService.gI().findItem(player,
                                                        ConstItem.CHU_VAN, 99);
                                                Item chusub = InventoryService.gI().findItem(player, ConstItem.CHU_SU,
                                                        99);
                                                Item chunhub = InventoryService.gI().findItem(player, ConstItem.CHU_NHU,
                                                        99);
                                                Item chuyb = InventoryService.gI().findItem(player,
                                                        ConstItem.CHU_Y, 99);
//                                                Item chu2024b = InventoryService.gI().findItem(player,
//                                                        ConstItem.CHU_2024, 99);
                                                Item thiepb = InventoryService.gI().findItem(player,
                                                        ConstItem.THIEP_CHUC_TET_2024, 10);
                                                if (chuvanb != null && chusub != null && chunhub != null
                                                        && chuyb != null && thiepb != null) {
                                                    InventoryService.gI().subQuantityItemsBag(player, chuvanb, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, chusub, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, chunhub, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, chuyb, 99);
//                                                    InventoryService.gI().subQuantityItemsBag(player, chu2024b, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, thiepb, 10);

                                                    Item thientu = ItemService.gI().createNewItem((short) 1325);
                                                    thientu.itemOptions.add(new ItemOption(50, Util.nextInt(20, 30)));
                                                    thientu.itemOptions.add(new ItemOption(77, Util.nextInt(20, 40)));
                                                    thientu.itemOptions.add(new ItemOption(103, Util.nextInt(20, 40)));
                                                    thientu.itemOptions.add(new ItemOption(14, Util.nextInt(5, 15)));
                                                    thientu.itemOptions.add(new ItemOption(101, Util.nextInt(200, 1000)));
                                                    thientu.itemOptions.add(new ItemOption(30, 1));
                                                    thientu.itemOptions.add(new ItemOption(93, 1));
                                                    InventoryService.gI().addItemBag(player, thientu, 0);
                                                    InventoryService.gI().sendItemBags(player);
                                                    Service.getInstance().sendThongBao(player,
                                                            "B·∫°n nh·∫≠n ƒë∆∞·ª£c " + thientu.template.name);
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß nguy√™n li·ªáu");
                                                }
                                                break;
                                            case 3:
                                                Item chuvanc = InventoryService.gI().findItem(player,
                                                        ConstItem.CHU_VAN, 99);
                                                Item chusuc = InventoryService.gI().findItem(player, ConstItem.CHU_SU,
                                                        99);
                                                Item chunhuc = InventoryService.gI().findItem(player, ConstItem.CHU_NHU,
                                                        99);
                                                Item chuyc = InventoryService.gI().findItem(player,
                                                        ConstItem.CHU_Y, 99);
//                                                Item chu2024c = InventoryService.gI().findItem(player,
//                                                        ConstItem.CHU_2024, 99);
                                                Item thiepc = InventoryService.gI().findItem(player,
                                                        ConstItem.THIEP_CHUC_TET_2024, 99);
                                                Item thoivang = InventoryService.gI().findItem(player,
                                                        ConstItem.THOI_VANG, 2000);
                                                if (chuvanc != null && chusuc != null && chunhuc != null
                                                        && chuyc != null && thiepc != null) {
                                                    InventoryService.gI().subQuantityItemsBag(player, chuvanc, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, chusuc, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, chunhuc, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, chuyc, 99);
//                                                    InventoryService.gI().subQuantityItemsBag(player, chu2024c, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, thiepc, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, thoivang, 2000);

                                                    Item thientuu = ItemService.gI().createNewItem((short) 1325);
                                                    thientuu.itemOptions.add(new ItemOption(50, 30));
                                                    thientuu.itemOptions.add(new ItemOption(77, 40));
                                                    thientuu.itemOptions.add(new ItemOption(103, 40));
                                                    thientuu.itemOptions.add(new ItemOption(14, 15));
                                                    thientuu.itemOptions.add(new ItemOption(101, 1000));
                                                    thientuu.itemOptions.add(new ItemOption(30, 1));
                                                    InventoryService.gI().addItemBag(player, thientuu, 0);
                                                    InventoryService.gI().sendItemBags(player);
                                                    Service.getInstance().sendThongBao(player,
                                                            "B·∫°n nh·∫≠n ƒë∆∞·ª£c " + thientuu.template.name);
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß nguy√™n li·ªáu");
                                                }
                                                break;
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                // noi banh
                case ConstNpc.NOI_BANH:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "Xin ch√†o " + player.name + "\nT√¥i l√† n·ªìi n·∫•u b√°nh\nT√¥i c√≥ th·ªÉ gi√∫p g√¨ cho b·∫°n"
                                        + "\n|5|-L√†m B√°nh T√©t: (99)Th·ªãt ba ch·ªâ, G·∫°o n·∫øp, ƒê·ªó xanh, L√° chu·ªëi"
                                        + "\n-L√†m B√°nh Ch∆∞ng: (99)Th·ªãt Heo, G·∫°o n·∫øp, ƒê·ªó xanh, L√° dong"
                                        + "\n-N·∫•u B√°nh T√©t: (1)B√°nh t√©t, Ph·ª• gia t·∫°o m√†u, Gia v·ªã t·ªïng h·ªôp"
                                        + "\n-N·∫•u B√°nh Ch∆∞ng: (1)B√°nh ch∆∞ng, Ph·ª• gia t·∫°o m√†u, Gia v·ªã t·ªïng h·ªôp"
                                        + "\n-ƒê·ªïi H·ªôp qu√†: (5)B√°nh ch∆∞ng Ch√≠n, B√°nh t√©t Ch√≠n"
                                        + "\n|3|(L√†m b√°nh Th√†nh c√¥ng s·∫Ω nh·∫≠n 1 ƒêi·ªÉm S·ª± ki·ªán)",
                                        "L√†m\nB√°nh T√©t", "L√†m\nB√°nh Ch∆∞ng", getMenuLamBanh(player, 0),
                                        getMenuLamBanh(player, 1), "ƒê·ªïi H·ªôp\nQu√† T·∫øt");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.BASE_MENU:
                                        switch (select) {
                                            case 0:
                                                Item thitBaChi = InventoryService.gI().findItem(player,
                                                        ConstItem.THIT_BA_CHI, 99);
                                                Item gaoNep = InventoryService.gI().findItem(player, ConstItem.GAO_NEP,
                                                        99);
                                                Item doXanh = InventoryService.gI().findItem(player, ConstItem.DO_XANH,
                                                        99);
                                                Item laChuoi = InventoryService.gI().findItem(player,
                                                        ConstItem.LA_CHUOI, 99);
                                                if (thitBaChi != null && gaoNep != null && doXanh != null
                                                        && laChuoi != null) {
                                                    InventoryService.gI().subQuantityItemsBag(player, thitBaChi, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, gaoNep, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, doXanh, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, laChuoi, 99);
                                                    Item banhtet = ItemService.gI()
                                                            .createNewItem((short) ConstItem.BANH_TET_2023);
                                                    banhtet.itemOptions.add(new ItemOption(74, 0));
                                                    InventoryService.gI().addItemBag(player, banhtet, 0);
                                                    InventoryService.gI().sendItemBags(player);
                                                    Service.getInstance().sendThongBao(player,
                                                            "B·∫°n nh·∫≠n ƒë∆∞·ª£c B√°nh T√©t");
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß nguy√™n li·ªáu");
                                                }
                                                break;
                                            case 1:
                                                Item thitHeo1 = InventoryService.gI().findItem(player,
                                                        ConstItem.THIT_HEO_2023, 99);
                                                Item gaoNep1 = InventoryService.gI().findItem(player, ConstItem.GAO_NEP,
                                                        99);
                                                Item doXanh1 = InventoryService.gI().findItem(player, ConstItem.DO_XANH,
                                                        99);
                                                Item laDong1 = InventoryService.gI().findItem(player,
                                                        ConstItem.LA_DONG_2023, 99);
                                                if (thitHeo1 != null && gaoNep1 != null && doXanh1 != null
                                                        && laDong1 != null) {
                                                    InventoryService.gI().subQuantityItemsBag(player, thitHeo1, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, gaoNep1, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, doXanh1, 99);
                                                    InventoryService.gI().subQuantityItemsBag(player, laDong1, 99);
                                                    Item banhChung = ItemService.gI()
                                                            .createNewItem((short) ConstItem.BANH_CHUNG_2023);
                                                    banhChung.itemOptions.add(new ItemOption(74, 0));
                                                    InventoryService.gI().addItemBag(player, banhChung, 0);
                                                    InventoryService.gI().sendItemBags(player);
                                                    Service.getInstance().sendThongBao(player,
                                                            "B·∫°n nh·∫≠n ƒë∆∞·ª£c B√°nh Ch∆∞ng");
                                                } else {
                                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß nguy√™n li·ªáu");
                                                }
                                                break;
                                            case 2:
                                                if (!player.event.isCookingTetCake()) {
                                                    Item banhTet2 = InventoryService.gI().findItem(player,
                                                            ConstItem.BANH_TET_2023, 1);
                                                    Item phuGiaTaoMau2 = InventoryService.gI().findItem(player,
                                                            ConstItem.PHU_GIA_TAO_MAU, 1);
                                                    Item giaVi2 = InventoryService.gI().findItem(player,
                                                            ConstItem.GIA_VI_TONG_HOP, 1);

                                                    if (banhTet2 != null && phuGiaTaoMau2 != null && giaVi2 != null) {
                                                        InventoryService.gI().subQuantityItemsBag(player, banhTet2, 1);
                                                        InventoryService.gI().subQuantityItemsBag(player, phuGiaTaoMau2,
                                                                1);
                                                        InventoryService.gI().subQuantityItemsBag(player, giaVi2, 1);
                                                        InventoryService.gI().sendItemBags(player);
                                                        player.event.setTimeCookTetCake(300);
                                                        player.event.setCookingTetCake(true);
                                                        Service.getInstance().sendThongBao(player,
                                                                "B·∫Øt ƒë·∫ßu n·∫•u b√°nh,th·ªùi gian n·∫•u b√°nh l√† 5 ph√∫t");
                                                    } else {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Kh√¥ng ƒë·ªß nguy√™n li·ªáu");
                                                    }
                                                } else if (player.event.isCookingTetCake()
                                                        && player.event.getTimeCookTetCake() == 0) {
                                                    Item cake = ItemService.gI()
                                                            .createNewItem((short) ConstItem.BANH_TET_CHIN, 1);
                                                    cake.itemOptions.add(new ItemOption(77, 20));
                                                    cake.itemOptions.add(new ItemOption(103, 20));
                                                    cake.itemOptions.add(new ItemOption(74, 0));
                                                    InventoryService.gI().addItemBag(player, cake, 0);
                                                    InventoryService.gI().sendItemBags(player);
                                                    player.event.setCookingTetCake(false);
                                                    player.event.addEventPoint(1);
                                                    Service.getInstance().sendThongBao(player,
                                                            "B·∫°n nh·∫≠n ƒë∆∞·ª£c B√°nh T√©t (ƒë√£ ch√≠nh) v√† 1 ƒëi·ªÉm s·ª± ki·ªán");
                                                }
                                                break;
                                            case 3:
                                                if (!player.event.isCookingChungCake()) {
                                                    Item banhChung3 = InventoryService.gI().findItem(player,
                                                            ConstItem.BANH_CHUNG_2023, 1);
                                                    Item phuGiaTaoMau3 = InventoryService.gI().findItem(player,
                                                            ConstItem.PHU_GIA_TAO_MAU, 1);
                                                    Item giaVi3 = InventoryService.gI().findItem(player,
                                                            ConstItem.GIA_VI_TONG_HOP, 1);

                                                    if (banhChung3 != null && phuGiaTaoMau3 != null && giaVi3 != null) {
                                                        InventoryService.gI().subQuantityItemsBag(player, banhChung3,
                                                                1);
                                                        InventoryService.gI().subQuantityItemsBag(player, phuGiaTaoMau3,
                                                                1);
                                                        InventoryService.gI().subQuantityItemsBag(player, giaVi3, 1);
                                                        InventoryService.gI().sendItemBags(player);
                                                        player.event.setTimeCookChungCake(300);
                                                        player.event.setCookingChungCake(true);
                                                        Service.getInstance().sendThongBao(player,
                                                                "B·∫Øt ƒë·∫ßu n·∫•u b√°nh,th·ªùi gian n·∫•u b√°nh l√† 5 ph√∫t");
                                                    } else {
                                                        Service.getInstance().sendThongBao(player,
                                                                "Kh√¥ng ƒë·ªß nguy√™n li·ªáu");
                                                    }
                                                } else if (player.event.isCookingChungCake()
                                                        && player.event.getTimeCookChungCake() == 0) {
                                                    Item cake = ItemService.gI()
                                                            .createNewItem((short) ConstItem.BANH_CHUNG_CHIN, 1);
                                                    cake.itemOptions.add(new ItemOption(50, 20));
                                                    cake.itemOptions.add(new ItemOption(5, 15));
                                                    cake.itemOptions.add(new ItemOption(74, 0));
                                                    InventoryService.gI().addItemBag(player, cake, 0);
                                                    InventoryService.gI().sendItemBags(player);
                                                    player.event.setCookingChungCake(false);
                                                    player.event.addEventPoint(1);
                                                    Service.getInstance().sendThongBao(player,
                                                            "B·∫°n nh·∫≠n ƒë∆∞·ª£c B√°nh Ch∆∞ng (ƒë√£ ch√≠n) v√† 1 ƒëi·ªÉm s·ª± ki·ªán");
                                                }
                                                break;
                                            case 4:
                                                Item tetCake = InventoryService.gI().findItem(player,
                                                        ConstItem.BANH_TET_CHIN, 5);
                                                Item chungCake = InventoryService.gI().findItem(player,
                                                        ConstItem.BANH_CHUNG_CHIN, 5);
                                                if (chungCake != null && tetCake != null) {
                                                    Item hopQua = ItemService.gI()
                                                            .createNewItem((short) ConstItem.HOP_QUA_TET_2023, 1);
                                                    hopQua.itemOptions.add(new ItemOption(30, 0));
                                                    hopQua.itemOptions.add(new ItemOption(74, 0));

                                                    InventoryService.gI().subQuantityItemsBag(player, tetCake, 5);
                                                    InventoryService.gI().subQuantityItemsBag(player, chungCake, 5);
                                                    InventoryService.gI().addItemBag(player, hopQua, 0);
                                                    InventoryService.gI().sendItemBags(player);
                                                    Service.getInstance().sendThongBao(player,
                                                            "B·∫°n nh·∫≠n ƒë∆∞·ª£c H·ªôp qu√† t·∫øt");
                                                } else {
                                                    Service.getInstance().sendThongBao(player,
                                                            "Kh√¥ng ƒë·ªß nguy√™n li·ªáu ƒë·ªÉ ƒë·ªïi");
                                                }
                                                break;
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.CUA_HANG_KY_GUI:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "C·ªßa h√†ng ch√∫ng t√¥i chuy√™n b√°n h√†ng hi·ªáu,h√†ng ƒë·ªôc,n·∫øu b·∫°n kh√¥ng ch√™ th√¨ m·∫°i ƒëz√¥",
                                        "Kh√¥ng c√≥\nH∆∞·ªõng d·∫´n", "Mua b√°n", "Danh s√°ch\nH·∫øt H·∫°n", "H·ªßy");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                switch (player.iDMark.getIndexMenu()) {
                                    case ConstNpc.BASE_MENU:
                                        switch (select) {
                                            case 1:
                                                if (!Manager.gI().getGameConfig().isOpenSuperMarket()) {
                                                    Service.getInstance().sendThongBao(player,
                                                            "Ch·ª©c nƒÉng k√≠ g·ª≠i ch∆∞a m·ªü,vui l√≤ng quay l·∫°i sau");
                                                    return;
                                                }
                                                ConsignmentShop.getInstance().show(player);
                                                break;
                                            case 2:
                                                ConsignmentShop.getInstance().showExpiringItems(player);
                                                break;
                                        }
                                        break;
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.MAY_GAP_THU:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                this.createOtherMenu(player, ConstNpc.BASE_MENU, "|7|M√ÅY G·∫ÆP TH√ö"
                                        + "\n\n|2| S·ª≠ d·ª•ng Th·ªèi V√†ng ƒë·ªÉ g·∫Øp v√† nh·∫≠n ƒë∆∞·ª£c Linh th√∫ ch·ªâ s·ªë Ng·∫´u nhi√™n nh∆∞ sau :"
                                        + "\n|4| -Th∆∞·ªùng : 10-20% ch·ªâ s·ªë SD, HP, KI"
                                        + "\n -VIP : Ch·ªâ s·ªë SD, HP, KI max 30%"
                                        + "->L∆∞u √Ω : G·∫Øp VIP c√≥ t·ªâ l·ªá nh·∫≠n th√™m d√≤ng ch·ªâ s·ªë % TNSM random t·ª´ 50-100%"
                                        + "\n\n|3| *G·∫Øp Th∆∞·ªùng c·∫ßn 10 Th·ªèi v√†ng 1 l∆∞·ª£t"
                                        + "\n *G·∫Øp VIP c·∫ßn 50 Th·ªèi v√†ng 1 l∆∞·ª£t"
                                        + "\n\n|1|H√£y tham gia v√† nh·∫≠n c√°c Linh th√∫ qu√Ω hi·∫øm n√†o !!!",
                                        "G·∫Øp\nTh∆∞·ªùng", "G·∫Øp\nVIP");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            Item thoivang = null;
                                            try {
                                                thoivang = InventoryService.gI().findItemBagByTemp(player, 457);
                                            } catch (Exception ignored) {
                                            }
                                            if (thoivang == null || thoivang.quantity < 10) {
                                                Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß Th·ªèi v√†ng");
                                                return;
                                            }
                                            if (InventoryService.gI().getCountEmptyBag(player) == 0) {
                                                Service.getInstance().sendThongBao(player, "H√†nh trang kh√¥ng ƒë·ªß ch·ªó tr·ªëng");
                                            } else {
                                                // l·∫•y linh th√∫ t·ª´ csdl
                                                Item linhThu = ItemService.gI().createNewItem((short) Util.nextInt(1273, 1295));
                                                // add option cho linh th√∫
                                                linhThu.itemOptions.add(new ItemOption(50, Util.nextInt(10, 20)));
                                                linhThu.itemOptions.add(new ItemOption(77, Util.nextInt(10, 20)));
                                                linhThu.itemOptions.add(new ItemOption(103, Util.nextInt(10, 20)));
                                                // t·ªâ l·ªá ra hsd ng√†y
                                                if (Util.isTrue(90, 100)) {
                                                    linhThu.itemOptions.add(new ItemOption(93, Util.nextInt(1, 7)));
                                                }
                                                InventoryService.gI().subQuantityItemsBag(player, thoivang, 10);
                                                InventoryService.gI().addItemBag(player, linhThu, 99);
                                                InventoryService.gI().sendItemBags(player);
                                                Service.getInstance().sendThongBao(player, "Ch√∫c m·ª´ng b·∫°n nh·∫≠n ƒë∆∞·ª£c Linh th√∫ " + linhThu.template.name);
                                            }
                                            break;
                                        case 1:
                                            Item thoivang1 = null;
                                            try {
                                                thoivang1 = InventoryService.gI().findItemBagByTemp(player, 457);
                                            } catch (Exception e) {
                                            }
                                            if (thoivang1 == null || thoivang1.quantity < 50) {
                                                Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß Th·ªèi v√†ng");
                                                return;
                                            }
                                            if (InventoryService.gI().getCountEmptyBag(player) == 0) {
                                                Service.getInstance().sendThongBao(player, "H√†nh trang kh√¥ng ƒë·ªß ch·ªó tr·ªëng");
                                            } else {
                                                int[] pet = new int[]{1374, 1375, 1376, 1378, 1379, 1380, 1381, 1382};
                                                // l·∫•y linh th√∫ t·ª´ csdl
//                                                Item linhThu = ItemService.gI().createNewItem((short) Util.nextInt(1374, 1382));
                                                int randomPet = new Random().nextInt(pet.length);
                                                Item linhThu = ItemService.gI().createNewItem((short) pet[randomPet]);
                                                linhThu.itemOptions.add(new ItemOption(50, Util.nextInt(1, 30)));
                                                linhThu.itemOptions.add(new ItemOption(77, Util.nextInt(1, 30)));
                                                linhThu.itemOptions.add(new ItemOption(103, Util.nextInt(1, 30)));
                                                // t·ªâ l·ªá ra hsd ng√†y
                                                if (Util.isTrue(90, 100)) {
                                                    linhThu.itemOptions.add(new ItemOption(93, Util.nextInt(1, 7)));
                                                } else {
                                                    linhThu.itemOptions.add(new ItemOption(73, 0));
                                                }
                                                if (Util.isTrue(10, 100)) {
                                                    linhThu.itemOptions.add(new ItemOption(101, Util.nextInt(50, 100)));
                                                }
                                                InventoryService.gI().subQuantityItemsBag(player, thoivang1, 50);
                                                InventoryService.gI().addItemBag(player, linhThu, 99);
                                                InventoryService.gI().sendItemBags(player);
                                                Service.getInstance().sendThongBao(player, "Ch√∫c m·ª´ng b·∫°n nh·∫≠n ƒë∆∞·ª£c Linh th√∫ " + linhThu.template.name);
                                            }
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                case ConstNpc.VADOS:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                createOtherMenu(player, ConstNpc.BASE_MENU,
                                        "|7| B·∫¢NG X·∫æP H·∫†NG\n|6|Ta V·ª´a Hack Map xem ƒê∆∞·ª£c TOP C·ªßa To√†n Server\b|1|Ng∆∞·ªùi Mu·ªën Xem TOP G√¨?",
                                        "Top S·ª©c m·∫°nh", "Top S·ª©c m·∫°nh ƒê·ªá t·ª≠", "Top Nhi·ªám v·ª•", "Top N·∫°p");
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                if (player.iDMark.isBaseMenu()) {
                                    switch (select) {
                                        case 0:
                                            Service.getInstance().showTopPower(player, Service.getInstance().TOP_SUCMANH);
                                            break;
                                        case 1:
                                            Service.getInstance().showTopPower(player, Service.getInstance().TOP_DETU);
                                            break;
                                        case 2:
                                            Service.getInstance().showTopPower(player, Service.getInstance().TOP_NHIEMVU);
                                            break;
                                        case 3:
                                            Service.getInstance().showTopPower(player, Service.getInstance().TOP_NAP);
                                            break;
                                    }
                                }
                            }
                        }
                    };
                    break;
                default:
                    npc = new Npc(mapId, status, cx, cy, tempId, avartar) {
                        @Override
                        public void openBaseMenu(Player player) {
                            if (canOpenNpc(player)) {
                                super.openBaseMenu(player);
                            }
                        }

                        @Override
                        public void confirmMenu(Player player, int select) {
                            if (canOpenNpc(player)) {
                                // ShopService.gI().openShopNormal(player, this, ConstNpc.SHOP_BUNMA_TL_0, 0,
                                // player.gender);
                            }
                        }
                    };
            }
        } catch (Exception e) {
            Log.error(NpcFactory.class, e, "L·ªói load npc");
        }
        return npc;
    }

    // girlkun75-mark
    public static void createNpcRongThieng() {
        Npc npc = new Npc(-1, -1, -1, -1, ConstNpc.RONG_THIENG, -1) {
            @Override
            public void confirmMenu(Player player, int select) {
                switch (player.iDMark.getIndexMenu()) {
                    case ConstNpc.IGNORE_MENU:

                        break;
                    case ConstNpc.SHENRON_CONFIRM:
                        if (select == 0) {
                            SummonDragon.gI().confirmWish();
                        } else if (select == 1) {
                            SummonDragon.gI().reOpenShenronWishes(player);
                        }
                        break;
                    case ConstNpc.SHENRON_1_1:
                        if (player.iDMark.getIndexMenu() == ConstNpc.SHENRON_1_1
                                && select == SHENRON_1_STAR_WISHES_1.length - 1) {
                            NpcService.gI().createMenuRongThieng(player, ConstNpc.SHENRON_1_2, SHENRON_SAY,
                                    SHENRON_1_STAR_WISHES_2);
                            break;
                        }
                    case ConstNpc.SHENRON_1_2:
                        if (player.iDMark.getIndexMenu() == ConstNpc.SHENRON_1_2
                                && select == SHENRON_1_STAR_WISHES_2.length - 1) {
                            NpcService.gI().createMenuRongThieng(player, ConstNpc.SHENRON_1_1, SHENRON_SAY,
                                    SHENRON_1_STAR_WISHES_1);
                            break;
                        }
                    case ConstNpc.BLACK_SHENRON:
                        if (player.iDMark.getIndexMenu() == ConstNpc.BLACK_SHENRON
                                && select == BLACK_SHENRON_WISHES.length) {
                            NpcService.gI().createMenuRongThieng(player, ConstNpc.BLACK_SHENRON, BLACK_SHENRON_SAY,
                                    BLACK_SHENRON_WISHES);
                            break;
                        }
                    case ConstNpc.ICE_SHENRON:
                        if (player.iDMark.getIndexMenu() == ConstNpc.ICE_SHENRON
                                && select == ICE_SHENRON_WISHES.length) {
                            NpcService.gI().createMenuRongThieng(player, ConstNpc.ICE_SHENRON, ICE_SHENRON_SAY,
                                    ICE_SHENRON_WISHES);
                            break;
                        }
                    default:
                        SummonDragon.gI().showConfirmShenron(player, player.iDMark.getIndexMenu(), (byte) select);
                        break;
                }
            }
        };
    }

    public static void createNpcConMeo() {
        Npc npc = new Npc(-1, -1, -1, -1, ConstNpc.CON_MEO, 351) {
            @Override
            public void confirmMenu(Player player, int select) {
                switch (player.iDMark.getIndexMenu()) {
                    case ConstNpc.CONFIRM_DIALOG:
                        ConfirmDialog confirmDialog = player.getConfirmDialog();
                        if (confirmDialog != null) {
                            if (confirmDialog instanceof MenuDialog menu) {
                                menu.getRunable().setIndexSelected(select);
                                menu.run();
                                return;
                            }
                            if (select == 0) {
                                confirmDialog.run();
                            } else {
                                confirmDialog.cancel();
                            }
                            player.setConfirmDialog(null);
                        }
                        break;
                    case ConstNpc.UP_TOP_ITEM:
                        break;
                    case ConstNpc.MENU_OPTION_USE_ITEM1105:
                        if (select == 0) {
                            IntrinsicService.gI().sattd(player);
                        } else if (select == 1) {
                            IntrinsicService.gI().satnm(player);
                        } else if (select == 2) {
                            IntrinsicService.gI().setxd(player);
                        }
                        break;
                    case ConstNpc.MENU_OPTION_USE_ITEM1537:
                        if (select == 0) {
                            IntrinsicService.gI().SkhHdTD(player);
                        } else if (select == 1) {
                            IntrinsicService.gI().SkhHdNM(player);
                        } else if (select == 2) {
                            IntrinsicService.gI().SkhHdXD(player);
                        }
                        break;
                    case ConstNpc.MENU_OPTION_USE_ITEM1538:
                        if (select == 0) {
                            IntrinsicService.gI().SkhTlTD(player);
                        } else if (select == 1) {
                            IntrinsicService.gI().SkhTlNM(player);
                        } else if (select == 2) {
                            IntrinsicService.gI().SkhTlXD(player);
                        }
                        break;
                    case ConstNpc.MENU_TD:
                        switch (select) {
                            case 0:
                                try {
                                ItemService.gI().settaiyoken(player);
                            } catch (Exception e) {
                            }
                            break;
                            case 1:
                                try {
                                ItemService.gI().setgenki(player);
                            } catch (Exception e) {
                            }
                            break;
                            case 2:
                                try {
                                ItemService.gI().setkamejoko(player);
                            } catch (Exception e) {
                            }
                            break;
                        }
                        break;
                    case ConstNpc.MENU_NM:
                        switch (select) {
                            case 0:
                                try {
                                ItemService.gI().setgodki(player);
                            } catch (Exception e) {
                            }
                            break;
                            case 1:
                                try {
                                ItemService.gI().setgoddam(player);
                            } catch (Exception e) {
                            }
                            break;
                            case 2:
                                try {
                                ItemService.gI().setsummon(player);
                            } catch (Exception e) {
                            }
                            break;
                        }
                        break;

                    case ConstNpc.MENU_XD:
                        switch (select) {
                            case 0:
                                try {
                                ItemService.gI().setgodgalick(player);
                            } catch (Exception e) {
                            }
                            break;
                            case 1:
                                try {
                                ItemService.gI().setmonkey(player);
                            } catch (Exception e) {
                            }
                            break;
                            case 2:
                                try {
                                ItemService.gI().setgodhp(player);
                            } catch (Exception e) {
                            }
                            break;
                        }
                        break;
                    case ConstNpc.MENU_TD_HD:
                        switch (select) {
                            case 0:
                                try {
                                ItemService.gI().settaiyokenHD(player);
                            } catch (Exception e) {
                            }
                            break;
                            case 1:
                                try {
                                ItemService.gI().setgenkiHD(player);
                            } catch (Exception e) {
                            }
                            break;
                            case 2:
                                try {
                                ItemService.gI().setkamejokoHD(player);
                            } catch (Exception e) {
                            }
                            break;
                        }
                        break;
                    case ConstNpc.MENU_NM_HD:
                        switch (select) {
                            case 0:
                                try {
                                ItemService.gI().setgodkiHD(player);
                            } catch (Exception e) {
                            }
                            break;
                            case 1:
                                try {
                                ItemService.gI().setgoddamHD(player);
                            } catch (Exception e) {
                            }
                            break;
                            case 2:
                                try {
                                ItemService.gI().setsummonHD(player);
                            } catch (Exception e) {
                            }
                            break;
                        }
                        break;

                    case ConstNpc.MENU_XD_HD:
                        switch (select) {
                            case 0:
                                try {
                                ItemService.gI().setgodgalickHD(player);
                            } catch (Exception e) {
                            }
                            break;
                            case 1:
                                try {
                                ItemService.gI().setmonkeyHD(player);
                            } catch (Exception e) {
                            }
                            break;
                            case 2:
                                try {
                                ItemService.gI().setgodhpHD(player);
                            } catch (Exception e) {
                            }
                            break;
                        }
                        break;
                    case ConstNpc.MENU_TD_TL:
                        switch (select) {
                            case 0:
                                try {
                                ItemService.gI().settaiyokenTL(player);
                            } catch (Exception e) {
                            }
                            break;
                            case 1:
                                try {
                                ItemService.gI().setgenkiTL(player);
                            } catch (Exception e) {
                            }
                            break;
                            case 2:
                                try {
                                ItemService.gI().setkamejokoTL(player);
                            } catch (Exception e) {
                            }
                            break;
                        }
                        break;
                    case ConstNpc.MENU_NM_TL:
                        switch (select) {
                            case 0:
                                try {
                                ItemService.gI().setgodkiTL(player);
                            } catch (Exception e) {
                            }
                            break;
                            case 1:
                                try {
                                ItemService.gI().setgoddamTL(player);
                            } catch (Exception e) {
                            }
                            break;
                            case 2:
                                try {
                                ItemService.gI().setsummonTL(player);
                            } catch (Exception e) {
                            }
                            break;
                        }
                        break;
                    case ConstNpc.MENU_XD_TL:
                        switch (select) {
                            case 0:
                                try {
                                ItemService.gI().setgodgalickTL(player);
                            } catch (Exception e) {
                            }
                            break;
                            case 1:
                                try {
                                ItemService.gI().setmonkeyTL(player);
                            } catch (Exception e) {
                            }
                            break;
                            case 2:
                                try {
                                ItemService.gI().setgodhpTL(player);
                            } catch (Exception e) {
                            }
                            break;
                        }
                        break;
                    case ConstNpc.TAIXIU:
                        String time = ((TaiXiu.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) + " gi√¢y";
                        if (((TaiXiu.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) > 0 && player.goldTai == 0 && player.goldXiu == 0 && TaiXiu.gI().baotri == false) {
                            switch (select) {
                                case 0:
                                    NpcService.gI().createMenuConMeo(player, ConstNpc.TAIXIU, 11039, "\n|7|---NH√Ä C√ÅI T√ÄI X·ªàU---\n\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
                                            + "\n\n|6|T·ªïng nh√† T√ÄI: " + Util.format(TaiXiu.gI().goldTai) + " Th·ªèi v√†ng"
                                            + "\n\nT·ªïng nh√† X·ªàU: " + Util.format(TaiXiu.gI().goldXiu) + " Th·ªèi v√†ng\n\n|5|Th·ªùi gian c√≤n l·∫°i: " + time, "C·∫≠p nh·∫≠p", "Theo T√ÄI", "Theo X·ªàU", "ƒê√≥ng");
                                    break;
                                case 1:
                                    if (!player.getSession().actived) {
                                        Service.getInstance().sendThongBao(player, "B·∫°n ch∆∞a ƒë·ªß ƒëi·ªÅu ki·ªán ƒë·ªÉ ch∆°i");
                                    }
                                    Input.gI().TAI_taixiu(player);
//                                    if (TaskService.gI().getIdTask(player) >= ConstTask.TASK_24_0) {
//                                        Input.gI().TAI_taixiu(player);
//                                    } else {
//                                        Service.getInstance().sendThongBao(player, "B·∫°n ch∆∞a ƒë·ªß ƒëi·ªÅu ki·ªán ƒë·ªÉ ch∆°i");
//                                    }
                                    break;
                                case 2:
                                    if (!player.getSession().actived) {
                                        Service.getInstance().sendThongBao(player, "B·∫°n ch∆∞a ƒë·ªß ƒëi·ªÅu ki·ªán ƒë·ªÉ ch∆°i");
                                    }
                                    Input.gI().XIU_taixiu(player);
//                                    if (TaskService.gI().getIdTask(player) >= ConstTask.TASK_24_0) {
//                                        Input.gI().XIU_taixiu(player);
//                                    } else {
//                                        Service.getInstance().sendThongBao(player, "B·∫°n ch∆∞a ƒë·ªß ƒëi·ªÅu ki·ªán ƒë·ªÉ ch∆°i");
//                                    }
                                    break;
                            }
                        } else if (((TaiXiu.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) > 0 && player.goldTai > 0 && TaiXiu.gI().baotri == false) {
                            switch (select) {
                                case 0:
                                    NpcService.gI().createMenuConMeo(player, ConstNpc.TAIXIU, 11039, "\n|7|---NH√Ä C√ÅI T√ÄI X·ªàU---\n\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
                                            + "\n\n|6|T·ªïng nh√† T√ÄI: " + Util.format(TaiXiu.gI().goldTai) + " Th·ªèi v√†ng"
                                            + "\n\nT·ªïng nh√† X·ªàU: " + Util.format(TaiXiu.gI().goldXiu) + " Th·ªèi v√†ng\n\n|5|Th·ªùi gian c√≤n l·∫°i: " + time + "\n\n|7|B·∫°n ƒë√£ c∆∞·ª£c T√†i : " + Util.format(player.goldTai) + " Th·ªèi v√†ng", "C·∫≠p nh·∫≠p", "ƒê√≥ng");
                                    break;
                            }
                        } else if (((TaiXiu.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) > 0 && player.goldXiu > 0 && TaiXiu.gI().baotri == false) {
                            switch (select) {
                                case 0:
                                    NpcService.gI().createMenuConMeo(player, ConstNpc.TAIXIU, 11039, "\n|7|---NH√Ä C√ÅI T√ÄI X·ªàU---\n\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
                                            + "\n\n|6|T·ªïng nh√† T√ÄI: " + Util.format(TaiXiu.gI().goldTai) + " Th·ªèi v√†ng"
                                            + "\n\nT·ªïng nh√† X·ªàU: " + Util.format(TaiXiu.gI().goldXiu) + " Th·ªèi v√†ng\n\n|5|Th·ªùi gian c√≤n l·∫°i: " + time + "\n\n|7|B·∫°n ƒë√£ c∆∞·ª£c X·ªâu : " + Util.format(player.goldXiu) + " Th·ªèi v√†ng", "C·∫≠p nh·∫≠p", "ƒê√≥ng");
                                    break;
                            }
                        } else if (((TaiXiu.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) > 0 && player.goldTai > 0 && TaiXiu.gI().baotri == true) {
                            switch (select) {
                                case 0:
                                    NpcService.gI().createMenuConMeo(player, ConstNpc.TAIXIU, 11039, "\n|7|---NH√Ä C√ÅI T√ÄI X·ªàU---\n\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
                                            + "\n\n|6|T·ªïng nh√† T√ÄI: " + Util.format(TaiXiu.gI().goldTai) + " Th·ªèi v√†ng"
                                            + "\n\nT·ªïng nh√† X·ªàU: " + Util.format(TaiXiu.gI().goldXiu) + " Th·ªèi v√†ng\n\n|5|Th·ªùi gian c√≤n l·∫°i: " + time + "\n\n|7|B·∫°n ƒë√£ c∆∞·ª£c T√†i : " + Util.format(player.goldTai) + " Th·ªèi v√†ng" + "\n\n|7|H·ªá th·ªëng s·∫Øp b·∫£o tr√¨", "C·∫≠p nh·∫≠p", "ƒê√≥ng");
                                    break;
                            }
                        } else if (((TaiXiu.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) > 0 && player.goldXiu > 0 && TaiXiu.gI().baotri == true) {
                            switch (select) {
                                case 0:
                                    NpcService.gI().createMenuConMeo(player, ConstNpc.TAIXIU, 11039, "\n|7|---NH√Ä C√ÅI T√ÄI X·ªàU---\n\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
                                            + "\n\n|6|T·ªïng nh√† T√ÄI: " + Util.format(TaiXiu.gI().goldTai) + " Th·ªèi v√†ng"
                                            + "\n\nT·ªïng nh√† X·ªàU: " + Util.format(TaiXiu.gI().goldXiu) + " Th·ªèi v√†ng\n\n|5|Th·ªùi gian c√≤n l·∫°i: " + time + "\n\n|7|B·∫°n ƒë√£ c∆∞·ª£c X·ªâu : " + Util.format(player.goldXiu) + " Th·ªèi v√†ng" + "\n\n|7|H·ªá th·ªëng s·∫Øp b·∫£o tr√¨", "C·∫≠p nh·∫≠p", "ƒê√≥ng");
                                    break;
                            }
                        } else if (((TaiXiu.gI().lastTimeEnd - System.currentTimeMillis()) / 1000) > 0 && player.goldXiu == 0 && player.goldTai == 0 && TaiXiu.gI().baotri == true) {
                            switch (select) {
                                case 0:
                                    NpcService.gI().createMenuConMeo(player, ConstNpc.TAIXIU, 11039, "\n|7|---NH√Ä C√ÅI T√ÄI X·ªàU---\n\n|3|K·∫øt qu·∫£ k√¨ tr∆∞·ªõc:  " + TaiXiu.gI().x + " : " + TaiXiu.gI().y + " : " + TaiXiu.gI().z
                                            + "\n\n|6|T·ªïng nh√† T√ÄI: " + Util.format(TaiXiu.gI().goldTai) + " Th·ªèi v√†ng"
                                            + "\n\nT·ªïng nh√† X·ªàU: " + Util.format(TaiXiu.gI().goldXiu) + " Th·ªèi v√†ng\n\n|5|Th·ªùi gian c√≤n l·∫°i: " + time + "\n\n|7|H·ªá th·ªëng s·∫Øp b·∫£o tr√¨", "C·∫≠p nh·∫≠p", "ƒê√≥ng");
                                    break;
                            }
                        }
                        break;

                    case ConstNpc.RUONG_GO:
                        int size = player.textRuongGo.size();
                        if (size > 0) {
                            String menuselect = "OK [" + (size - 1) + "]";
                            if (size == 1) {
                                menuselect = "OK";
                            }
                            NpcService.gI().createMenuConMeo(player, ConstNpc.RUONG_GO, -1,
                                    player.textRuongGo.get(size - 1), menuselect);
                            player.textRuongGo.remove(size - 1);
                        }
                        break;
                    case ConstNpc.MENU_MABU_WAR:
                        if (select == 0) {
                            if (player.zone.finishMabuWar) {
                                ChangeMapService.gI().changeMapBySpaceShip(player, player.gender + 21, -1, 250);
                            } else if (player.zone.map.mapId == 119) {
                                Zone zone = MabuWar.gI().getMapLastFloor(120);
                                if (zone != null) {
                                    ChangeMapService.gI().changeMap(player, zone, 354, 240);
                                } else {
                                    Service.getInstance().sendThongBao(player,
                                            "Tr·∫≠n ƒë·∫°i chi·∫øn ƒë√£ k·∫øt th√∫c, t√†u v·∫≠n chuy·ªÉn s·∫Ω ƒë∆∞a b·∫°n v·ªÅ nh√†");
                                    ChangeMapService.gI().changeMapBySpaceShip(player, player.gender + 21, -1, 250);
                                }
                            } else {
                                int idMapNextFloor = player.zone.map.mapId == 115 ? player.zone.map.mapId + 2
                                        : player.zone.map.mapId + 1;
                                ChangeMapService.gI().changeMap(player, idMapNextFloor, -1, 354, 240);
                            }
                            player.resetPowerPoint();
                            player.sendMenuGotoNextFloorMabuWar = false;
                            Service.getInstance().sendPowerInfo(player, "TL", player.getPowerPoint());
                            if (Util.isTrue(1, 30)) {
                                player.inventory.ruby += 1;
                                PlayerService.gI().sendInfoHpMpMoney(player);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c 1 H·ªìng Ng·ªçc");
                            } else {
                                Service.getInstance().sendThongBao(player,
                                        "B·∫°n ƒëen v√¥ c√πng lu√¥n n√™n kh√¥ng nh·∫≠n ƒë∆∞·ª£c g√¨ c·∫£");
                            }
                        }
                        break;
                    case ConstNpc.IGNORE_MENU:

                        break;
                    case ConstNpc.MAKE_MATCH_PVP:
                        // PVP_old.gI().sendInvitePVP(player, (byte) select);
                        PVPServcice.gI().sendInvitePVP(player, (byte) select);
                        break;
                    case ConstNpc.MAKE_FRIEND:
                        if (select == 0) {
                            Object playerId = PLAYERID_OBJECT.get(player.id);
                            if (playerId != null) {
                                FriendAndEnemyService.gI().acceptMakeFriend(player,
                                        Integer.parseInt(String.valueOf(playerId)));
                            }
                        }
                        break;
                    case ConstNpc.REVENGE:
                        if (select == 0) {
                            PVPServcice.gI().acceptRevenge(player);
                        }
                        break;
                    case ConstNpc.TUTORIAL_SUMMON_DRAGON:
                        if (select == 0) {
                            NpcService.gI().createTutorial(player, -1, SummonDragon.SUMMON_SHENRON_TUTORIAL);
                        }
                        break;
                    case ConstNpc.SUMMON_SHENRON:
                        if (select == 0) {
                            NpcService.gI().createTutorial(player, -1, SummonDragon.SUMMON_SHENRON_TUTORIAL);
                        } else if (select == 1) {
                            SummonDragon.gI().summonShenron(player);
                        }
                        break;
                    case ConstNpc.SUMMON_BLACK_SHENRON:
                        if (select == 0) {
                            SummonDragon.gI().summonBlackShenron(player);
                        }
                        break;
                    case ConstNpc.SUMMON_ICE_SHENRON:
                        if (select == 0) {
                            SummonDragon.gI().summonIceShenron(player);
                        }
                        break;
                    case ConstNpc.INTRINSIC:
                        if (select == 0) {
                            IntrinsicService.gI().showAllIntrinsic(player);
                        } else if (select == 1) {
                            IntrinsicService.gI().showConfirmOpen(player);
                        } else if (select == 2) {
                            IntrinsicService.gI().showConfirmOpenVip(player);
                        }
                        break;
                    case ConstNpc.CONFIRM_OPEN_INTRINSIC:
                        if (select == 0) {
                            IntrinsicService.gI().open(player);
                        }
                        break;
                    case ConstNpc.CONFIRM_OPEN_INTRINSIC_VIP:
                        if (select == 0) {
                            IntrinsicService.gI().openVip(player);
                        }
                        break;
                    case ConstNpc.CONFIRM_LEAVE_CLAN:
                        if (select == 0) {
                            ClanService.gI().leaveClan(player);
                        }
                        break;
                    case ConstNpc.CONFIRM_NHUONG_PC:
                        if (select == 0) {
                            ClanService.gI().phongPc(player, (int) PLAYERID_OBJECT.get(player.id));
                        }
                        break;
                    case ConstNpc.BAN_PLAYER:
                        if (select == 0) {
                            PlayerService.gI().banPlayer((Player) PLAYERID_OBJECT.get(player.id));
                            Service.getInstance().sendThongBao(player,
                                    "Ban ng∆∞·ªùi ch∆°i " + ((Player) PLAYERID_OBJECT.get(player.id)).name + " th√†nh c√¥ng");
                        }
                        break;
                    case ConstNpc.BUFF_PET:
                        if (select == 0) {
                            Player pl = (Player) PLAYERID_OBJECT.get(player.id);
                            if (pl.pet == null) {
                                PetService.gI().createNormalPet(pl);
                                Service.getInstance().sendThongBao(player, "Ph√°t ƒë·ªá t·ª≠ cho "
                                        + ((Player) PLAYERID_OBJECT.get(player.id)).name + " th√†nh c√¥ng");
                            }
                        }
                        break;
                    case ConstNpc.DUNG_NHIEU_TV:
                        Item thoivang = InventoryService.gI().findItemBagByTemp(player, 457);
                        switch (select) {
                            case 0:
                                if (thoivang == null || thoivang.quantity < 1) {
                                    Service.getInstance().sendThongBao(player, "C·∫ßn c√≥ ƒë·ªß 1 Th·ªèi v√†ng ƒë·ªÉ th·ª±c hi·ªán");
                                    return;
                                }
                                if (player.inventory.gold + 500_000_000 > player.inventory.getGoldLimit()) {
                                    Service.getInstance().sendThongBao(player, "V√†ng sau khi nh·∫≠n v∆∞·ª£t qu√° gi·ªõi h·∫°n");
                                } else {
                                    player.inventory.gold += 500_000_000;
                                    Service.getInstance().sendThongBao(player, "|4|B·∫°n nh·∫≠n ƒë∆∞·ª£c 500 Tri·ªáu V√†ng");
                                    InventoryService.gI().subQuantityItemsBag(player, thoivang, 1);
                                    InventoryService.gI().sendItemBags(player);
                                    Service.getInstance().sendMoney(player);
                                    break;
                                }
                                break;
                            case 1:
                                if (thoivang == null || thoivang.quantity < 5) {
                                    Service.getInstance().sendThongBao(player, "C·∫ßn c√≥ ƒë·ªß 5 Th·ªèi v√†ng ƒë·ªÉ th·ª±c hi·ªán");
                                    return;
                                }
                                if (player.inventory.gold + 2_500_000_000L > player.inventory.getGoldLimit()) {
                                    Service.getInstance().sendThongBao(player, "V√†ng sau khi nh·∫≠n v∆∞·ª£t qu√° gi·ªõi h·∫°n");
                                } else {
                                    player.inventory.gold += 2_500_000_000L;
                                    Service.getInstance().sendThongBao(player, "|4|B·∫°n nh·∫≠n ƒë∆∞·ª£c 2,5 T·ª∑ V√†ng");
                                    Service.getInstance().sendMoney(player);
                                    InventoryService.gI().subQuantityItemsBag(player, thoivang, 5);
                                    InventoryService.gI().sendItemBags(player);
                                    break;
                                }
                                break;
                            case 2:
                                if (thoivang == null || thoivang.quantity < 10) {
                                    Service.getInstance().sendThongBao(player, "C·∫ßn c√≥ ƒë·ªß 10 Th·ªèi v√†ng ƒë·ªÉ th·ª±c hi·ªán");
                                    return;
                                }
                                if (player.inventory.gold + 5_000_000_000L > player.inventory.getGoldLimit()) {
                                    Service.getInstance().sendThongBao(player, "V√†ng sau khi nh·∫≠n v∆∞·ª£t qu√° gi·ªõi h·∫°n");
                                } else {
                                    player.inventory.gold += 5_000_000_000L;
                                    Service.getInstance().sendThongBao(player, "|4|B·∫°n nh·∫≠n ƒë∆∞·ª£c 5 T·ª∑ V√†ng");
                                    Service.getInstance().sendMoney(player);
                                    InventoryService.gI().subQuantityItemsBag(player, thoivang, 10);
                                    InventoryService.gI().sendItemBags(player);
                                    break;
                                }
                                break;
                            case 3:
                                if (thoivang == null || thoivang.quantity < 100) {
                                    Service.getInstance().sendThongBao(player, "C·∫ßn c√≥ ƒë·ªß 100 Th·ªèi v√†ng ƒë·ªÉ th·ª±c hi·ªán");
                                    return;
                                }
                                if (player.inventory.gold + 50_000_000_000L > player.inventory.getGoldLimit()) {
                                    Service.getInstance().sendThongBao(player, "V√†ng sau khi nh·∫≠n v∆∞·ª£t qu√° gi·ªõi h·∫°n");
                                } else {
                                    player.inventory.gold += 50_000_000_000L;
                                    Service.getInstance().sendThongBao(player, "|4|B·∫°n nh·∫≠n ƒë∆∞·ª£c 50 T·ª∑ V√†ng");
                                    Service.getInstance().sendMoney(player);
                                    InventoryService.gI().subQuantityItemsBag(player, thoivang, 100);
                                    InventoryService.gI().sendItemBags(player);
                                    break;
                                }
                        }
                        break;
                    case ConstNpc.MENU_ADMIN:
                        switch (select) {
                            case 0:
                                for (int i = 14; i <= 20; i++) {
                                    Item item = ItemService.gI().createNewItem((short) i);
                                    item.quantity = 99;
                                    InventoryService.gI().addItemBag(player, item, 99);
                                }
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player, "Nh·∫≠n x99 B·ªô Ng·ªçc r·ªìng th√†nh c√¥ng");
                                break;
                            case 1:
                                if (player.pet == null) {
                                    PetService.gI().createNormalPet(player);
                                } else {
                                    if (player.pet.typePet == 1) {
                                        PetService.gI().changeNormalPet(player);
                                    } else {
                                        PetService.gI().changeMabuPet(player);
                                    }
                                }
                                break;
                            case 2:
                                // PlayerService.gI().baoTri();
                                Maintenance.gI().start(30);
                                break;
                            case 3:
                                Input.gI().createFormFindPlayer(player);
                                break;
                            case 4:
                                NotiManager.getInstance().load();
                                NotiManager.getInstance().sendAlert(player);
                                NotiManager.getInstance().sendNoti(player);
                                Service.getInstance().chat(player, "C·∫≠p nh·∫≠t th√¥ng b√°o th√†nh c√¥ng");
                                break;
                            case 5:
                                Input.gI().createFormBuffItemVip(player);
                                break;
                            case 6:
                                if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                                    if (player.inventory.itemsBody.get(0).quantity < 1
                                            && player.inventory.itemsBody.get(1).quantity < 1
                                            && player.inventory.itemsBody.get(2).quantity < 1
                                            && player.inventory.itemsBody.get(3).quantity < 1
                                            && player.inventory.itemsBody.get(4).quantity < 1) {
                                        player.gender += 1;
                                        if (player.gender > 2) {
                                            player.gender = 0;
                                        }
                                        short[] headtd = {30, 31, 64};
                                        short[] headnm = {9, 29, 32};
                                        short[] headxd = {27, 28, 6};
                                        player.playerSkill.skills.clear();
                                        for (Skill skill : player.playerSkill.skills) {
                                            skill.point = 1;
                                        }
                                        int[] skillsArr = player.gender == 0 ? new int[]{0, 1, 6, 9, 10, 20, 22, 24, 19}
                                                : player.gender == 1 ? new int[]{2, 3, 7, 11, 12, 17, 18, 26, 19}
                                                : new int[]{4, 5, 8, 13, 14, 21, 23, 25, 19};
                                        for (int i = 0; i < skillsArr.length; i++) {
                                            if (skillsArr[i] == Skill.SUPER_KAME || skillsArr[i] == Skill.LIEN_HOAN_CHUONG || skillsArr[i] == Skill.MA_PHONG_BA) {
                                                player.playerSkill.skills.add(SkillUtil.createSkill(skillsArr[i], 1));
                                            } else {
                                                player.playerSkill.skills.add(SkillUtil.createSkill(skillsArr[i], 7));
                                            }
                                        }
                                        player.playerIntrinsic.intrinsic = IntrinsicService.gI().getIntrinsicById(0);
                                        player.playerIntrinsic.intrinsic.param1 = 0;
                                        player.playerIntrinsic.intrinsic.param2 = 0;
                                        player.playerIntrinsic.countOpen = 0;
                                        switch (player.gender) {
                                            case 0:
                                                player.head = headtd[Util.nextInt(headtd.length)];
                                                break;
                                            case 1:
                                                player.head = headnm[Util.nextInt(headnm.length)];
                                                break;
                                            case 2:
                                                player.head = headxd[Util.nextInt(headxd.length)];
                                                break;
                                            default:
                                                break;
                                        }
                                        Service.getInstance().sendThongBao(player, "|1|ƒê·ªïi h√†nh tinh th√†nh c√¥ng");
                                        Service.getInstance().player(player);
                                        player.zone.loadAnotherToMe(player);
                                        player.zone.load_Me_To_Another(player);
                                        Service.getInstance().sendFlagBag(player);
                                        Service.getInstance().Send_Caitrang(player);
                                        PlayerService.gI().sendInfoHpMpMoney(player);
                                        Service.getInstance().Send_Info_NV(player);
                                    } else {
                                        Service.getInstance().sendThongBao(player, "Th√°o h·∫øt 5 m√≥n ƒë·∫ßu ƒëang m·∫∑c ra nha");
                                    }
                                } else {
                                    Service.getInstance().sendThongBao(player, "Balo ƒë·∫ßy");
                                }
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendMoney(player);
                                break;
                            case 7:
                                Input.gI().createFormBuffDanhHieu(player);
                                break;
                        }
                        break;
                    case ConstNpc.VAO_MAP_NGOAI_VUC:
                        switch (select) {
                            case 0:
                                ChangeMapService.gI().goToHallowen(player);
                                break;
                            case 1:
                                ChangeMapService.gI().goToHanhTinhBangGia(player);
                                break;
                            case 2:
                                ChangeMapService.gI().goToDiaNguc(player);
                                break;
                        }
                        break;
                    // c√° ti√™n tri -> m·ªü ƒët zeno
                    case ConstNpc.MO_DE_TU:
                        try {
                        switch (select) {
                            case 0:
                                Item item = InventoryService.gI().findItemBagByOption(player, 1459, 240, 10);
                                if (item == null) {
                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß y√™u c·∫ßu");
                                    return;
                                }
                                InventoryService.gI().subQuantityItemsBag(player, item, 1);
                                InventoryService.gI().sendItemBags(player);
                                PetService.gI().changeZenoPet(player, 0);
                                break;
                            case 1:
                                Item item1 = InventoryService.gI().findItemBagByOption(player, 1459, 240, 10);
                                if (item1 == null) {
                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß y√™u c·∫ßu");
                                    return;
                                }
                                InventoryService.gI().subQuantityItemsBag(player, item1, 1);
                                InventoryService.gI().sendItemBags(player);
                                PetService.gI().changeZenoPet(player, 1);
                                break;
                            case 2:
                                Item item2 = InventoryService.gI().findItemBagByOption(player, 1459, 240, 10);
                                if (item2 == null) {
                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß y√™u c·∫ßu");
                                    return;
                                }
                                InventoryService.gI().subQuantityItemsBag(player, item2, 1);
                                InventoryService.gI().sendItemBags(player);
                                PetService.gI().changeZenoPet(player, 2);
                                break;
                        }
                        break;
                    } catch (Exception e) {
                        System.out.println("Loi mo de tu zeno");
                    }
                    case ConstNpc.DE_TU_MABU:
                        try {
                        switch (select) {
                            case 0:
                                Item itemMabu1 = InventoryService.gI().findItemBagByTemp(player, 1538);
                                if (itemMabu1 == null) {
                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß y√™u c·∫ßu");
                                    return;
                                }
                                InventoryService.gI().subQuantityItemsBag(player, itemMabu1, 1);
                                InventoryService.gI().sendItemBags(player);
                                PetService.gI().changeMabuPet(player, 0);
                                break;
                            case 1:
                                Item itemMabu2 = InventoryService.gI().findItemBagByTemp(player, 1538);
                                if (itemMabu2 == null) {
                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß y√™u c·∫ßu");
                                    return;
                                }
                                InventoryService.gI().subQuantityItemsBag(player, itemMabu2, 1);
                                InventoryService.gI().sendItemBags(player);
                                PetService.gI().changeMabuPet(player, 1);
                                break;
                            case 2:
                                Item itemMabu3 = InventoryService.gI().findItemBagByTemp(player, 1538);
                                if (itemMabu3 == null) {
                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß y√™u c·∫ßu");
                                    return;
                                }
                                InventoryService.gI().subQuantityItemsBag(player, itemMabu3, 1);
                                InventoryService.gI().sendItemBags(player);
                                PetService.gI().changeMabuPet(player, 2);
                                break;
                        }
                        break;
                    } catch (Exception e) {
                        System.out.println("Loi mo de tu mabu");
                    }
                    case ConstNpc.DE_TU_BERUS:
                        try {
                        switch (select) {
                            case 0:
                                Item itemBerus1 = InventoryService.gI().findItemBagByTemp(player, 1539);
                                if (itemBerus1 == null) {
                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß y√™u c·∫ßu");
                                    return;
                                }
                                InventoryService.gI().subQuantityItemsBag(player, itemBerus1, 1);
                                InventoryService.gI().sendItemBags(player);
                                PetService.gI().changeBerusPet(player, 0);
                                break;
                            case 1:
                                Item itemBerus2 = InventoryService.gI().findItemBagByTemp(player, 1539);
                                if (itemBerus2 == null) {
                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß y√™u c·∫ßu");
                                    return;
                                }
                                InventoryService.gI().subQuantityItemsBag(player, itemBerus2, 1);
                                InventoryService.gI().sendItemBags(player);
                                PetService.gI().changeBerusPet(player, 1);
                                break;
                            case 2:
                                Item itemBerus3 = InventoryService.gI().findItemBagByTemp(player, 1539);
                                if (itemBerus3 == null) {
                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß y√™u c·∫ßu");
                                    return;
                                }
                                InventoryService.gI().subQuantityItemsBag(player, itemBerus3, 1);
                                InventoryService.gI().sendItemBags(player);
                                PetService.gI().changeBerusPet(player, 2);
                                break;
                        }
                        break;
                    } catch (Exception e) {
                        System.out.println("Loi mo de tu berus");
                    }
                    case ConstNpc.DE_TU_ZENO:
                        try {
                        switch (select) {
                            case 0:
                                Item itemZeno1 = InventoryService.gI().findItemBagByTemp(player, 1540);
                                if (itemZeno1 == null) {
                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß y√™u c·∫ßu");
                                    return;
                                }
                                InventoryService.gI().subQuantityItemsBag(player, itemZeno1, 1);
                                InventoryService.gI().sendItemBags(player);
                                PetService.gI().changeZenoPet(player, 0);
                                break;
                            case 1:
                                Item itemZeno2 = InventoryService.gI().findItemBagByTemp(player, 1540);
                                if (itemZeno2 == null) {
                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß y√™u c·∫ßu");
                                    return;
                                }
                                InventoryService.gI().subQuantityItemsBag(player, itemZeno2, 1);
                                InventoryService.gI().sendItemBags(player);
                                PetService.gI().changeZenoPet(player, 1);
                                break;
                            case 2:
                                Item itemZeno3 = InventoryService.gI().findItemBagByTemp(player, 1540);
                                if (itemZeno3 == null) {
                                    Service.getInstance().sendThongBao(player, "Kh√¥ng ƒë·ªß y√™u c·∫ßu");
                                    return;
                                }
                                InventoryService.gI().subQuantityItemsBag(player, itemZeno3, 1);
                                InventoryService.gI().sendItemBags(player);
                                PetService.gI().changeZenoPet(player, 2);
                                break;
                        }
                        break;
                    } catch (Exception e) {
                        System.out.println("Loi mo de tu zeno");
                    }
                    case ConstNpc.INFO_ALL:
                        switch (select) {
                            case 0:
                                NpcService.gI().createMenuConMeo(player, ConstNpc.INFO_ALL, 12713,
                                        "|7|TH√îNG TIN NH√ÇN V·∫¨T"
                                        + "\b|5|HP b·∫£n th√¢n: " + Util.format(player.nPoint.hp) + "/" + Util.powerToString(player.nPoint.hpMax)
                                        + "\bKI b·∫£n th√¢n: " + Util.format(player.nPoint.mp) + "/" + Util.powerToString(player.nPoint.mpMax)
                                        + "\bS·ª©c ƒë√°nh: " + Util.format(player.nPoint.dame)
                                        + "\bGi√°p: " + Util.format(player.nPoint.def)
                                        //                                        + "\b|4|HP G·ªëc: " + Util.format(player.nPoint.hpg)
                                        //                                        + "\bKI G·ªëc: " + Util.format(player.nPoint.mpg)
                                        //                                        + "\bS·ª©c ƒë√°nh G·ªëc: " + Util.format(player.nPoint.dameg)
                                        //                                        + "\bGi√°p G·ªëc: " + Util.format(player.nPoint.defg)
                                        + "\b|8|-V√†ng: " + Util.format(player.inventory.gold)
                                        + "   -Ng·ªçc: " + Util.format(player.inventory.gem)
                                        + "   -H.Ng·ªçc: " + Util.format(player.inventory.ruby)
                                        + "\b|5|T·ªïng v√†ng nh·∫∑t: " + Util.format(player.vangnhat)
                                        + "\b|3|T·ªïng H·ªìng ng·ªçc nh·∫∑t: " + Util.format(player.hngocnhat),
                                        "Th√¥ng tin\n nh√¢n v·∫≠t", "Th√¥ng tin\nƒë·ªá t·ª≠", "Th√¥ng tin\nƒë·ªì m·∫∑c");
                                break;
                            case 1:
                                NpcService.gI().createMenuConMeo(player, ConstNpc.INFO_ALL, 12713,
                                        "|7|TH√îNG TIN ƒê·ªÜ T·ª¨"
                                        + "\b\b|7|H√†nh tinh: " + Service.getInstance().get_HanhTinh(player.pet.gender)
                                        + "\b|5|HP ƒê·ªÜ T·ª¨: " + Util.format(player.pet.nPoint.hp) + "/" + Util.powerToString(player.pet.nPoint.hpMax)
                                        + "\bKI ƒê·ªÜ T·ª¨: " + Util.format(player.pet.nPoint.mp) + "/" + Util.powerToString(player.pet.nPoint.mpMax)
                                        + "\bS·ª©c ƒë√°nh: " + Util.format(player.pet.nPoint.dame)
                                        + "\bGi√°p: " + Util.format(player.pet.nPoint.def)
                                        + "\b|4|HP G·ªëc: " + Util.format(player.pet.nPoint.hpg)
                                        + "\bKI G·ªëc: " + Util.format(player.pet.nPoint.mpg)
                                        + "\bS·ª©c ƒë√°nh G·ªëc: " + Util.format(player.pet.nPoint.dameg)
                                        + "\bGi√°p G·ªëc: " + Util.format(player.pet.nPoint.defg),
                                        "Th√¥ng tin\n nh√¢n v·∫≠t", "Th√¥ng tin\nƒë·ªá t·ª≠", "Th√¥ng tin\nƒë·ªì m·∫∑c");
                                break;
                            case 2:
                                NpcService.gI().createMenuConMeo(player, ConstNpc.CHISODO, 12713,
                                        "|1|B·∫°n mu·ªën xem ch·ªâ s·ªë ƒë·ªì b·ªã gi·ªõi h·∫°n hi·ªán th·ªã:",
                                        "Ch·ªâ s·ªë\n√¥ 1", "Ch·ªâ s·ªë\n√¥ 2", "Ch·ªâ s·ªë\n√¥ 3",
                                        "Ch·ªâ s·ªë\n√¥ 4", "Ch·ªâ s·ªë\n√¥ 5", "Ch·ªâ s·ªë\n√¥ 6",
                                        "Ch·ªâ s·ªë\n√¥ 7", "Ch·ªâ s·ªë\n√¥ 8", "Ch·ªâ s·ªë\n√¥ 9",
                                        "Ch·ªâ s·ªë\n√¥ 10", "Ch·ªâ s·ªë\n√¥ 11", "Ch·ªâ s·ªë\n√¥ 12");
                                break;
                        }
                        break;
                    case ConstNpc.CHISODO: {
                        Item it = player.inventory.itemsBody.get(select);
                        if (it.quantity < 1) {
                            NpcService.gI().createMenuConMeo(player, ConstNpc.CHISODO, 12713,
                                    "|7|√î n√†y kh√¥ng c√≥ ƒë·ªì!!!"
                                    + "\n|2|B·∫°n mu·ªën xem ch·ªâ s·ªë ƒë·ªì b·ªã gi·ªõi h·∫°n hi·ªán th·ªã:",
                                    "Ch·ªâ s·ªë\n√¥ 1", "Ch·ªâ s·ªë\n√¥ 2", "Ch·ªâ s·ªë\n√¥ 3",
                                    "Ch·ªâ s·ªë\n√¥ 4", "Ch·ªâ s·ªë\n√¥ 5", "Ch·ªâ s·ªë\n√¥ 6",
                                    "Ch·ªâ s·ªë\n√¥ 7", "Ch·ªâ s·ªë\n√¥ 8", "Ch·ªâ s·ªë\n√¥ 9",
                                    "Ch·ªâ s·ªë\n√¥ 10", "Ch·ªâ s·ªë\n√¥ 11", "Ch·ªâ s·ªë\n√¥ 12");
                            return;
                        }
                        NpcService.gI().createMenuConMeo(player, ConstNpc.CHISODO, 12713,
                                "|2|T√™n V·∫≠t ph·∫©m: " + it.template.name
                                + "\n|7|Ch·ªâ s·ªë:"
                                + "\n|6|" + it.getInfo(),
                                "Ch·ªâ s·ªë\n√¥ 1", "Ch·ªâ s·ªë\n√¥ 2", "Ch·ªâ s·ªë\n√¥ 3",
                                "Ch·ªâ s·ªë\n√¥ 4", "Ch·ªâ s·ªë\n√¥ 5", "Ch·ªâ s·ªë\n√¥ 6",
                                "Ch·ªâ s·ªë\n√¥ 7", "Ch·ªâ s·ªë\n√¥ 8", "Ch·ªâ s·ªë\n√¥ 9",
                                "Ch·ªâ s·ªë\n√¥ 10", "Ch·ªâ s·ªë\n√¥ 11", "Ch·ªâ s·ªë\n√¥ 12");
                    }
                    break;
                    case ConstNpc.ADMIN_DANH_HIEU: {
                        switch (select) {
                            case 0:
                                if (player.lastTimeTitle1 == 0) {
                                    player.lastTimeTitle1 += System.currentTimeMillis() + (1000 * 60 * 60 * 24 * 7);
                                } else {
                                    player.lastTimeTitle1 += (1000 * 60 * 60 * 24 * 7);
                                }
                                player.isTitleUse1 = true;
                                Service.getInstance().point(player);
                                Service.getInstance().sendTitle(player, 888);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c 7 ng√†y Danh hi·ªáu ƒê·∫°i Th·∫ßn");
                                break;
                            case 1:
                                if (player.lastTimeTitle2 == 0) {
                                    player.lastTimeTitle2 += System.currentTimeMillis() + (1000 * 60 * 60 * 24 * 7);
                                } else {
                                    player.lastTimeTitle2 += (1000 * 60 * 60 * 24 * 7);
                                }
                                player.isTitleUse2 = true;
                                Service.getInstance().point(player);
                                Service.getInstance().sendTitle(player, 889);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c 7 ng√†y Danh hi·ªáu C·∫ßn Th·ªß");
                                break;
                            case 2:
                                if (player.lastTimeTitle3 == 0) {
                                    player.lastTimeTitle3 += System.currentTimeMillis() + (1000 * 60 * 60 * 24 * 7);
                                } else {
                                    player.lastTimeTitle3 += (1000 * 60 * 60 * 24 * 7);
                                }
                                player.isTitleUse3 = true;
                                Service.getInstance().point(player);
                                Service.getInstance().sendTitle(player, 890);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c 7 ng√†y Danh hi·ªáu Tu·ªïi Th∆°");
                                break;
                            case 3:
                                if (player.lastTimeTitle4 == 0) {
                                    player.lastTimeTitle4 += System.currentTimeMillis() + (1000 * 60 * 60 * 24 * 7);
                                } else {
                                    player.lastTimeTitle4 += (1000 * 60 * 60 * 24 * 7);
                                }
                                player.isTitleUse4 = true;
                                Service.getInstance().point(player);
                                Service.getInstance().sendTitle(player, 891);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c 7 ng√†y Danh hi·ªáu Th·ª£ ng·ªçc");
                                break;
                        }
                    }
                    break;
                    case ConstNpc.MENU_DANHHIEU: {
                        switch (select) {
                            case 0:
                                if (player.lastTimeTitle1 > 0) {
                                    Service.getInstance().removeTitle(player);
                                    player.isTitleUse1 = !player.isTitleUse1;
                                    Service.getInstance().point(player);
                                    Service.getInstance().sendThongBao(player, "ƒê√£ " + (player.isTitleUse1 == true ? "B·∫≠t" : "T·∫Øt") + " Danh Hi·ªáu!");
                                    Service.getInstance().sendTitle(player, 892);
                                    Service.getInstance().sendTitle(player, 891);
                                    Service.getInstance().sendTitle(player, 890);
                                    Service.getInstance().sendTitle(player, 889);
                                    Service.getInstance().sendTitle(player, 888);
                                    Service.getInstance().removeTitle(player);
                                    break;
                                }
                                break;
                            case 1:
                                if (player.lastTimeTitle2 > 0) {
                                    Service.getInstance().removeTitle(player);
                                    player.isTitleUse2 = !player.isTitleUse2;
                                    Service.getInstance().point(player);
                                    Service.getInstance().sendThongBao(player, "ƒê√£ " + (player.isTitleUse2 == true ? "B·∫≠t" : "T·∫Øt") + " Danh Hi·ªáu!");
                                    Service.getInstance().sendTitle(player, 892);
                                    Service.getInstance().sendTitle(player, 891);
                                    Service.getInstance().sendTitle(player, 890);
                                    Service.getInstance().sendTitle(player, 889);
                                    Service.getInstance().sendTitle(player, 888);
                                    Service.getInstance().removeTitle(player);
                                    break;
                                }
                                break;
                            case 2:
                                if (player.lastTimeTitle3 > 0) {
                                    Service.getInstance().removeTitle(player);
                                    player.isTitleUse3 = !player.isTitleUse3;
                                    Service.getInstance().point(player);
                                    Service.getInstance().sendThongBao(player, "ƒê√£ " + (player.isTitleUse3 == true ? "B·∫≠t" : "T·∫Øt") + " Danh Hi·ªáu!");
                                    Service.getInstance().sendTitle(player, 892);
                                    Service.getInstance().sendTitle(player, 891);
                                    Service.getInstance().sendTitle(player, 890);
                                    Service.getInstance().sendTitle(player, 889);
                                    Service.getInstance().sendTitle(player, 888);
                                    Service.getInstance().removeTitle(player);
                                    break;
                                }
                                break;
                            case 3:
                                if (player.lastTimeTitle4 > 0) {
                                    Service.getInstance().removeTitle(player);
                                    player.isTitleUse4 = !player.isTitleUse4;
                                    Service.getInstance().point(player);
                                    Service.getInstance().sendThongBao(player, "ƒê√£ " + (player.isTitleUse4 == true ? "B·∫≠t" : "T·∫Øt") + " Danh Hi·ªáu!");
                                    Service.getInstance().sendTitle(player, 892);
                                    Service.getInstance().sendTitle(player, 891);
                                    Service.getInstance().sendTitle(player, 890);
                                    Service.getInstance().sendTitle(player, 889);
                                    Service.getInstance().sendTitle(player, 888);
                                    Service.getInstance().removeTitle(player);
                                    break;
                                }
                                break;
                            case 4:
                                if (player.lastTimeTitle5 > 0) {
                                    Service.getInstance().removeTitle(player);
                                    player.isTitleUse5 = !player.isTitleUse5;
                                    Service.getInstance().point(player);
                                    Service.getInstance().sendThongBao(player, "ƒê√£ " + (player.isTitleUse5 == true ? "B·∫≠t" : "T·∫Øt") + " Danh Hi·ªáu!");
                                    Service.getInstance().sendTitle(player, 892);
                                    Service.getInstance().sendTitle(player, 891);
                                    Service.getInstance().sendTitle(player, 890);
                                    Service.getInstance().sendTitle(player, 889);
                                    Service.getInstance().sendTitle(player, 888);
                                    Service.getInstance().removeTitle(player);
                                    break;
                                }
                                break;
                        }
                    }
                    break;
                    case ConstNpc.CONFIRM_REMOVE_ALL_ITEM_LUCKY_ROUND:
                        if (select == 0) {
                            for (int i = 0; i < player.inventory.itemsBoxCrackBall.size(); i++) {
                                player.inventory.itemsBoxCrackBall.set(i, ItemService.gI().createItemNull());
                            }
                            Service.getInstance().sendThongBao(player, "ƒê√£ x√≥a h·∫øt v·∫≠t ph·∫©m trong r∆∞∆°ng");
                        }
                        break;
                    case ConstNpc.MENU_FIND_PLAYER:
                        Player p = (Player) PLAYERID_OBJECT.get(player.id);
                        if (p != null) {
                            switch (select) {
                                case 0:
                                    if (p.zone != null) {
                                        ChangeMapService.gI().changeMapYardrat(player, p.zone, p.location.x,
                                                p.location.y);
                                    }
                                    break;
                                case 1:
                                    if (p.zone != null) {
                                        ChangeMapService.gI().changeMap(p, player.zone, player.location.x,
                                                player.location.y);
                                    }
                                    break;
                                case 2:
                                    if (p != null) {
                                        Input.gI().createFormChangeName(player, p);
                                    }
                                    break;
                                case 3:
                                    if (p != null) {
                                        String[] selects = new String[]{"ƒê·ªìng √Ω", "H·ªßy"};
                                        NpcService.gI().createMenuConMeo(player, ConstNpc.BAN_PLAYER, -1,
                                                "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ban " + p.name, selects, p);
                                    }
                                    break;
                            }
                        }
                        break;
                }
            }
        };
    }

    public static void openMenuSuKien(Player player, Npc npc, int tempId, int select) {
        switch (Manager.EVENT_SEVER) {
            case 0:
                break;
            case 1:// hlw
                switch (select) {
                    case 0:
                        if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                            Item keo = InventoryService.gI().finditemnguyenlieuKeo(player);
                            Item banh = InventoryService.gI().finditemnguyenlieuBanh(player);
                            Item bingo = InventoryService.gI().finditemnguyenlieuBingo(player);

                            if (keo != null && banh != null && bingo != null) {
                                Item GioBingo = ItemService.gI().createNewItem((short) 2016, 1);

                                // - S·ªë item s·ª± ki·ªán c√≥ trong r∆∞∆°ng
                                InventoryService.gI().subQuantityItemsBag(player, keo, 10);
                                InventoryService.gI().subQuantityItemsBag(player, banh, 10);
                                InventoryService.gI().subQuantityItemsBag(player, bingo, 10);

                                GioBingo.itemOptions.add(new ItemOption(74, 0));
                                InventoryService.gI().addItemBag(player, GioBingo, 0);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player, "ƒê·ªïi qu√† s·ª± ki·ªán th√†nh c√¥ng");
                            } else {
                                Service.getInstance().sendThongBao(player,
                                        "Vui l√≤ng chu·∫©n b·ªã x10 Nguy√™n Li·ªáu K·∫πo, B√°nh Quy, B√≠ Ng√¥ ƒë·ªÉ ƒë·ªïi v·∫≠t ph·∫©m s·ª± ki·ªán");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "H√†nh trang ƒë·∫ßy.");
                        }
                        break;
                    case 1:
                        if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                            Item ve = InventoryService.gI().finditemnguyenlieuVe(player);
                            Item giokeo = InventoryService.gI().finditemnguyenlieuGiokeo(player);

                            if (ve != null && giokeo != null) {
                                Item Hopmaquy = ItemService.gI().createNewItem((short) 2017, 1);
                                // - S·ªë item s·ª± ki·ªán c√≥ trong r∆∞∆°ng
                                InventoryService.gI().subQuantityItemsBag(player, ve, 3);
                                InventoryService.gI().subQuantityItemsBag(player, giokeo, 3);

                                Hopmaquy.itemOptions.add(new ItemOption(74, 0));
                                InventoryService.gI().addItemBag(player, Hopmaquy, 0);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player, "ƒê·ªïi qu√† s·ª± ki·ªán th√†nh c√¥ng");
                            } else {
                                Service.getInstance().sendThongBao(player,
                                        "Vui l√≤ng chu·∫©n b·ªã x3 V√© ƒë·ªïi K·∫πo v√† x3 Gi·ªè k·∫πo ƒë·ªÉ ƒë·ªïi v·∫≠t ph·∫©m s·ª± ki·ªán");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "H√†nh trang ƒë·∫ßy.");
                        }
                        break;
                    case 2:
                        if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                            Item ve = InventoryService.gI().finditemnguyenlieuVe(player);
                            Item giokeo = InventoryService.gI().finditemnguyenlieuGiokeo(player);
                            Item hopmaquy = InventoryService.gI().finditemnguyenlieuHopmaquy(player);

                            if (ve != null && giokeo != null && hopmaquy != null) {
                                Item HopQuaHLW = ItemService.gI().createNewItem((short) 2012, 1);
                                // - S·ªë item s·ª± ki·ªán c√≥ trong r∆∞∆°ng
                                InventoryService.gI().subQuantityItemsBag(player, ve, 3);
                                InventoryService.gI().subQuantityItemsBag(player, giokeo, 3);
                                InventoryService.gI().subQuantityItemsBag(player, hopmaquy, 3);

                                HopQuaHLW.itemOptions.add(new ItemOption(74, 0));
                                HopQuaHLW.itemOptions.add(new ItemOption(30, 0));
                                InventoryService.gI().addItemBag(player, HopQuaHLW, 0);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player,
                                        "ƒê·ªïi qu√† h·ªôp qu√† s·ª± ki·ªán Halloween th√†nh c√¥ng");
                            } else {
                                Service.getInstance().sendThongBao(player,
                                        "Vui l√≤ng chu·∫©n b·ªã x3 H·ªôp Ma Qu·ª∑, x3 V√© ƒë·ªïi K·∫πo v√† x3 Gi·ªè k·∫πo ƒë·ªÉ ƒë·ªïi v·∫≠t ph·∫©m s·ª± ki·ªán");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "H√†nh trang ƒë·∫ßy.");
                        }
                        break;
                }
                break;
            case 2:// 20/11
                switch (select) {
                    case 3:
                        if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                            int evPoint = player.event.getEventPoint();
                            if (evPoint >= 999) {
                                Item HopQua = ItemService.gI().createNewItem((short) 2021, 1);
                                player.event.setEventPoint(evPoint - 999);

                                HopQua.itemOptions.add(new ItemOption(74, 0));
                                HopQua.itemOptions.add(new ItemOption(30, 0));
                                InventoryService.gI().addItemBag(player, HopQua, 0);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c H·ªôp Qu√† Teacher Day");
                            } else {
                                Service.getInstance().sendThongBao(player, "C·∫ßn 999 ƒëi·ªÉm t√≠ch l≈©y ƒë·ªÉ ƒë·ªïi");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "H√†nh trang ƒë·∫ßy.");
                        }
                        break;
                    // case 4:
                    // ShopService.gI().openShopSpecial(player, npc, ConstNpc.SHOP_HONG_NGOC, 0,
                    // -1);
                    // break;
                    default:
                        int n = 0;
                        switch (select) {
                            case 0:
                                n = 1;
                                break;
                            case 1:
                                n = 10;
                                break;
                            case 2:
                                n = 99;
                                break;
                        }

                        if (n > 0) {
                            Item bonghoa = InventoryService.gI().finditemBongHoa(player, n);
                            if (bonghoa != null) {
                                int evPoint = player.event.getEventPoint();
                                player.event.setEventPoint(evPoint + n);
                                ;
                                InventoryService.gI().subQuantityItemsBag(player, bonghoa, n);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c " + n + " ƒëi·ªÉm s·ª± ki·ªán");
                                int pre;
                                int next;
                                String text = null;
                                AttributeManager am = ServerManager.gI().getAttributeManager();
                                switch (tempId) {
                                    case ConstNpc.THAN_MEO_KARIN:
                                        pre = EVENT_COUNT_THAN_MEO / 999;
                                        EVENT_COUNT_THAN_MEO += n;
                                        next = EVENT_COUNT_THAN_MEO / 999;
                                        if (pre != next) {
                                            am.setTime(ConstAttribute.TNSM, 3600);
                                            text = "To√†n b·ªô m√°y ch·ªß tƒÉng ƒë∆∞·ª£c 20% TNSM cho ƒë·ªá t·ª≠ khi ƒë√°nh qu√°i trong 60 ph√∫t.";
                                        }
                                        break;

                                    case ConstNpc.QUY_LAO_KAME:
                                        pre = EVENT_COUNT_QUY_LAO_KAME / 999;
                                        EVENT_COUNT_QUY_LAO_KAME += n;
                                        next = EVENT_COUNT_QUY_LAO_KAME / 999;
                                        if (pre != next) {
                                            am.setTime(ConstAttribute.VANG, 3600);
                                            text = "To√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 100% v√†ng t·ª´ qu√°i trong 60 ph√∫t.";
                                        }
                                        break;

                                    case ConstNpc.THUONG_DE:
                                        pre = EVENT_COUNT_THUONG_DE / 999;
                                        EVENT_COUNT_THUONG_DE += n;
                                        next = EVENT_COUNT_THUONG_DE / 999;
                                        if (pre != next) {
                                            am.setTime(ConstAttribute.KI, 3600);
                                            text = "To√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 20% KI trong 60 ph√∫t.";
                                        }
                                        break;

                                    case ConstNpc.THAN_VU_TRU:
                                        pre = EVENT_COUNT_THAN_VU_TRU / 999;
                                        EVENT_COUNT_THAN_VU_TRU += n;
                                        next = EVENT_COUNT_THAN_VU_TRU / 999;
                                        if (pre != next) {
                                            am.setTime(ConstAttribute.HP, 3600);
                                            text = "To√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 20% HP trong 60 ph√∫t.";
                                        }
                                        break;

                                    case ConstNpc.BILL:
                                        pre = EVENT_COUNT_THAN_HUY_DIET / 999;
                                        EVENT_COUNT_THAN_HUY_DIET += n;
                                        next = EVENT_COUNT_THAN_HUY_DIET / 999;
                                        if (pre != next) {
                                            am.setTime(ConstAttribute.SUC_DANH, 3600);
                                            text = "To√†n b·ªô m√°y ch·ªß ƒë∆∞·ª£c tƒÉng 20% S·ª©c ƒë√°nh trong 60 ph√∫t.";
                                        }
                                        break;
                                }
                                if (text != null) {
                                    Service.getInstance().sendThongBaoAllPlayer(text);
                                }

                            } else {
                                Service.getInstance().sendThongBao(player,
                                        "C·∫ßn √≠t nh·∫•t " + n + " b√¥ng hoa ƒë·ªÉ c√≥ th·ªÉ t·∫∑ng");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "C·∫ßn √≠t nh·∫•t " + n + " b√¥ng hoa ƒë·ªÉ c√≥ th·ªÉ t·∫∑ng");
                        }
                }
                break;
            case 3:
                if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                    Item keogiangsinh = InventoryService.gI().finditemKeoGiangSinh(player);

                    if (keogiangsinh != null && keogiangsinh.quantity >= 99) {
                        Item tatgiangsinh = ItemService.gI().createNewItem((short) 649, 1);
                        // - S·ªë item s·ª± ki·ªán c√≥ trong r∆∞∆°ng
                        InventoryService.gI().subQuantityItemsBag(player, keogiangsinh, 99);

                        tatgiangsinh.itemOptions.add(new ItemOption(74, 0));
                        tatgiangsinh.itemOptions.add(new ItemOption(30, 0));
                        InventoryService.gI().addItemBag(player, tatgiangsinh, 0);
                        InventoryService.gI().sendItemBags(player);
                        Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c T·∫•t,v·ªõ gi√°ng sinh");
                    } else {
                        Service.getInstance().sendThongBao(player,
                                "Vui l√≤ng chu·∫©n b·ªã x99 k·∫πo gi√°ng sinh ƒë·ªÉ ƒë·ªïi v·ªõ t·∫•t gi√°ng sinh");
                    }
                } else {
                    Service.getInstance().sendThongBao(player, "H√†nh trang ƒë·∫ßy.");
                }
                break;
            case 4:
                switch (select) {
                    case 0:
                        if (!player.event.isReceivedLuckyMoney()) {
                            Calendar cal = Calendar.getInstance();
                            int day = cal.get(Calendar.DAY_OF_MONTH);
                            if (day >= 29 && day <= 31) {
                                Item goldBar = ItemService.gI().createNewItem((short) ConstItem.THOI_VANG,
                                        Util.nextInt(1, 50));
                                player.inventory.ruby += Util.nextInt(10, 100);
                                goldBar.quantity = Util.nextInt(1, 50);
                                InventoryService.gI().addItemBag(player, goldBar, 99999);
                                InventoryService.gI().sendItemBags(player);
                                PlayerService.gI().sendInfoHpMpMoney(player);
                                player.event.setReceivedLuckyMoney(true);
                                Service.getInstance().sendThongBao(player,
                                        "Nh·∫≠n l√¨ x√¨ th√†nh c√¥ng,ch√∫c b·∫°n nƒÉm m·ªõi dui d·∫ª");
                            } else if (day > 31) {
                                Service.getInstance().sendThongBao(player, "H·∫øt t·∫øt r·ªìi c√≤n ƒë√≤i l√¨ x√¨");
                            } else {
                                Service.getInstance().sendThongBao(player, "ƒê√£ t·∫øt ƒë√¢u m√† ƒë√≤i l√¨ x√¨");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "B·∫°n ƒë√£ nh·∫≠n l√¨ x√¨ r·ªìi");
                        }
                        break;
                    case 1:
                        ShopService.gI().openShopNormal(player, npc, ConstNpc.SHOP_SU_KIEN_TET, 0, -1);
                        break;
                }
                break;
            case ConstEvent.SU_KIEN_8_3:
                switch (select) {
                    case 3:
                        if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                            int evPoint = player.event.getEventPoint();
                            if (evPoint >= 99) {
                                Item capsule = ItemService.gI().createNewItem((short) 1570, 1);
                                player.event.setEventPoint(evPoint - 99);
                                
                                capsule.itemOptions.add(new ItemOption(74, 0));
                                capsule.itemOptions.add(new ItemOption(30, 0));
                                InventoryService.gI().addItemBag(player, capsule, 0);
                                InventoryService.gI().sendItemBags(player);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c H·ªôp qu√† 8/3");
                            } else {
                                Service.getInstance().sendThongBao(player, "C·∫ßn 99 ƒëi·ªÉm t√≠ch l≈©y ƒë·ªÉ ƒë·ªïi");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "H√†nh trang ƒë·∫ßy.");
                        }
                        break;
                    default:
                        int n = 0;
                        switch (select) {
                            case 0:
                                n = 1;
                                break;
                            case 1:
                                n = 10;
                                break;
                            case 2:
                                n = 99;
                                break;
                        }
                        if (n > 0) {
                            Item bonghoa = InventoryService.gI().finditemBongHoa(player, n);
                            if (bonghoa != null) {
                                int evPoint = player.event.getEventPoint();
                                player.event.setEventPoint(evPoint + n);
                                InventoryService.gI().subQuantityItemsBag(player, bonghoa, n);
                                Service.getInstance().sendThongBao(player, "B·∫°n nh·∫≠n ƒë∆∞·ª£c " + n + " ƒëi·ªÉm s·ª± ki·ªán");
                            } else {
                                Service.getInstance().sendThongBao(player,
                                        "C·∫ßn √≠t nh·∫•t " + n + " b√¥ng hoa ƒë·ªÉ c√≥ th·ªÉ t·∫∑ng");
                            }
                        } else {
                            Service.getInstance().sendThongBao(player, "C·∫ßn √≠t nh·∫•t " + n + " b√¥ng hoa ƒë·ªÉ c√≥ th·ªÉ t·∫∑ng");
                        }
                }
                break;
        }
    }

    public static String getMenuSuKien(int id) {
        switch (id) {
            case ConstEvent.KHONG_CO_SU_KIEN:
                return "Ch∆∞a c√≥\n S·ª± Ki·ªán";
            case ConstEvent.SU_KIEN_HALLOWEEN:
                return "S·ª± Ki·ªán\nHaloween";
            case ConstEvent.SU_KIEN_20_11:
                return "S·ª± Ki·ªán\n 20/11";
            case ConstEvent.SU_KIEN_NOEL:
                return "S·ª± Ki·ªán\n Gi√°ng Sinh";
            case ConstEvent.SU_KIEN_TET:
                return "S·ª± Ki·ªán\n T·∫øt Nguy√™n\nƒê√°n 2025";
            case ConstEvent.SU_KIEN_8_3:
                return "S·ª± Ki·ªán\n 8/3";
        }
        return "Ch∆∞a c√≥\n S·ª± Ki·ªán";
    }

    public static String getMenuLamBanh(Player player, int type) {
        switch (type) {
            case 0:// b√°nh t√©t
                if (player.event.isCookingTetCake()) {
                    int timeCookTetCake = player.event.getTimeCookTetCake();
                    if (timeCookTetCake == 0) {
                        return "L·∫•y b√°nh";
                    } else if (timeCookTetCake > 0) {
                        return "ƒêang n·∫•u\nB√°nh T√©t\nC√≤n " + TimeUtil.secToTime(timeCookTetCake);
                    }
                } else {
                    return "N·∫•u\nB√°nh T√©t";
                }
                break;
            case 1:// b√°nh ch∆∞ng
                if (player.event.isCookingChungCake()) {
                    int timeCookChungCake = player.event.getTimeCookChungCake();
                    if (timeCookChungCake == 0) {
                        return "L·∫•y b√°nh";
                    } else if (timeCookChungCake > 0) {
                        return "ƒêang n·∫•u\nB√°nh Ch∆∞ng\nC√≤n " + TimeUtil.secToTime(timeCookChungCake);
                    }
                } else {
                    return "N·∫•u\nB√°nh Ch∆∞ng";
                }
                break;
        }
        return "";
    }

}
